!function(F){function c(c){for(var t,U,B=c[0],l=c[1],s=c[2],d=0,x=[];d<B.length;d++)U=B[d],Object.prototype.hasOwnProperty.call(n,U)&&n[U]&&x.push(n[U][0]),n[U]=0;for(t in l)Object.prototype.hasOwnProperty.call(l,t)&&(F[t]=l[t]);for(a&&a(c);x.length;)x.shift()();return e.push.apply(e,s||[]),Q()}function Q(){for(var F,c=0;c<e.length;c++){for(var Q=e[c],t=!0,B=1;B<Q.length;B++){var l=Q[B];0!==n[l]&&(t=!1)}t&&(e.splice(c--,1),F=U(U.s=Q[0]))}return F}var t={},n={0:0},e=[];function U(c){if(t[c])return t[c].exports;var Q=t[c]={i:c,l:!1,exports:{}};return F[c].call(Q.exports,Q,Q.exports,U),Q.l=!0,Q.exports}U.m=F,U.c=t,U.d=function(F,c,Q){U.o(F,c)||Object.defineProperty(F,c,{enumerable:!0,get:Q})},U.r=function(F){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(F,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(F,"__esModule",{value:!0})},U.t=function(F,c){if(1&c&&(F=U(F)),8&c)return F;if(4&c&&"object"==typeof F&&F&&F.__esModule)return F;var Q=Object.create(null);if(U.r(Q),Object.defineProperty(Q,"default",{enumerable:!0,value:F}),2&c&&"string"!=typeof F)for(var t in F)U.d(Q,t,function(c){return F[c]}.bind(null,t));return Q},U.n=function(F){var c=F&&F.__esModule?function(){return F.default}:function(){return F};return U.d(c,"a",c),c},U.o=function(F,c){return Object.prototype.hasOwnProperty.call(F,c)},U.p="";var B=window.webpackJsonp=window.webpackJsonp||[],l=B.push.bind(B);B.push=c,B=B.slice();for(var s=0;s<B.length;s++)c(B[s]);var a=l;e.push([770,1]),Q()}({369:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/NzBiMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzNjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///369\n")},371:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/YzJjMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzNzEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///371\n")},391:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZnMgKGlnbm9yZWQpP2RiNDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMzkxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///391\n")},400:function(module,exports){eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 400;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2FjaGVhYmxlLXJlcXVlc3Qvbm9kZV9tb2R1bGVzL2tleXYvc3JjIHN5bmM/NDc2OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLFdBQVc7QUFDbEQ7QUFDQTtBQUNBIiwiZmlsZSI6IjQwMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHdlYnBhY2tFbXB0eUNvbnRleHQocmVxKSB7XG5cdHZhciBlID0gbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJ1wiKTtcblx0ZS5jb2RlID0gJ01PRFVMRV9OT1RfRk9VTkQnO1xuXHR0aHJvdyBlO1xufVxud2VicGFja0VtcHR5Q29udGV4dC5rZXlzID0gZnVuY3Rpb24oKSB7IHJldHVybiBbXTsgfTtcbndlYnBhY2tFbXB0eUNvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tFbXB0eUNvbnRleHQ7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tFbXB0eUNvbnRleHQ7XG53ZWJwYWNrRW1wdHlDb250ZXh0LmlkID0gNDAwOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///400\n")},407:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVjb21wcmVzcy1yZXNwb25zZSAoaWdub3JlZCk/NTA2MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI0MDcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///407\n")},408:function(module,exports){eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 408;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ290L3NvdXJjZSBzeW5jPzcwYjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxXQUFXO0FBQ2xEO0FBQ0E7QUFDQSIsImZpbGUiOiI0MDguanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB3ZWJwYWNrRW1wdHlDb250ZXh0KHJlcSkge1xuXHR2YXIgZSA9IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIidcIik7XG5cdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0dGhyb3cgZTtcbn1cbndlYnBhY2tFbXB0eUNvbnRleHQua2V5cyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gW107IH07XG53ZWJwYWNrRW1wdHlDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrRW1wdHlDb250ZXh0O1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrRW1wdHlDb250ZXh0O1xud2VicGFja0VtcHR5Q29udGV4dC5pZCA9IDQwODsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///408\n")},444:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYnVmZmVyIChpZ25vcmVkKT85MTYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjQ0NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///444\n")},445:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY3J5cHRvIChpZ25vcmVkKT8xNmU0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjQ0NS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///445\n")},527:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY3J5cHRvIChpZ25vcmVkKT9mNTI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjUyNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///527\n")},725:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vb3MgKGlnbm9yZWQpP2ZhNTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNzI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///725\n")},766:function(module,exports,__webpack_require__){eval("var api = __webpack_require__(767);\n            var content = __webpack_require__(768);\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2Nzcy9zdHlsZS5zY3NzPzJlNGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLEdBQTJFO0FBQzdGLDBCQUEwQixtQkFBTyxDQUFDLEdBQXFHOztBQUV2STs7QUFFQTtBQUNBLDBCQUEwQixRQUFTO0FBQ25DOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7Ozs7QUFJQSIsImZpbGUiOiI3NjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cbnZhciBleHBvcnRlZCA9IGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB7fTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZWQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///766\n")},768:function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(769);\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Maven+Pro:500&display=swap&subset=vietnamese);"]);\n// Module\nexports.push([module.i, ".sidebar .contacts h1,.sidebar .discussions h1{font-weight:800;font-size:24px;color:#212529;margin-bottom:0;padding-bottom:18px}.sidebar .contacts .contact .avatar-md,.sidebar .discussions .single .avatar-md,.main .chat .top .avatar-md{margin-right:20px;cursor:pointer}.sidebar .contacts .contact .data,.sidebar .discussions .single .data,.main .chat .top .data{display:flex;display:-ms-flexbox;justify-content:space-between;-ms-flex-align:flex-start;align-items:flex-start;margin-right:auto;flex-wrap:wrap;width:100%;overflow:hidden}.sidebar .contacts .contact .data h5,.sidebar .discussions .single .data h5,.main .chat .top .data h5{font-weight:700;font-size:16px;color:#212529;margin-bottom:5px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:60%}.sidebar .contacts .contact .data span,.sidebar .discussions .single .data span,.main .chat .top .data span{font-weight:400;font-size:14px;white-space:nowrap}.sidebar .contacts .contact .data p,.sidebar .discussions .single .data p,.main .chat .top .data p{font-weight:400;font-size:16px;line-height:1.4;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%}.sidebar .contacts .contact,.sidebar .discussions .single{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:20px 0;border-bottom:2px solid #fbfbfb}.sidebar .contacts .contact:last-of-type,.sidebar .discussions .single:last-of-type{border-bottom:2px solid transparent !important}.requests .content .form-group label{font-weight:700;font-size:14px;color:#212529;margin-bottom:10px;text-transform:uppercase}@keyframes wave{0%,60%,100%{-webkit-transform:initial;-ms-transform:initial;transform:initial}30%{transform:translateY(-5px)}}@keyframes pulse{0%{box-shadow:0 0 0 0 rgba(0,0,0,0.1)}100%{box-shadow:0 0 0 50px transparent}}@keyframes call-end{0%{box-shadow:0 0 0 0 rgba(0,0,0,0.1)}100%{box-shadow:0 0 0 20px transparent}}@keyframes float{100%{-webkit-transform:translateY(20px);-ms-transform:translateY(20px);transform:translateY(20px)}}.aside{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;height:100vh;width:100%;min-width:550px;max-width:550px;background:linear-gradient(145deg, #8ca7ff 0, #8b54f9 50%, #6610f2 100%)}.aside .preference{width:100%;max-width:340px;margin:0 auto;text-align:center}.aside .preference h2{font-weight:800;font-size:46px;color:#fff;margin-bottom:23px}.aside .preference p{font-weight:400;font-size:16px;color:#fff;line-height:1.7;margin-bottom:30px}.aside .preference .button{background-color:#fff;color:#2196f3;max-width:300px;box-shadow:none !important}.avatar-xl{height:60px;width:100%;min-width:60px;max-width:60px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-lg{height:50px;width:100%;min-width:50px;max-width:50px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-md{height:45px;width:100%;min-width:45px;max-width:45px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-sm{height:30px;width:100%;min-width:30px;max-width:30px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-xxl{width:200px;height:200px;border-radius:100%}.tooltip{font-weight:600;font-size:15px}.tooltip.show{opacity:1}.tooltip-inner{background-color:#212529;color:#fff;padding:5px 12px;border-radius:6px}.call{background:linear-gradient(145deg, #8ca7ff 0, #8b54f9 50%, #6610f2 100%)}.call video{width:100%;align-self:center}.call .video-chat{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:stretch;align-items:stretch;height:100%}.call .options{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;margin-bottom:37px;position:absolute;bottom:0}.call .options .option{color:#fff;line-height:0;padding:0 20px}.call .options .option.call-end{padding:15px;background:#e05b5d;border-radius:100%;animation:call-end 2s infinite;color:#fff;line-height:0;margin:0 20px}.call .options .option:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1);-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear;opacity:0.9}.call .back{padding:18px;background:rgba(0,0,0,0.05);border-radius:100%;color:#fff;line-height:0;-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear}.call .back:hover{-webkit-transform:translateY(10px) translateZ(0);-ms-transform:translateY(10px) translateZ(0);transform:translateY(10px) translateZ(0)}.call .content{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;height:100%;text-align:center}.call .content .avatar-xxl{margin-bottom:56px;animation:pulse 2s infinite;cursor:pointer}.call .content .participant{margin-bottom:56px}.call .content .participant span{font-weight:500;color:#fff;display:block;text-align:center}.call .content .options{position:unset;margin-bottom:60px}.call::-webkit-scrollbar{display:none}.btn,.btn.active:not(:disabled):not(.disabled),.btn:not(:disabled):not(.disabled):active,.btn:active,.btn:focus,.btn:hover{border:none;box-shadow:none;outline:0}.btn{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s}.btn:disabled{opacity:1}.button{width:100%;padding:16px 25px;background-color:#2196f3;font-weight:500;color:#fff;border-radius:6px;-webkit-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;-moz-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important}.button:hover{color:#fff;opacity:0.9}.show>.btn.dropdown-toggle{border:none;-webkit-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;-moz-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important}.create.btn:not(:disabled):not(.disabled):active{box-shadow:0 0 30px 5px rgba(0,0,0,0.04)}.form-control{width:100% !important;padding:25px 15px;background-color:#f5f5f5;font-weight:500;font-size:16px;color:#bdbac2 !important;border:none;border-radius:6px;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none}.form-control:focus{background-color:#f5f5f5;color:none !important;box-shadow:none}.form-control::placeholder{font-weight:500;font-size:16px;color:#bdbac2}.form-control[readonly]{background-color:#f5f5f5}.dropdown-menu{border:none;border-radius:6px;-webkit-box-shadow:0 0 20px rgba(0,0,0,0.04);-moz-box-shadow:0 0 20px rgba(0,0,0,0.04);box-shadow:0 0 20px rgba(0,0,0,0.04);min-width:14rem;padding:10px;margin-top:10px}.dropdown-menu hr{margin:10px;border-top:2px solid #fbfbfb}.dropdown-menu .material-icons{margin-right:10px}.dropdown-item{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:10px;font-size:15px;color:#bdbac2;-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;border-radius:6px;cursor:pointer}.dropdown-item:focus{background-color:0 0;color:#bdbac2;border:none;border-radius:6px;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;outline:0}.dropdown-item:hover{background-color:#f5f5f5;color:#bdbac2;border-radius:6px}.dropdown-item:active,.dropdown-item.active{background-color:#2196f3 !important;color:#fff !important}.switch{height:18px;width:100%;min-width:42px;max-width:42px;display:inline-block;position:relative;margin-bottom:0}.switch input{width:0;height:0;opacity:0}.slider{position:absolute;top:0;left:0;right:0;bottom:0;-webkit-transition:.4s;-moz-transition:.4s;transition:.4s;background-color:#ccc;cursor:pointer}.slider:before{position:absolute;left:3px;bottom:3px;width:12px;height:12px;-webkit-transition:.4s;-moz-transition:.4s;transition:.4s;background-color:#fff;content:\'\'}.slider.round{border-radius:34px}.slider.round:before{border-radius:50%}input:checked+.slider{background-color:#2196f3 !important}input:checked+.slider:before{transform:translateX(24px)}.main{width:100%;height:100vh;margin:0}.main .chat{-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);display:flex;display:-ms-flexbox;justify-content:space-between;flex-direction:column;height:100%}.main .chat .content{padding:20px 0 0;overflow-x:hidden;overflow-y:scroll;display:flex;height:calc(100vh - 218px)}.main .chat .content .message{display:flex;display:-ms-flexbox;-ms-flex-align:flex-end;align-items:flex-end;margin-bottom:20px}.main .chat .content .message .text-main .text{padding:15px;background:#fff;border-radius:6px;border-radius:15px;-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);display:inline-block;max-width:450px}.main .chat .content .message .text-main .text .embedded-link{text-decoration:underline}.main .chat .content .message .text-main .text .embedded-link:hover{color:inherit;text-decoration:none}.main .chat .content .message .text-main .text .microlink_card .microlink_card__content{width:0}.main .chat .content .message .text-main .text .microlink_card:hover{color:initial}.main .chat .content .message .text-main .text .attachment{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center}.main .chat .content .message .text-main .text .attachment .file h5{font-weight:400;font-size:16px;color:#2196f3;line-height:1.4;margin-bottom:5px}.main .chat .content .message .text-main .text .attachment .file a:hover{text-decoration:underline}.main .chat .content .message .text-main .text .attachment .attach{width:42px;height:42px;padding:12px;margin-right:15px}.main .chat .content .message .text-main .text.typing{padding:8px 12px}.main .chat .content .message .text-main .text.me{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;background-color:#2196f3}.main .chat .content .message .text-main .text.me.image{background-color:#f5f5f5}.main .chat .content .message .text-main .text.me .attachment .attach{background-color:#fff;color:#2196f3}.main .chat .content .message .text-main .text.me .attachment .file h5,.main .chat .content .message .text-main .text.me .attachment .file a:hover{color:#fff}.main .chat .content .message .text-main .text.me .attachment .file span{color:#fff;text-align:left}.main .chat .content .message .text-main .text.me>div>p{color:#fff}.main .chat .content .message .text-main .text>div>p{font-weight:400;font-size:16px;color:#a0a0a0;line-height:1.4;word-break:break-all}.main .chat .content .message .text-main>span{color:#a0a0a0}.main .chat .content .message:last-child{margin-bottom:50px}.main .chat .content .message.me{justify-content:flex-end}.main .chat .content .message.me:last-child{margin-bottom:43px}.main .chat .content .message.me span{text-align:right}.main .chat .content .message .avatar-md{margin-right:15px}.main .chat .content .message .text-group{display:flex;display:-ms-flexbox;-ms-flex-align:flex-start;align-items:flex-start;flex-direction:column;width:100%;margin-bottom:10px}.main .chat .content .message .text-group>a{display:contents}.main .chat .content .message .text-group.me{align-items:flex-end}.main .chat .content .message span{font-weight:400;font-size:14px;display:block}.main .chat .content .message span>.material-icons{font-weight:600;font-size:14px;margin-right:5px;position:relative;top:2px}.main .chat .content .wave .dot{width:6px;height:6px;background:#bdbac2;border-radius:100%;animation:wave 1.3s linear infinite;display:inline-block;margin-right:1px}.main .chat .content .wave .dot:last-of-type{margin-right:0}.main .chat .content .wave .dot:nth-child(2){animation-delay:-1.1s}.main .chat .content .wave .dot:nth-child(3){animation-delay:-0.9s}.main .chat .content>div{margin-top:auto;margin-bottom:auto}.main .chat .content .date{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:0 120px 30px}.main .chat .content .date hr{width:100%;margin:0;border-top:1px solid #212529}.main .chat .content .date span{display:block;padding:0 20px;color:#212529;white-space:nowrap}.main .chat .content .no-messages{width:100%;max-width:400px;margin:47px auto 45px;text-align:center;display:block;color:#212529}.main .chat .content .no-messages .options{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center}.main .chat .content .no-messages .options .button{width:56px;height:56px;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04) !important;-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04) !important;box-shadow:0 5px 10px 4px rgba(0,0,0,0.04) !important}.main .chat .content .no-messages .options .button:hover{-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05);-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear}.main .chat .content .no-messages .options .button .material-icons{margin-bottom:0}.main .chat .content .no-messages .options .button:nth-child(2){background:#dc3545}.main .chat .content .no-messages .options .button+.button{margin-left:20px}.main .chat .content .no-messages.request{max-width:420px;margin:50px auto}.main .chat .content .no-messages .material-icons{margin-bottom:20px;font-weight:600}.main .chat .content .no-messages .avatar-xl{margin-bottom:32px}.main .chat .content .no-messages h5{font-weight:400;font-size:18px;line-height:1.7;margin-bottom:5px;display:block}.main .chat .content .no-messages h5>span{font-size:18px;line-height:1.7}.main .chat .content .no-messages p{font-weight:400;font-size:18px;margin-bottom:10px}.main .chat .btn{padding:0;line-height:0}.main .chat .btn.disabled{opacity:1}.main .chat .btn.disabled:hover{color:inherit !important;opacity:1}.main .chat .attach{background-color:#2196f3;color:#fff;border-radius:100%}.main .chat .attach:hover{color:#fff;opacity:0.8}.main .chat .top{-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);padding:20px 5px;background:#fff}.main .chat .top .inside{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center}.main .chat .top .inside .data h5{width:100%}.main .chat .top .inside .status{position:absolute;left:4px;right:0;width:20px;height:20px;border:5px solid #fff;border-radius:100%;margin-top:0;margin-right:10px}.main .chat .top .inside .status .online{color:#2196f3}.main .chat .top .inside .status .offline{color:#ccc}.main .chat .top .inside .status .material-icons{position:absolute;left:-3px;bottom:-3px;font-size:16px}.main .chat .top .inside .btn{color:#2196f3;line-height:0;margin-left:30px;padding:0}.main .chat .top .inside .btn:hover{background:#e8e8e8}.main .chat .top .inside .dropdown-menu-right{right:0 !important;bottom:inherit !important}.main .chat .top .inside .dropdown .btn{margin-right:0}.main .chat .bottom{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:30px 0;border-top:2.5px solid #fff}.main .chat .bottom .rta{position:relative;width:100%}.main .chat .bottom .rta__autocomplete{position:absolute;top:unset !important;left:7% !important;bottom:77%;border:1px solid #bdbac2;border-radius:5px;max-height:250px;background-color:#fff;overflow:auto}.main .chat .bottom .rta__autocomplete ul{display:flex;display:-ms-flexbox;flex-direction:column;padding:0;margin:0}.main .chat .bottom .rta__autocomplete ul li{padding:3px 20px;color:#2196f3;cursor:pointer}.main .chat .bottom .rta__autocomplete ul li:hover{background-color:#2196f3;color:#fff}.main .chat .bottom label{margin-bottom:0}.main .chat .bottom label input{display:none}.main .chat .bottom .form-control{border-radius:50px;-webkit-box-shadow:0px 0px 24px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 24px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 24px 0px rgba(0,0,0,0.2);padding:16px 58px;height:56px;resize:none;font-weight:400;background:white}.main .chat .bottom .form-control:disabled{background-color:#f5f5f5}.main .chat .bottom .form-control::placeholder{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.main .chat .bottom .emoji-mart{position:absolute;left:-2%;bottom:80%}.main .chat .bottom .btn{color:#2196f3;line-height:0;padding:0}.main .chat .bottom .btn.emoticons{position:absolute;top:0;left:0;bottom:0;padding:0 15px 0 20px}.main .chat .bottom .btn.emoticons:hover{background:#f5f5f5;border-radius:50% 0% 0% 50%}.main .chat .bottom .btn.send{position:absolute;top:0;right:0;bottom:0;padding:0 20px 0 15px}.main .chat .bottom .btn.send:hover{background:#f5f5f5;border-radius:0% 50% 50% 0%}.main .chat .bottom .btn.attach{width:56px;height:56px;padding:16px;margin-left:20px;color:#fff;box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.main .chat .bottom .btn.attach:hover{color:#fff}.main .chat .bottom .btn.attach.btn.disabled:hover{color:#fff !important}.main .start{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;width:100%}.main .start .content{width:100%;text-align:center}.main .start .content h1{font-weight:800;font-size:46px;color:#212529;margin-bottom:40px}.main .start .content p{font-weight:400;font-size:16px;margin-bottom:20px}.main .start .content .third-party{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;margin-bottom:38px}.main .start .content .third-party .item{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;padding:15px;margin-right:20px;width:60px;height:60px;border-radius:100%;-webkit-box-shadow:0 0 20px rgba(0,0,0,0.04);-moz-box-shadow:0 0 20px rgba(0,0,0,0.04);box-shadow:0 0 20px rgba(0,0,0,0.04);-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s}.main .start .content .third-party .item:hover{-webkit-transform:translateY(-5px) translateZ(0);-ms-transform:translateY(-5px) translateZ(0);transform:translateY(-5px) translateZ(0);opacity:0.9}.main .start .content .third-party .item:last-of-type{margin-right:0}.main .start .content .third-party .item .material-icons{font-size:30px;color:#fff}.main .start .content .third-party .item img{width:25px;height:25px}.main .start .content form{width:100%;max-width:366px;margin:0 auto}.main .start .content .form-group{position:relative;margin-bottom:15px}.main .start .content .form-group .form-control{height:56px;padding:0 20px 0 58px;font-weight:400;border:2px solid transparent}.main .start .content .form-group .form-control:focus{border:2px solid #2196f3 !important}.main .start .content .form-group .form-control::placeholder{font-weight:400}.main .start .content .form-group .btn.icon{position:absolute;top:0;left:0;bottom:0;color:#bdbac2;line-height:0;padding:0 10px 0 20px}.main .start .content .callout span{font-size:16px}.main .start .content .callout span>a{color:#2196f3}.main .start .content .callout span>a:hover{text-decoration:underline}.navigation{-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.1);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.1);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.1);background:#fff}.navigation .inside .menu .btn{padding:0;color:inherit}.navigation .inside .menu .btn:last-child{margin-bottom:30px}.navigation .inside .menu .material-icons{display:block;font-size:45px;margin-bottom:40px}.navigation .inside .menu .power:hover{color:#dc3545}.navigation .inside .menu .power .material-icons{font-weight:600;font-size:45px;display:block;margin-bottom:0}.navigation .inside .menu .avatar-xl:hover{border:3px solid #2196f3}.navigation .inside .menu .mode:hover{color:#2196f3}.navigation .inside .menu>a.active{color:#2196f3}.requests{display:flex;display:-ms-flexbox;flex-direction:column;border-radius:6px;-webkit-box-shadow:0 0 20px rgba(0,0,0,0.04);-moz-box-shadow:0 0 20px rgba(0,0,0,0.04);box-shadow:0 0 20px rgba(0,0,0,0.04);position:relative;width:100%;background:#fff;pointer-events:auto}.requests .modal-title{width:100%}.requests .modal-title .title{display:flex;display:-ms-flexbox;justify-content:space-between;-ms-flex-align:center;align-items:center;padding:15px 20px;background:#fdfdfd}.requests .modal-title .title h1{font-weight:800;font-size:22px;color:#212529;margin-bottom:0}.requests .modal-title .title .material-icons{font-weight:800}.requests .modal-title .title .close:hover{color:#212529 !important}.requests .content{padding:18px 20px 20px}.requests .content .form-group{margin-bottom:30px}.requests .content .form-group:last-of-type{margin-bottom:33px}.requests .content .form-group .form-control{padding:0 18px;height:56px;font-weight:400;border:2px solid transparent}.requests .content .form-group .form-control:focus{border:2px solid #2196f3 !important}.requests .content .form-group .form-control::placeholder{font-weight:400}.requests .content .text-control{width:100%;height:130px;padding:14px 17px;background:#f5f5f5;font-weight:400;font-size:16px;color:#bdbac2 !important;border:2px solid transparent;border-radius:6px !important}.requests .content .text-control:focus{border:2px solid transparent;border-radius:6px;outline:0}.requests .content .text-control::placeholder{color:#bdbac2}.requests .content .members{position:absolute;top:28%;left:9%;width:82%;height:62px;display:flex;overflow:scroll;overflow-y:hidden}.requests .content .members .user{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;margin-right:7px;padding:15px;background:#fdfdfd;border-radius:6px;margin-bottom:30px;z-index:2}.requests .content .members .user .avatar-sm{margin-right:10px;box-shadow:0 0 10px 1px rgba(0,0,0,0.04)}.requests .content .members .user h5{font-weight:600;font-size:15px;color:#212529;line-height:1.7;margin-bottom:0;margin-right:6px;white-space:nowrap}.requests .content .members .user .btn .material-icons{font-weight:600;font-size:16px}.requests .content .button{padding:16px 25px;line-height:1.5}.requests .btn{padding:0;line-height:0}.create{position:absolute;top:30px;right:20px;bottom:0;width:50px;height:50px;border-radius:100%;-webkit-box-shadow:0 0 30px 5px rgba(0,0,0,0.04);-moz-box-shadow:0 0 30px 5px rgba(0,0,0,0.04);box-shadow:0 0 30px 5px rgba(0,0,0,0.04);background:#fff;display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;padding:0;-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;float:right;cursor:pointer}.create:hover{-webkit-transform:translateY(-5px) translateZ(0);-ms-transform:translateY(-5px) translateZ(0);transform:translateY(-5px) translateZ(0)}.create .material-icons{font-weight:normal !important;font-size:22px;color:#bdbac2;margin-bottom:0 !important}.create.btn:not(:disabled):not(.disabled).active{box-shadow:0 0 30px 5px rgba(0,0,0,0.04)}.fileContainer{background-color:#f5f5f5;color:#212529}.fileContainer .uploadPictureContainer{width:46%;margin:2%}.not-found{height:100vh;background:white}.not-found svg{position:absolute;top:50%;left:50%;margin-top:-250px;margin-left:-400px}.not-found-content{position:absolute;top:50%;left:50%;margin-top:-100px;margin-left:50px;width:380px;height:200px;font-weight:300;color:#212529;font-family:Roboto}.not-found-content h1{font-size:60px;line-height:46px;margin-bottom:40px}.not-found .buttons-con .action-link-wrap{margin-top:40px}.not-found .buttons-con .action-link-wrap a{padding:8px 25px;background:#20c997;border-radius:4px;font-weight:bold;font-size:14px;color:#fff;margin-right:10px;-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear;text-decoration:none;cursor:pointer}.not-found .buttons-con .action-link-wrap a:hover{background-color:#a0a0a0;color:#fff}.not-found #Polygon-1{animation:float 1s infinite ease-in-out alternate;animation-delay:0s}.not-found #Polygon-2{animation:float 1s infinite ease-in-out alternate;animation-delay:.2s}.not-found #Polygon-3{animation:float 1s infinite ease-in-out alternate;animation-delay:.4s}.not-found #Polygon-4{animation:float 1s infinite ease-in-out alternate;animation-delay:.6s}.not-found #Polygon-5{animation:float 1s infinite ease-in-out alternate;animation-delay:.8s}@media (max-width: 1200px){.aside{width:100%;min-width:auto;max-width:auto}}@media (min-width: 992px){.app{display:flex;display:-ms-flexbox;-ms-flex-align:flex-start;align-items:flex-start}.sign-in,.sign-up{height:100vh !important;margin:0 !important;background:#fdfdfd}.navigation{position:sticky;top:0;z-index:1020;overflow-x:hidden;overflow-y:auto;width:100%;min-width:100px;max-width:100px;z-index:1021}.navigation .inside{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;flex-direction:column;padding:30px 0 0;height:100vh}.navigation .inside .menu{display:flex;display:-ms-flexbox;flex-direction:column;flex-basis:auto;flex-grow:1;flex-shrink:0;text-align:center}.navigation .inside .menu .f-grow1{flex-grow:1}.navigation .inside .menu .avatar-xl{margin-bottom:50px}.navigation::-webkit-scrollbar{display:none}.sidebar{position:sticky;top:0;z-index:1020;overflow-x:hidden;overflow-y:scroll;width:100%;height:95vh;max-width:25%;padding:30px 0;margin:auto 15px}.sidebar::-webkit-scrollbar{width:5px}.sidebar::-webkit-scrollbar-thumb{background:#f5f5f5}.main{height:95vh;margin:auto 15px}.main .start{height:100vh}.main .start .content .callout{display:none}.main .start .content .form-parent{display:flex}.main .start .content .form-parent .form-group{margin-right:15px}.main .start .content .form-parent .form-group:last-child{margin-right:0}.main .start .content form.signup{max-width:466px}.main .call .content .inside{max-height:calc(100vh - 0)}.main .call .content .inside .panel{padding:30px 0}}@media (max-width: 991px){body{padding-bottom:54px;background-image:none !important}.aside{display:none}.chat{height:100vh !important}.navigation{position:fixed;left:0;right:0;bottom:0;z-index:1030;box-shadow:0 0 20px 0 rgba(0,0,0,0.04)}.navigation .inside{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:flex-end;align-items:flex-end;padding:12px 15px;flex-wrap:wrap}.navigation .inside .menu{flex-wrap:unset !important;align-items:flex-end;width:100%}.navigation .inside .menu .avatar-xl{display:none}.navigation .inside .menu .mode{margin:auto}.navigation .inside .menu .power{margin-bottom:0 !important}.navigation .inside .menu .power .material-icons{font-size:35px}.navigation .inside .menu a{margin-right:auto}.navigation .inside .menu a:first-of-type{margin-left:0}.navigation .inside .menu a:last-of-type{margin-right:0}.navigation .inside .menu .material-icons{font-size:30px;margin-bottom:0}.sidebar{padding:30px 0 0;overflow-x:hidden;overflow-y:auto;height:100vh}.sidebar::-webkit-scrollbar{display:none}.main .start{padding:73px 0 77px}.main .start .content .button{margin-bottom:20px}.main .start .content .callout{display:block}.main .chat .content{height:600px}.main .call .content{padding:60px 0;height:100%}}@media (min-width: 768px){.container{max-width:100%}}@media (max-width: 768px){.main .chat .content{height:100%}.main .chat .bottom{padding:15px 0;margin-bottom:55px}}@media (min-width: 576px){.container{max-width:100%}}@media (max-width: 468px){.container{padding-left:5px;padding-right:5px}.requests .title{padding:30px 20px}.requests .content{padding:34px 20px 40px}.requests .content .user{left:29px}.main .start .content h1{font-size:36px}.main .call .content .options .option{padding:0 15px}.not-found svg{position:absolute;top:50%;left:50%;margin-top:-250px;margin-left:-190px}.not-found-content{position:absolute;top:50%;left:50%;margin-top:-100px;margin-left:-190px;text-align:center}}@media (max-width: 350px){.main .call .content .options .option{padding:0 12px}.main .call .content .options .option.call-end{margin:0 15px}}.sidebar{border-radius:30px;-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);background:#fff}.sidebar .room-info{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;flex-direction:column;margin-bottom:20px}.sidebar .room-info .avatar-xl{height:auto;width:100%;min-width:100px;max-width:100px;margin-bottom:20px;cursor:pointer}.sidebar .room-info h4{color:#212529}.sidebar .contacts .contact.active .material-icons{color:#2196f3}.sidebar .contacts .contact .status{position:absolute;left:4px;right:0;width:20px;height:20px;border:5px solid #fff;border-radius:100%}.sidebar .contacts .contact .status .online{color:#2196f3}.sidebar .contacts .contact .status .offline{color:#ccc}.sidebar .contacts .contact .status .material-icons{position:absolute;left:-3px;bottom:-3px;font-size:16px}.sidebar .contacts .contact.active,.sidebar .contacts .contact:hover{border-bottom:2px solid #2196f3}.sidebar .contacts a:hover{color:inherit}.sidebar .contacts .sort-members{display:flex;display:-ms-flexbox;justify-content:space-between;-ms-flex-align:flex-start;align-items:flex-start}.sidebar .contacts .sort-members h1{padding-bottom:0}.sidebar .accordion button{width:100%;text-align:left}.sidebar .accordion button .material-icons{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;float:right}.sidebar .accordion button .material-icons.rotate{-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg)}.sidebar .discussions .single.active .material-icons{color:#2196f3}.sidebar .discussions .single .status{position:absolute;left:4px;right:0;width:20px;height:20px;border:5px solid #fff;border-radius:100%}.sidebar .discussions .single .status .online{color:#2196f3}.sidebar .discussions .single .status .offline{color:#ccc}.sidebar .discussions .single .status .material-icons{position:absolute;left:-3px;bottom:-3px;font-size:16px}.sidebar .discussions .single.active,.sidebar .discussions .single:hover{border-bottom:2px solid #2196f3}.sidebar .discussions a:hover{color:inherit}.sidebar .discussions .single.active p,.sidebar .discussions .single.active span,.sidebar .discussions .single.unread p,.sidebar .discussions .single.unread span{font-weight:500 !important;color:#212529}.sidebar .discussions .single .new{position:absolute;left:39px;right:0;width:30px;height:30px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:5px 0 10px 0 rgba(0,0,0,0.04);-moz-box-shadow:5px 0 10px 0 rgba(0,0,0,0.04);box-shadow:5px 0 10px 0 rgba(0,0,0,0.04);margin-top:-23px;background:#f0d24b;display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center}.sidebar .discussions .single .new span{font-weight:500;font-size:12px;color:#fff !important}.sidebar .search{margin-bottom:30px}.sidebar .search .form-control{padding:0 15px 0 54px;height:56px}.sidebar .search .loop{position:absolute;top:0;left:0;bottom:0;padding:0 15px;margin-bottom:0 !important;line-height:0}.sidebar .search .loop .material-icons{font-weight:600;font-size:25px;color:#bdbac2}.sidebar .search .loop .material-icons.filter-list{font-weight:400}.sidebar .sort{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:baseline;align-items:baseline;flex-direction:row;margin-bottom:40px;text-align:center}.sidebar .sort .btn{font-weight:500;font-size:15px;color:inherit;padding:8px 20px;white-space:nowrap;border-radius:100px}.sidebar .sort .btn.active{padding:8px 20px;background:#f5f5f5;border-radius:100px;color:#2196f3}body{background-color:#fdfdfd;color:#bdbac2;display:initial;font-family:\'Maven Pro\', sans-serif;font-size:15px;background:url(\\"https://img.wallpapersafari.com/desktop/1920/1080/15/47/bld5Un.jpg\\") no-repeat center;background-size:cover}a{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;text-decoration:none;color:inherit}a:hover{text-decoration:none;color:#2196f3}img{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s}p{font-weight:500;line-height:1.7;margin-bottom:0}.app{overflow:auto}.bg-blue{background:#2196f3 !important}.bg-indigo{background:#6610f2 !important}.bg-purple{background:#6f42c1 !important}.bg-red{background:#dc3545 !important}.bg-pink{background:#e83e8c !important}.bg-orange{background:#fd7e14 !important}.bg-gray{background:#bdbac2 !important}.bg-green{background:#28a745 !important}.bg-teal{background:#20c997 !important}.bg-yellow{background:#ffc107 !important}.material-icons.md-18{font-size:18px}.material-icons.md-24{font-size:24px}.material-icons.md-30{font-size:30px}.material-icons.md-36{font-size:36px}.material-icons.md-42{font-size:42px}.material-icons.md-48{font-size:48px}.notification-toast{position:absolute;top:0;left:0;right:0;background-color:#8b54f9;color:#fff;padding:10px;text-align:center;z-index:1021}.notification-toast span{text-decoration:underline;cursor:pointer}.img-thumbnail{width:33.33333%;cursor:pointer}.modal-dialog{max-width:450px}.modal-backdrop{opacity:0 !important}.start{padding-bottom:0}\\n", ""]);\n// Exports\nmodule.exports = exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///768\n')},770:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(14);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 22 modules\nvar es = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(39);\n\n// EXTERNAL MODULE: ./node_modules/redux-thunk/es/index.js\nvar redux_thunk_es = __webpack_require__(135);\n\n// EXTERNAL MODULE: ./node_modules/@andyet/simplewebrtc/module.js + 15 modules\nvar simplewebrtc_module = __webpack_require__(27);\n\n// EXTERNAL MODULE: ./node_modules/@pusher/chatkit-server/target/src/index.js\nvar src = __webpack_require__(331);\nvar src_default = /*#__PURE__*/__webpack_require__.n(src);\n\n// CONCATENATED MODULE: ./src/config/index.mjs\n/* jshint esversion: 10 */\n/* eslint-disable */\n\nconst tokenUrl = \'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/caf4a583-8194-4510-adbe-c9879f060ffc/token\';\nconst instanceLocator = \'v1:us1:caf4a583-8194-4510-adbe-c9879f060ffc\';\nconst key = \'7ea5e986-72fe-4cec-ba0c-4d07252f5f5f:LUB9fZZjg7vdpaFZlJEPBbZfKAe7sPLr/fhtA1+c3Co=\';\n\nconst NEWS_API_KEY = \'e30c5be02d0b4698b6a7722d93c70225\';\nconst SWRTC_API_KEY = \'970b4e5a23e7c4400327a45d\';\nconst SWRTC_CONFIG_URL = `https://api.simplewebrtc.com/config/guest/${SWRTC_API_KEY}`\n\n\n\n/* eslint-enable */\n\n// CONCATENATED MODULE: ./src/constants/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\nvar SIGN_IN = \'SIGN_IN\';\nvar SIGN_OUT = \'SIGN_OUT\';\nvar NOT_FOUND = \'NOT_FOUND\';\nvar CONNECT = \'CONNECT\';\nvar GET_ROOMS = \'GET_ROOMS\';\nvar ENTER_ROOM = \'ENTER_ROOM\';\nvar UPDATE_ROOM = \'UPDATE_ROOM\';\nvar SHOW_NOTIFICATION_TOAST = \'SHOW_NOTIFICATION_TOAST\';\nvar ADD_EMOJI = \'ADD_EMOJI\';\nvar SORT_MEMBERS = \'SORT_MEMBERS\';\nvar FILTER_ROOMS = \'FILTER_ROOMS\';\nvar TOGGLE_CALL = \'TOGGLE_CALL\';\nvar TOGGLE_PICKER = \'TOGGLE_PICKER\';\nvar TOGGLE_CAROUSEL = \'TOGGLE_CAROUSEL\';\nvar TOGGLE_USERS_BAR = \'TOGGLE_USERS_BAR\';\nvar ON_MESSAGE = \'ON_MESSAGE\';\nvar CLEAR_MESSAGE = \'CLEAR_MESSAGE\';\nvar START_LOAD_MORE = \'START_LOAD_MORE\';\nvar END_LOAD_MORE = \'END_LOAD_MORE\';\nvar USER_STARTED_TYPING = \'USER_STARTED_TYPING\';\nvar USER_STOPED_TYPING = \'USER_STOPED_TYPING\';\nvar PRESENCE_CHANGED = \'PRESENCE_CHANGED\';\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/chatkit/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nvar initialState = new src_default.a({\n  instanceLocator: instanceLocator,\n  key: key\n});\n\nvar chatkit_chatkit = function chatkit() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SIGN_OUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_chatkit = (chatkit_chatkit);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/authentication/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar authentication_initialState = {\n  userId: \'\',\n  currentScreen: \'SignIn\'\n};\n\nvar authentication_authentication = function authentication() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : authentication_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SIGN_IN:\n      return {\n        userId: action.userId,\n        currentScreen: \'Chat\'\n      };\n\n    case SIGN_OUT:\n      return authentication_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_authentication = (authentication_authentication);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/notification/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar notification_initialState = false;\n\nvar notification_notification = function notification() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : notification_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_NOTIFICATION_TOAST:\n      return action.isShow;\n\n    case SIGN_OUT:\n      return notification_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_notification = (notification_notification);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/videoCall/index.jsx\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar videoCall_initialState = {\n  show: false,\n  cam: false\n};\n\nvar videoCall_videoCall = function videoCall() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : videoCall_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_CALL:\n      var show = !state.show;\n      var cam = action.cam;\n      return _objectSpread({}, state, {\n        show: show,\n        cam: cam\n      });\n\n    case SIGN_OUT:\n      return videoCall_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_videoCall = (videoCall_videoCall);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/isLoading.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar isLoading_initialState = true;\n\nvar isLoading_isLoading = function isLoading() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : isLoading_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ROOMS:\n      return false;\n\n    case CLEAR_MESSAGE:\n      return true;\n\n    case NOT_FOUND:\n      return false;\n\n    case SIGN_OUT:\n      return isLoading_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var messages_isLoading = (isLoading_isLoading);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/justLoadMore.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar justLoadMore_initialState = false;\n\nvar justLoadMore_justLoadMore = function justLoadMore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : justLoadMore_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ON_MESSAGE:\n      return false;\n\n    case CLEAR_MESSAGE:\n      return false;\n\n    case START_LOAD_MORE:\n      return false;\n\n    case END_LOAD_MORE:\n      return true;\n\n    case SIGN_OUT:\n      return justLoadMore_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var messages_justLoadMore = (justLoadMore_justLoadMore);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/messages.jsx\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar messages_initialState = [];\n\nvar messages_messages = function messages() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : messages_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ON_MESSAGE:\n      return [].concat(_toConsumableArray(state), [action.message]);\n\n    case END_LOAD_MORE:\n      return [].concat(_toConsumableArray(action.messages), _toConsumableArray(state));\n\n    case CLEAR_MESSAGE:\n      return [];\n\n    case SIGN_OUT:\n      return messages_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_messages_messages = (messages_messages);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/images.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar images_initialState = [];\n\nvar images_images = function images() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : images_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ON_MESSAGE:\n      action.message.parts.forEach(function (_ref) {\n        var partType = _ref.partType,\n            payload = _ref.payload;\n        if (partType === \'attachment\') state.push({\n          src: payload._downloadURL\n        });\n      });\n      return state;\n\n    case END_LOAD_MORE:\n      action.messages.forEach(function (message) {\n        message.parts.forEach(function (_ref2) {\n          var partType = _ref2.partType,\n              payload = _ref2.payload;\n          if (partType === \'attachment\') state.push({\n            src: payload._downloadURL\n          });\n        });\n      });\n      return state;\n\n    case CLEAR_MESSAGE:\n      return [];\n\n    case SIGN_OUT:\n      return images_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var messages_images = (images_images);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/currentUser.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar currentUser_initialState = {};\n\nvar currentUser_currentUser = function currentUser() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : currentUser_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CONNECT:\n      return action.currentUser;\n\n    case SIGN_OUT:\n      return currentUser_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var users_currentUser = (currentUser_currentUser);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/typingUsers.jsx\nfunction typingUsers_toConsumableArray(arr) { return typingUsers_arrayWithoutHoles(arr) || typingUsers_iterableToArray(arr) || typingUsers_nonIterableSpread(); }\n\nfunction typingUsers_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction typingUsers_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction typingUsers_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar typingUsers_initialState = [];\n\nvar typingUsers_typingUsers = function typingUsers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : typingUsers_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_STARTED_TYPING:\n      return [].concat(typingUsers_toConsumableArray(state), [action.user]);\n\n    case USER_STOPED_TYPING:\n      return state.filter(function (user) {\n        return user.id !== action.user.id;\n      });\n\n    case SIGN_OUT:\n      return typingUsers_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var users_typingUsers = (typingUsers_typingUsers);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/roomUsers.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar roomUsers_initialState = [];\n\nvar roomUsers_roomUsers = function roomUsers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roomUsers_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ENTER_ROOM:\n      return action.roomActive.users;\n\n    case PRESENCE_CHANGED:\n      return action.roomActive.users.sort(function (user) {\n        if (user.presence.state === \'online\') return -1;else return 1;\n      });\n\n    case SIGN_OUT:\n      return roomUsers_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var users_roomUsers = (roomUsers_roomUsers);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/rooms/rooms.jsx\nfunction rooms_toConsumableArray(arr) { return rooms_arrayWithoutHoles(arr) || rooms_iterableToArray(arr) || rooms_nonIterableSpread(); }\n\nfunction rooms_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction rooms_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction rooms_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar rooms_initialState = [];\n\nvar rooms_rooms = function rooms() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : rooms_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ROOMS:\n      return action.rooms;\n\n    case UPDATE_ROOM:\n      var index = state.findIndex(function (room) {\n        if (room) return action.room.id === room.id;\n      });\n      if (index === -1) return state;\n      state[index] = action.room;\n      return rooms_toConsumableArray(state);\n\n    case PRESENCE_CHANGED:\n      return state;\n\n    case SIGN_OUT:\n      return rooms_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_rooms_rooms = (rooms_rooms);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/rooms/roomActive.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar roomActive_initialState = {};\n\nvar roomActive_roomActive = function roomActive() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roomActive_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CONNECT:\n      return state;\n\n    case ENTER_ROOM:\n      return action.roomActive;\n\n    case PRESENCE_CHANGED:\n      return action.roomActive;\n\n    case SIGN_OUT:\n      return roomActive_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var rooms_roomActive = (roomActive_roomActive);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/rooms/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/userSort.jsx\nfunction userSort_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction userSort_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { userSort_ownKeys(Object(source), true).forEach(function (key) { userSort_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { userSort_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction userSort_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar userSort_initialState = {\n  by: \'status\',\n  value: 1\n};\n\nvar userSort_userSort = function userSort() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userSort_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SORT_MEMBERS:\n      var by = action.by,\n          value = action.value;\n      return userSort_objectSpread({}, state, {\n        by: by,\n        value: value\n      });\n\n    case SIGN_OUT:\n      return userSort_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_userSort = (userSort_userSort);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/roomFilter.jsx\nfunction roomFilter_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction roomFilter_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { roomFilter_ownKeys(Object(source), true).forEach(function (key) { roomFilter_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { roomFilter_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction roomFilter_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar roomFilter_initialState = {\n  name: \'\',\n  status: 0,\n  isPrivate: false\n};\n\nvar roomFilter_roomFilter = function roomFilter() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roomFilter_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FILTER_ROOMS:\n      var name = action.name,\n          status = action.status,\n          isPrivate = action.isPrivate;\n      return roomFilter_objectSpread({}, state, {\n        name: name,\n        status: status,\n        isPrivate: isPrivate\n      });\n\n    case SIGN_OUT:\n      return roomFilter_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_roomFilter = (roomFilter_roomFilter);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/showPicker.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar showPicker_initialState = false;\n\nvar showPicker_showPicker = function showPicker() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : showPicker_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_EMOJI:\n      return false;\n\n    case TOGGLE_PICKER:\n      return !state;\n\n    case SIGN_OUT:\n      return showPicker_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_showPicker = (showPicker_showPicker);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/showCarousel.jsx\nfunction showCarousel_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction showCarousel_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { showCarousel_ownKeys(Object(source), true).forEach(function (key) { showCarousel_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { showCarousel_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction showCarousel_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar showCarousel_initialState = {\n  isShow: false,\n  imageIndex: -1,\n  where: \'\'\n};\n\nvar showCarousel_showCarousel = function showCarousel() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : showCarousel_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_CAROUSEL:\n      return showCarousel_objectSpread({}, showCarousel, {\n        isShow: !state.isShow,\n        imageIndex: action.imageIndex,\n        where: action.where\n      });\n\n    case SIGN_OUT:\n      return showCarousel_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_showCarousel = (showCarousel_showCarousel);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/showUsersBar.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar showUsersBar_initialState = false;\n\nvar showUsersBar_showUsersBar = function showUsersBar() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : showUsersBar_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_USERS_BAR:\n      return !state;\n\n    case SIGN_OUT:\n      return showUsersBar_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_showUsersBar = (showUsersBar_showUsersBar);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\n\n\nvar rootReducer = Object(redux["c" /* combineReducers */])({\n  simplewebrtc: simplewebrtc_module["m" /* reducer */],\n  authentication: reducers_authentication,\n  notification: reducers_notification,\n  justLoadMore: messages_justLoadMore,\n  showCarousel: controls_showCarousel,\n  showUsersBar: controls_showUsersBar,\n  currentUser: users_currentUser,\n  typingUsers: users_typingUsers,\n  roomActive: rooms_roomActive,\n  roomFilter: controls_roomFilter,\n  showPicker: controls_showPicker,\n  videoCall: reducers_videoCall,\n  roomUsers: users_roomUsers,\n  isLoading: messages_isLoading,\n  userSort: controls_userSort,\n  messages: reducers_messages_messages,\n  chatkit: reducers_chatkit,\n  images: messages_images,\n  rooms: reducers_rooms_rooms\n});\nvar composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || redux["d" /* compose */];\nvar store = Object(redux["e" /* createStore */])(rootReducer, {\n  simplewebrtc: {}\n}, composeEnhancer(Object(redux["a" /* applyMiddleware */])(redux_thunk_es["a" /* default */])));\n/* harmony default export */ var reducers = (store);\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-router-dom/esm/react-router-dom.js\nvar react_router_dom = __webpack_require__(35);\n\n// EXTERNAL MODULE: ./node_modules/react-router/esm/react-router.js + 1 modules\nvar react_router = __webpack_require__(65);\n\n// EXTERNAL MODULE: ./node_modules/@pusher/chatkit-client/dist/web/chatkit.js\nvar web_chatkit = __webpack_require__(204);\n\n// EXTERNAL MODULE: ./node_modules/crypto-js/index.js\nvar crypto_js = __webpack_require__(82);\n\n// CONCATENATED MODULE: ./src/utils/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\nvar alertError = function alertError(title, err) {\n  try {\n    var error = err.error_description ? err.error_description : err.info.error_description;\n  } catch (_unused) {\n    error = err.error;\n  }\n\n  console.log(err);\n  alert(title + \': \' + error);\n};\nvar onGetPrivateUser = function onGetPrivateUser(room, currentUserId, isFilter) {\n  var members = room.customData.members;\n  var users = Object.values(room.userStore.users);\n  var mainUser = members[0];\n  if (members.length === 2) mainUser = members.find(function (member) {\n    return member.id !== currentUserId;\n  });\n  var roomName = isFilter ? mainUser.name.toLowerCase() : mainUser.name;\n  var roomStatus = isFilter ? -1 : \'\';\n  mainUser = users.find(function (user) {\n    return user.id === mainUser.id;\n  });\n\n  if (mainUser) {\n    var _mainUser = mainUser,\n        name = _mainUser.name,\n        presence = _mainUser.presence;\n    roomName = name;\n    roomStatus = presence.state;\n    if (isFilter) roomStatus = presence.state === \'online\' ? 1 : -1;\n  }\n\n  return {\n    roomName: roomName,\n    roomStatus: roomStatus\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/notification.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar notification_grantPermission = function grantPermission() {\n  return function (dispatch, getState) {\n    if (!(\'Notification\' in window)) {\n      alert(\'Trình duyệt của bạn không hỗ trợ hiển thị thông báo\');\n      return;\n    }\n\n    var _Notification = Notification,\n        permission = _Notification.permission;\n\n    if (permission === \'granted\') {\n      new Notification(\'Bạn đã cho phép hiển thị thông báo rồi\');\n      dispatch({\n        type: SHOW_NOTIFICATION_TOAST,\n        isShow: false\n      });\n      return;\n    }\n\n    if (permission !== \'denied\' || permission === \'default\') {\n      Notification.requestPermission().then(function (result) {\n        if (result === \'granted\') new Notification(\'Tuyệt vời !!!\', {\n          body: \'QuanChat sẽ bắt đầu thông báo cho bạn về tin nhắn mới nhất\'\n        });\n      });\n    }\n\n    dispatch({\n      type: SHOW_NOTIFICATION_TOAST,\n      isShow: false\n    });\n  };\n};\nvar notification_showNotificationToast = function showNotificationToast() {\n  return function (dispatch, getState) {\n    if (window.Notification && Notification.permission === \'granted\') return;\n    dispatch({\n      type: SHOW_NOTIFICATION_TOAST,\n      isShow: true\n    });\n  };\n};\nvar showNotification = function showNotification(title, lastMessage) {\n  return function (dispatch, getState) {\n    new Notification(title, {\n      body: lastMessage\n    });\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/messages.jsx\nfunction messages_toConsumableArray(arr) { return messages_arrayWithoutHoles(arr) || messages_iterableToArray(arr) || messages_nonIterableSpread(); }\n\nfunction messages_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction messages_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction messages_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nvar messages_typingMessage = function typingMessage() {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        currentUser = _getState.currentUser,\n        roomActive = _getState.roomActive;\n\n    currentUser.isTypingIn({\n      roomId: roomActive.id\n    })["catch"](function (err) {\n      return alertError(\'Error on typing rooms\', err);\n    });\n  };\n};\nvar messages_sendMessage = function sendMessage(parts) {\n  var roomId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return function (dispatch, getState) {\n    var _getState2 = getState(),\n        currentUser = _getState2.currentUser,\n        roomActive = _getState2.roomActive;\n\n    if (roomId === null) roomId = "".concat(roomActive.id);\n    currentUser.sendMultipartMessage({\n      roomId: roomId,\n      parts: parts\n    })["catch"](function (err) {\n      return alertError(\'Error on sending message\', err);\n    });\n  };\n};\nvar messages_sendNews = function sendNews(query) {\n  return function (dispatch, getState) {\n    var newsApi = "https://newsapi.org/v2/everything?q=".concat(query, "&pageSize=3&apiKey=").concat(NEWS_API_KEY);\n    fetch(newsApi).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      var parts = [];\n      data.articles.forEach(function (article) {\n        var title = article.title,\n            source = article.source,\n            url = article.url;\n        parts.push({\n          type: \'text/plain\',\n          content: "".concat(title, " - ").concat(source.name, " - ").concat(url)\n        });\n      });\n      dispatch(messages_sendMessage(parts));\n    })["catch"](function (err) {\n      return alertError(\'Error on fetching newsapi\', err);\n    });\n  };\n};\nvar messages_fetchLastMessage = function fetchLastMessage() {\n  return function (dispatch, getState) {\n    var _getState3 = getState(),\n        currentUser = _getState3.currentUser,\n        messages = _getState3.messages;\n\n    var _messages = messages[messages.length - 1],\n        room = _messages.room,\n        sender = _messages.sender,\n        parts = _messages.parts;\n    var id = room.id,\n        name = room.name,\n        customData = room.customData;\n    var _parts = parts[parts.length - 1],\n        partType = _parts.partType,\n        payload = _parts.payload;\n    var lastMessage = ": ".concat(payload.content);\n    if (partType === \'attachment\') lastMessage = \' đã gửi 1 ảnh\';else if (partType === \'url\') lastMessage = \' đã gửi 1 liên kết\';\n    lastMessage = "".concat(sender.name).concat(lastMessage);\n    currentUser.updateRoom({\n      roomId: id,\n      customData: {\n        lastMessage: lastMessage,\n        members: customData.members\n      }\n    }).then(function () {\n      if (currentUser.id !== sender.id) dispatch(showNotification(name, lastMessage));\n    });\n  };\n};\nvar messages_loadMoreMessages = function loadMoreMessages() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: START_LOAD_MORE\n    });\n\n    var _getState4 = getState(),\n        currentUser = _getState4.currentUser,\n        messages = _getState4.messages,\n        roomActive = _getState4.roomActive;\n\n    if (messages.length === 0) return;\n    var oldestMessageId = Math.min.apply(Math, messages_toConsumableArray(messages.map(function (message) {\n      return message.id;\n    })));\n    currentUser.fetchMultipartMessages({\n      roomId: roomActive.id,\n      initialId: oldestMessageId,\n      direction: \'older\',\n      limit: 10\n    }).then(function (messages) {\n      return dispatch({\n        type: END_LOAD_MORE,\n        messages: messages\n      });\n    });\n  };\n};\n// CONCATENATED MODULE: ./src/actions/rooms.jsx\nvar _this = undefined;\n\nfunction actions_rooms_toConsumableArray(arr) { return actions_rooms_arrayWithoutHoles(arr) || actions_rooms_iterableToArray(arr) || actions_rooms_nonIterableSpread(); }\n\nfunction actions_rooms_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction actions_rooms_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction actions_rooms_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction rooms_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction rooms_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { rooms_ownKeys(Object(source), true).forEach(function (key) { rooms_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { rooms_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction rooms_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\nvar rooms_onSetRoomActive = function onSetRoomActive(roomActive, currentUserId) {\n  var isPrivate = roomActive.isPrivate,\n      users = roomActive.users;\n\n  if (isPrivate) {\n    var _onGetPrivateUser = onGetPrivateUser(roomActive, currentUserId, false),\n        roomName = _onGetPrivateUser.roomName,\n        roomStatus = _onGetPrivateUser.roomStatus;\n\n    return rooms_objectSpread({}, roomActive, {\n      users: users,\n      name: roomName,\n      status: roomStatus\n    });\n  }\n\n  return roomActive;\n};\nvar rooms_getRooms = function getRooms(currentUser) {\n  return function (dispatch, getState) {\n    currentUser.getJoinableRooms().then(function (unjoinedRooms) {\n      var rooms = [].concat(actions_rooms_toConsumableArray(currentUser.rooms), actions_rooms_toConsumableArray(unjoinedRooms));\n      dispatch({\n        type: GET_ROOMS,\n        rooms: rooms\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on getting rooms\', err);\n    });\n  };\n};\nvar rooms_enterRoom = function enterRoom(roomId) {\n  return function (dispatch, getState) {\n    var currentUser = getState().currentUser;\n    dispatch({\n      type: CLEAR_MESSAGE\n    });\n    if (!currentUser.id) return;\n    currentUser.subscribeToRoomMultipart({\n      roomId: roomId,\n      messageLimit: 10,\n      hooks: {\n        onMessage: function onMessage(message) {\n          setTimeout(function () {\n            return dispatch(messages_fetchLastMessage());\n          }, 250);\n\n          if (location.hash.substr(7) === roomId) {\n            dispatch({\n              type: ON_MESSAGE,\n              message: message\n            });\n            currentUser.setReadCursor({\n              roomId: roomId,\n              position: message.id\n            });\n          }\n        },\n        onUserStartedTyping: function onUserStartedTyping(user) {\n          var _getState = getState(),\n              roomActive = _getState.roomActive;\n\n          if (roomActive.id === roomId) dispatch({\n            type: USER_STARTED_TYPING,\n            user: user\n          });\n        },\n        onUserStoppedTyping: function onUserStoppedTyping(user) {\n          var _getState2 = getState(),\n              roomActive = _getState2.roomActive;\n\n          if (roomActive.id === roomId) dispatch({\n            type: USER_STOPED_TYPING,\n            user: user\n          });\n        },\n        onPresenceChanged: function onPresenceChanged() {\n          var _getState3 = getState(),\n              currentUser = _getState3.currentUser,\n              roomActive = _getState3.roomActive;\n\n          if (roomActive.id === roomId) dispatch({\n            type: PRESENCE_CHANGED,\n            roomActive: rooms_onSetRoomActive(roomActive, currentUser.id)\n          });\n        }\n      }\n    }).then(function (roomActive) {\n      dispatch({\n        type: ENTER_ROOM,\n        roomActive: rooms_onSetRoomActive(roomActive, currentUser.id)\n      });\n      dispatch(rooms_getRooms(currentUser));\n      dispatch(notification_showNotificationToast.call(_this));\n    })["catch"](function (err) {\n      dispatch({\n        type: NOT_FOUND\n      });\n      alertError(\'Error on entering rooms: \', err);\n    });\n  };\n};\nvar rooms_createRoom = function createRoom(name, message) {\n  return function (dispatch, getState) {\n    var currentUser = getState().currentUser;\n    currentUser.createRoom({\n      name: name,\n      customData: {\n        lastMessage: \'\'\n      }\n    }).then(function (room) {\n      var roomId = room.id;\n      var parts = [];\n\n      if (message.trim()) {\n        parts.push({\n          type: \'text/plain\',\n          content: message\n        });\n        dispatch(messages_sendMessage(parts, "".concat(roomId)));\n      }\n\n      history.pushState(null, null, "#/room/".concat(roomId));\n      setTimeout(function () {\n        return dispatch(rooms_enterRoom(roomId));\n      }, 250);\n    })["catch"](function (err) {\n      return alertError(\'Error on creating rooms\', err);\n    });\n  };\n};\nvar rooms_createPrivateRoom = function createPrivateRoom(user) {\n  return function (dispatch, getState) {\n    var _getState4 = getState(),\n        chatkit = _getState4.chatkit,\n        currentUser = _getState4.currentUser;\n\n    var id = currentUser.id,\n        name = currentUser.name;\n    var roomId = Object(crypto_js["HmacSHA1"])("".concat(id).concat(user.id), key).toString();\n    var otherRoomId = Object(crypto_js["HmacSHA1"])("".concat(user.id).concat(id), key).toString();\n    var members = user.id === id ? [{\n      id: id,\n      name: name\n    }] : [{\n      id: id,\n      name: name\n    }, {\n      id: user.id,\n      name: user.name\n    }];\n    chatkit.getRooms({\n      includePrivate: true\n    }).then(function (rooms) {\n      var privateRoomCreated = rooms.some(function (room) {\n        return room.id === roomId || room.id === otherRoomId;\n      });\n      if (!privateRoomCreated) currentUser.createRoom({\n        id: roomId,\n        name: "".concat(name, " & ").concat(user.name),\n        "private": true,\n        addUserIds: [user.id],\n        customData: {\n          lastMessage: \'\',\n          members: members\n        }\n      })["catch"](function (err) {\n        alertError(\'Error on creating private rooms\', err);\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on getting all rooms\', err);\n    });\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/controls.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar controls_addEmoji = function addEmoji(emoji, message) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: ADD_EMOJI\n    });\n    return "".concat(message).concat(emoji["native"]);\n  };\n};\nvar controls_sortMembers = function sortMembers(by, value) {\n  return {\n    type: SORT_MEMBERS,\n    by: by,\n    value: value\n  };\n};\nvar controls_filterRooms = function filterRooms(name, status, isPrivate) {\n  return {\n    type: FILTER_ROOMS,\n    name: name,\n    status: status,\n    isPrivate: isPrivate\n  };\n};\nvar controls_toggleCall = function toggleCall() {\n  var cam = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return {\n    type: TOGGLE_CALL,\n    cam: cam\n  };\n};\nvar controls_togglePicker = function togglePicker() {\n  return {\n    type: TOGGLE_PICKER\n  };\n};\nvar controls_toggleCarousel = function toggleCarousel() {\n  var imageIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n  var where = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n  return {\n    type: TOGGLE_CAROUSEL,\n    imageIndex: imageIndex,\n    where: where\n  };\n};\nvar controls_toggleUsersBar = function toggleUsersBar() {\n  return {\n    type: TOGGLE_USERS_BAR\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/authentication.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nvar authentication_signOut = function signOut() {\n  return function (dispatch, getState) {\n    var currentUser = getState().currentUser;\n    dispatch({\n      type: SIGN_OUT\n    });\n    currentUser.disconnect();\n  };\n};\nvar authentication_signUp = function signUp(name, email, password) {\n  return function (dispatch, getState) {\n    var chatkit = getState().chatkit;\n    var id = Object(crypto_js["HmacSHA1"])("".concat(email, "@!?#?").concat(password), key).toString();\n    var avatarURL = "https://avatars.dicebear.com/v2/avataaars/".concat(name, ".svg?options[eyes][]=squint&options[eyebrow][]=raised&options[mouth][]=smile");\n    chatkit.createUser({\n      id: id,\n      name: name,\n      avatarURL: avatarURL\n    }).then(function () {\n      return alert(\'User created successfully\');\n    })["catch"](function (err) {\n      return alertError(\'Error on sign up\', err);\n    });\n  };\n};\nvar authentication_signIn = function signIn(email, password) {\n  return function (dispatch, getState) {\n    var chatkit = getState().chatkit;\n    var id = Object(crypto_js["HmacSHA1"])("".concat(email, "@!?#?").concat(password), key).toString();\n    chatkit.getUser({\n      id: id\n    }).then(function () {\n      return dispatch({\n        type: SIGN_IN,\n        userId: id\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on sign in\', err);\n    });\n  };\n};\nvar authentication_connect = function connect(userId) {\n  return function (dispatch, getState) {\n    var chatManager = new web_chatkit["ChatManager"]({\n      instanceLocator: instanceLocator,\n      userId: userId,\n      tokenProvider: new web_chatkit["TokenProvider"]({\n        url: tokenUrl\n      })\n    });\n    chatManager.connect({\n      onRoomUpdated: function onRoomUpdated(room) {\n        dispatch({\n          type: UPDATE_ROOM,\n          room: room\n        });\n      },\n      onAddedToRoom: function onAddedToRoom(room) {\n        if (room.isPrivate) {\n          var currentUser = getState().currentUser;\n          dispatch(rooms_getRooms(currentUser));\n        }\n      },\n      onPresenceChanged: function onPresenceChanged() {\n        var _getState$roomFilter = getState().roomFilter,\n            name = _getState$roomFilter.name,\n            status = _getState$roomFilter.status,\n            isPrivate = _getState$roomFilter.isPrivate;\n        dispatch(controls_filterRooms(name, status, isPrivate));\n      }\n    }).then(function (currentUser) {\n      dispatch({\n        type: CONNECT,\n        currentUser: currentUser\n      });\n      dispatch(rooms_getRooms(currentUser));\n    }).then(function () {\n      var chatkit = getState().chatkit;\n      chatkit.getUsers().then(function (users) {\n        users.forEach(function (user) {\n          return dispatch(rooms_createPrivateRoom(user));\n        });\n      })["catch"](function (err) {\n        return alertError(\'Error on getting all users\', err);\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on connection\', err);\n    });\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Auth/AuthInput.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nfunction AuthInput(props) {\n  var type = props.type,\n      id = props.id,\n      value = props.value,\n      placeholder = props.placeholder,\n      icon = props.icon;\n\n  var onChange = function onChange(event) {\n    return props.onChange(event);\n  };\n\n  return react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("input", {\n    type: type,\n    name: type,\n    id: id,\n    className: "form-control",\n    value: value,\n    placeholder: placeholder,\n    onChange: onChange,\n    required: true\n  }), react_default.a.createElement("button", {\n    className: "btn icon"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, icon)));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Auth/ThirdParty.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nfunction ThirdParty() {\n  return react_default.a.createElement("div", {\n    className: "third-party"\n  }, react_default.a.createElement("button", {\n    className: "btn item bg-blue"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "pages")), react_default.a.createElement("button", {\n    className: "btn item bg-teal"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "party_mode")), react_default.a.createElement("button", {\n    className: "btn item bg-purple"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "whatshot")));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Auth/Aside.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Aside(_ref) {\n  var to = _ref.to,\n      title = _ref.title,\n      content = _ref.content;\n  return react_default.a.createElement("div", {\n    className: "aside"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "preference"\n  }, react_default.a.createElement("h2", null, title), react_default.a.createElement("p", null, content), react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: to,\n    className: "btn button"\n  }, to === \'/\' ? \'Đăng nhập\' : \'Đăng kí\')))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Auth/SignIn.jsx\nfunction SignIn_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction SignIn_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { SignIn_ownKeys(Object(source), true).forEach(function (key) { SignIn_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { SignIn_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction SignIn_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction SignIn() {\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])({\n    email: \'\',\n    password: \'\'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var target = event.target;\n    var name = target.name,\n        value = target.value;\n    setUserInfo(SignIn_objectSpread({}, userInfo, SignIn_defineProperty({}, name, value)));\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    var email = userInfo.email,\n        password = userInfo.password;\n    if (email.trim() && password.trim()) dispatch(authentication_signIn(email, password, history));\n  };\n\n  return react_default.a.createElement("div", {\n    className: "app"\n  }, react_default.a.createElement("div", {\n    className: "main sign-in"\n  }, react_default.a.createElement("div", {\n    className: "start"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("h1", null, "Sign in QuanChat"), react_default.a.createElement(ThirdParty, null), react_default.a.createElement("p", null, "S\\u1EED d\\u1EE5ng t\\xE0i kho\\u1EA3n email \\u0111\\xE3 \\u0111\\u0103ng k\\xED:"), react_default.a.createElement("form", {\n    onSubmit: onSubmit\n  }, react_default.a.createElement(AuthInput, {\n    type: "email",\n    id: "inputEmail",\n    value: userInfo.email,\n    placeholder: "email@domain.com",\n    icon: "mail_outline",\n    onChange: onChange\n  }), react_default.a.createElement(AuthInput, {\n    type: "password",\n    id: "inputPassword",\n    value: userInfo.password,\n    placeholder: "M\\u1EADt kh\\u1EA9u",\n    icon: "lock_outline",\n    onChange: onChange\n  }), react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn button"\n  }, "\\u0110\\u0103ng Nh\\u1EADp"), react_default.a.createElement("div", {\n    className: "callout"\n  }, react_default.a.createElement("span", null, "Ch\\u01B0a c\\xF3 t\\xE0i kho\\u1EA3n? \\xA0", react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/sign-up"\n  }, "T\\u1EA1o ngay"))))))))), react_default.a.createElement(Aside, {\n    to: "/sign-up",\n    title: "Hello, Friend!",\n    content: "Nh\\u1EADp th\\xF4ng tin t\\xE0i kho\\u1EA3n v\\xE0 b\\u1EAFt \\u0111\\u1EA7u h\\xE0nh tr\\xECnh v\\u1EDBi QuanChat ngay n\\xE0o."\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Auth/SignUp.jsx\nfunction SignUp_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction SignUp_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { SignUp_ownKeys(Object(source), true).forEach(function (key) { SignUp_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { SignUp_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction SignUp_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction SignUp_slicedToArray(arr, i) { return SignUp_arrayWithHoles(arr) || SignUp_iterableToArrayLimit(arr, i) || SignUp_nonIterableRest(); }\n\nfunction SignUp_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction SignUp_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction SignUp_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction SignUp() {\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])({\n    name: \'\',\n    email: \'\',\n    password: \'\'\n  }),\n      _useState2 = SignUp_slicedToArray(_useState, 2),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var target = event.target;\n    var name = target.name,\n        value = target.value;\n    setUserInfo(SignUp_objectSpread({}, userInfo, SignUp_defineProperty({}, name, value)));\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    var name = userInfo.name,\n        email = userInfo.email,\n        password = userInfo.password;\n\n    if (name.trim() && email.trim() && password.trim()) {\n      dispatch(authentication_signUp(name, email, password));\n      setUserInfo({\n        name: \'\',\n        email: \'\',\n        password: \'\'\n      });\n    }\n  };\n\n  return react_default.a.createElement("div", {\n    className: "app"\n  }, react_default.a.createElement(Aside, {\n    to: "/",\n    title: "Welcome Back!",\n    content: "\\u0110\\u1EC3 gi\\u1EEF k\\u1EBFt n\\u1ED1i v\\u1EDBi b\\u1EA1n b\\xE8, vui l\\xF2ng s\\u1EED d\\u1EE5ng\\r th\\xF4ng tin t\\xE0i kho\\u1EA3n m\\xE0 b\\u1EA1n \\u0111\\xE3 \\u0111\\u0103ng k\\xED ."\n  }), react_default.a.createElement("div", {\n    className: "main sign-up"\n  }, react_default.a.createElement("div", {\n    className: "start"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("h1", null, "T\\u1EA1o t\\xE0i kho\\u1EA3n"), react_default.a.createElement(ThirdParty, null), react_default.a.createElement("p", null, "S\\u1EED d\\u1EE5ng email c\\u1EE7a b\\u1EA1n \\u0111\\u1EC3 \\u0111\\u0103ng k\\xED:"), react_default.a.createElement("form", {\n    className: "signup",\n    onSubmit: onSubmit\n  }, react_default.a.createElement("div", {\n    className: "form-parent"\n  }, react_default.a.createElement(AuthInput, {\n    type: "name",\n    id: "inputName",\n    value: userInfo.name,\n    placeholder: "T\\xEAn ng\\u01B0\\u1EDDi d\\xF9ng",\n    icon: "person_outline",\n    onChange: onChange\n  }), react_default.a.createElement(AuthInput, {\n    type: "email",\n    id: "inputEmail",\n    value: userInfo.email,\n    placeholder: "\\u0110\\u1ECBa ch\\u1EC9 Email",\n    icon: "mail_outline",\n    onChange: onChange\n  })), react_default.a.createElement(AuthInput, {\n    type: "password",\n    id: "inputPassword",\n    value: userInfo.password,\n    placeholder: "M\\u1EADt kh\\u1EA9u",\n    icon: "lock_outline",\n    onChange: onChange\n  }), react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn button"\n  }, "\\u0110\\u0103ng k\\xED"), react_default.a.createElement("div", {\n    className: "callout"\n  }, react_default.a.createElement("span", null, "\\u0110\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n? \\xA0", react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/"\n  }, "\\u0110\\u0103ng Nh\\u1EADp"))))))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Auth/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/NotFound/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction NotFound() {\n  return react_default.a.createElement("div", {\n    className: "not-found"\n  }, react_default.a.createElement("svg", {\n    width: "380px",\n    height: "500px",\n    viewBox: "0 0 837 1045"\n  }, react_default.a.createElement("g", {\n    id: "Page-1",\n    stroke: "none",\n    strokeWidth: 1,\n    fill: "none",\n    fillRule: "evenodd"\n  }, react_default.a.createElement("path", {\n    d: "M353,9 L626.664028,170 L626.664028,487 L353,642 L79.3359724,487 L79.3359724,170 L353,9 Z",\n    id: "Polygon-1",\n    stroke: "#007FB2",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M78.5,529 L147,569.186414 L147,648.311216 L78.5,687 L10,648.311216 L10,569.186414 L78.5,529 Z",\n    id: "Polygon-2",\n    stroke: "#EF4A5B",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M773,186 L827,217.538705 L827,279.636651 L773,310 L719,279.636651 L719,217.538705 L773,186 Z",\n    id: "Polygon-3",\n    stroke: "#795D9C",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M639,529 L773,607.846761 L773,763.091627 L639,839 L505,763.091627 L505,607.846761 L639,529 Z",\n    id: "Polygon-4",\n    stroke: "#F2773F",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M281,801 L383,861.025276 L383,979.21169 L281,1037 L179,979.21169 L179,861.025276 L281,801 Z",\n    id: "Polygon-5",\n    stroke: "#36B455",\n    strokeWidth: 6\n  }))), react_default.a.createElement("div", {\n    className: "not-found-content"\n  }, react_default.a.createElement("h1", null, "404"), react_default.a.createElement("p", null, "Kh\\xF4ng t\\xECm th\\u1EA5y trang b\\u1EA1n y\\xEAu c\\u1EA7u"), react_default.a.createElement("div", {\n    className: "buttons-con"\n  }, react_default.a.createElement("div", {\n    className: "action-link-wrap"\n  }, react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/"\n  }, "V\\u1EC1 trang ch\\u1EE7"), react_default.a.createElement("a", {\n    href: "https://github.com/18520339",\n    target: "_blank"\n  }, "Li\\xEAn h\\u1EC7")))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Navigation/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction Navigation() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomFilter = _useSelector.roomFilter,\n      currentUser = _useSelector.currentUser;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var isPrivate = roomFilter.isPrivate;\n\n  var onSignOut = function onSignOut() {\n    return dispatch(authentication_signOut());\n  };\n\n  return react_default.a.createElement("div", {\n    className: "navigation"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "inside"\n  }, react_default.a.createElement("div", {\n    className: "nav nav-tab menu"\n  }, react_default.a.createElement("button", {\n    className: "btn"\n  }, react_default.a.createElement("img", {\n    className: "avatar-xl",\n    src: currentUser.avatarURL\n  })), react_default.a.createElement("a", {\n    type: "button",\n    className: "".concat(isPrivate && \'active\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(\'\', 0, true));\n    }\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "account_circle")), react_default.a.createElement("a", {\n    type: "button",\n    className: "".concat(!isPrivate && \'active\', " f-grow1"),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(\'\', 0, false));\n    }\n  }, react_default.a.createElement("i", {\n    className: "material-icons active"\n  }, "chat_bubble_outline")), react_default.a.createElement("button", {\n    className: "btn mode"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "brightness_2")), react_default.a.createElement("button", {\n    className: "btn power",\n    onClick: onSignOut\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "power_settings_new"))))));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/OverlayTrigger.js + 2 modules\nvar OverlayTrigger = __webpack_require__(780);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Tooltip.js\nvar Tooltip = __webpack_require__(772);\n\n// CONCATENATED MODULE: ./src/components/Avatar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Avatar(_ref) {\n  var name = _ref.name,\n      type = _ref.type,\n      _ref$tooltip = _ref.tooltip,\n      tooltip = _ref$tooltip === void 0 ? \'top\' : _ref$tooltip,\n      size = _ref.size;\n  var avatarSize = !size ? \'avatar-md\' : "avatar-".concat(size);\n  var avatarAPI = \'https://avatars.dicebear.com/v2\';\n\n  if (type === \'room\') {\n    avatarAPI = "".concat(avatarAPI, "/jdenticon/").concat(name, ".svg");\n  } else if (type === \'user\') {\n    var options = {\n      eyes: \'squint\',\n      eyebrow: \'raised\',\n      mouth: \'smile\'\n    };\n    options = Object.keys(options).reduce(function (res, key) {\n      return "".concat(res, "options[").concat(key, "][]=").concat(options[key], "&");\n    }, []);\n    avatarAPI = "".concat(avatarAPI, "/avataaars/").concat(name, ".svg?").concat(options);\n  }\n\n  return react_default.a.createElement(OverlayTrigger["a" /* default */], {\n    placement: tooltip,\n    overlay: react_default.a.createElement(Tooltip["a" /* default */], null, name)\n  }, react_default.a.createElement("img", {\n    className: avatarSize,\n    src: avatarAPI,\n    alt: name\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/TopBar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction TopBar() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive;\n\n  var id = roomActive.id,\n      name = roomActive.name,\n      status = roomActive.status,\n      isPrivate = roomActive.isPrivate;\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var onShowStatus = function onShowStatus(status) {\n    if (isPrivate) status = status === \'online\' ? \'Online\' : \'Offline\';else status = \'Online\';\n    return "\\u0110ang ".concat(status);\n  };\n\n  var onPhoneChat = function onPhoneChat() {\n    if (id) dispatch(controls_toggleCall());\n  };\n\n  var onVideoChat = function onVideoChat() {\n    if (id) dispatch(controls_toggleCall(true));\n  };\n\n  var onShowMembers = function onShowMembers() {\n    if (id) dispatch(controls_toggleUsersBar());\n  };\n\n  return react_default.a.createElement("div", {\n    className: "top"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "inside"\n  }, react_default.a.createElement(Avatar, {\n    name: name,\n    type: isPrivate ? \'user\' : \'room\',\n    tooltip: "left"\n  }), react_default.a.createElement("div", {\n    className: "status"\n  }, react_default.a.createElement("i", {\n    className: "material-icons ".concat(isPrivate ? status : \'online\')\n  }, "fiber_manual_record")), react_default.a.createElement("div", {\n    className: "data"\n  }, react_default.a.createElement("h5", null, name), react_default.a.createElement("span", null, onShowStatus(status))), react_default.a.createElement("button", {\n    className: "btn d-md-block d-none",\n    onClick: onPhoneChat\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-30"\n  }, "phone_in_talk")), react_default.a.createElement("button", {\n    className: "btn d-md-block d-none",\n    onClick: onVideoChat\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-36"\n  }, "videocam")), react_default.a.createElement("button", {\n    className: "btn",\n    onClick: onShowMembers\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-30"\n  }, "info"))))));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-new-window/umd/react-new-window.js\nvar react_new_window = __webpack_require__(335);\nvar react_new_window_default = /*#__PURE__*/__webpack_require__.n(react_new_window);\n\n// CONCATENATED MODULE: ./src/components/VideoCall/LocalOptions.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction LocalOptions(_ref) {\n  var children = _ref.children;\n  return react_default.a.createElement(simplewebrtc_module["k" /* UserControls */], {\n    render: function render(_ref2) {\n      var isMuted = _ref2.isMuted,\n          isPaused = _ref2.isPaused,\n          mute = _ref2.mute,\n          unmute = _ref2.unmute,\n          resumeVideo = _ref2.resumeVideo,\n          pauseVideo = _ref2.pauseVideo;\n      return react_default.a.createElement("div", {\n        className: "options"\n      }, react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: function onClick() {\n          return isPaused ? resumeVideo() : pauseVideo();\n        }\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, isPaused ? \'play_arrow\' : \'pause\')), children, react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: function onClick() {\n          return isMuted ? unmute() : mute();\n        }\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, isMuted ? \'volume_off\' : \'volume_up\')));\n    }\n  });\n}\n// CONCATENATED MODULE: ./src/components/VideoCall/Options.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction Options(_ref) {\n  var localVideos = _ref.localVideos,\n      localScreen = _ref.localScreen;\n  var dispatch = Object(es["c" /* useDispatch */])();\n  return react_default.a.createElement(LocalOptions, null, localVideos && localVideos.length ? react_default.a.createElement(simplewebrtc_module["e" /* MediaControls */], {\n    media: localVideos[0],\n    autoRemove: true,\n    render: function render(_ref2) {\n      var remove = _ref2.remove;\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: remove\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "videocam_off"));\n    }\n  }) : react_default.a.createElement(simplewebrtc_module["i" /* RequestUserMedia */], {\n    video: true,\n    audio: true,\n    render: function render(getUserMedia) {\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: getUserMedia\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "videocam"));\n    }\n  }), react_default.a.createElement("button", {\n    className: "btn option call-end",\n    onClick: function onClick() {\n      return dispatch(controls_toggleCall());\n    }\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-30"\n  }, "call_end")), localScreen ? react_default.a.createElement(simplewebrtc_module["e" /* MediaControls */], {\n    media: localScreen,\n    autoRemove: true,\n    render: function render(_ref3) {\n      var stopSharing = _ref3.stopSharing;\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: stopSharing\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "stop_screen_share"));\n    }\n  }) : react_default.a.createElement(simplewebrtc_module["h" /* RequestDisplayMedia */], {\n    render: function render(getDisplayMedia) {\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: getDisplayMedia\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "screen_share"));\n    }\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/VideoCall/CallStatus.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction CallStatus(_ref) {\n  var value = _ref.value;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomActive;\n  }),\n      name = _useSelector.name,\n      isPrivate = _useSelector.isPrivate;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var avatarType = isPrivate ? \'user\' : \'room\';\n\n  var onCloseCall = function onCloseCall() {\n    return dispatch(controls_toggleCall());\n  };\n\n  return react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "inside"\n  }, react_default.a.createElement("div", {\n    className: "panel"\n  }, react_default.a.createElement("div", {\n    className: "participant"\n  }, react_default.a.createElement(Avatar, {\n    name: name,\n    type: avatarType,\n    tooltip: "bottom",\n    size: "xxl"\n  }), react_default.a.createElement("span", null, value)), react_default.a.createElement(Options, null), react_default.a.createElement("button", {\n    className: "btn back",\n    onClick: onCloseCall\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-24"\n  }, "chat")))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/VideoCall/index.jsx\nfunction VideoCall_toConsumableArray(arr) { return VideoCall_arrayWithoutHoles(arr) || VideoCall_iterableToArray(arr) || VideoCall_nonIterableSpread(); }\n\nfunction VideoCall_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction VideoCall_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction VideoCall_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\nfunction VideoCall() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive,\n      videoCall = _useSelector.videoCall;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var id = roomActive.id,\n      name = roomActive.name;\n\n  var onUnload = function onUnload() {\n    return dispatch(controls_toggleCall());\n  };\n\n  return react_default.a.createElement(react_new_window_default.a, {\n    title: name,\n    onUnload: onUnload\n  }, react_default.a.createElement("link", {\n    href: "https://fonts.googleapis.com/icon?family=Material+Icons",\n    rel: "stylesheet"\n  }), react_default.a.createElement("div", {\n    className: "call"\n  }, react_default.a.createElement(simplewebrtc_module["f" /* Provider */], {\n    configUrl: SWRTC_CONFIG_URL\n  }, react_default.a.createElement(simplewebrtc_module["b" /* Connecting */], null, react_default.a.createElement(CallStatus, {\n    value: "\\u0110ang k\\u1EBFt n\\u1ED1i"\n  })), react_default.a.createElement(simplewebrtc_module["c" /* Disconnected */], null, react_default.a.createElement(CallStatus, {\n    value: "Kh\\xF4ng c\\xF3 k\\u1EBFt n\\u1ED1i"\n  })), react_default.a.createElement(simplewebrtc_module["a" /* Connected */], null, react_default.a.createElement(simplewebrtc_module["g" /* RemoteAudioPlayer */], null), react_default.a.createElement(simplewebrtc_module["i" /* RequestUserMedia */], {\n    audio: true,\n    auto: true\n  }), videoCall.cam && react_default.a.createElement(simplewebrtc_module["i" /* RequestUserMedia */], {\n    video: true,\n    auto: true\n  }), react_default.a.createElement(simplewebrtc_module["j" /* Room */], {\n    roomAddress: id,\n    name: name,\n    password: key\n  }, function (_ref) {\n    var localMedia = _ref.localMedia,\n        remoteMedia = _ref.remoteMedia;\n    var remoteVideos = remoteMedia.filter(function (m) {\n      return m.kind === \'video\';\n    });\n    var localVideos = localMedia.filter(function (m) {\n      return m.kind === \'video\' && m.shared;\n    });\n    var localScreens = localVideos.filter(function (m) {\n      return m.screenCapture;\n    });\n    return react_default.a.createElement("div", {\n      className: "video-chat"\n    }, react_default.a.createElement(simplewebrtc_module["d" /* GridLayout */], {\n      className: "w-100",\n      items: [localVideos[0]].concat(VideoCall_toConsumableArray(localScreens), VideoCall_toConsumableArray(remoteVideos)),\n      renderCell: function renderCell(item) {\n        return item && react_default.a.createElement(simplewebrtc_module["l" /* Video */], {\n          media: item\n        });\n      }\n    }), react_default.a.createElement(Options, {\n      localVideos: localVideos,\n      localScreen: localScreens[0]\n    }));\n  })))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Controls/FilterRooms.jsx\nfunction FilterRooms_slicedToArray(arr, i) { return FilterRooms_arrayWithHoles(arr) || FilterRooms_iterableToArrayLimit(arr, i) || FilterRooms_nonIterableRest(); }\n\nfunction FilterRooms_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction FilterRooms_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction FilterRooms_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction FilterRooms(_ref) {\n  var placeholder = _ref.placeholder;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomFilter;\n  }),\n      name = _useSelector.name,\n      status = _useSelector.status,\n      isPrivate = _useSelector.isPrivate;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])(\'\'),\n      _useState2 = FilterRooms_slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var roomName = event.target.value.toLowerCase().trim();\n    setSearchText(event.target.value);\n    dispatch(controls_filterRooms(roomName, status, isPrivate));\n  };\n\n  Object(react["useEffect"])(function () {\n    return setSearchText(\'\');\n  }, [isPrivate]);\n  return react_default.a.createElement("div", {\n    id: "room-filter"\n  }, react_default.a.createElement("div", {\n    className: "search"\n  }, react_default.a.createElement("form", {\n    className: "form-inline position-relative"\n  }, react_default.a.createElement("input", {\n    type: "search",\n    className: "form-control",\n    placeholder: placeholder,\n    onChange: onChange,\n    value: searchText\n  }), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn btn-link loop"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "search")))), react_default.a.createElement("div", {\n    className: "list-group sort"\n  }, react_default.a.createElement("button", {\n    className: "btn ".concat(status === 0 && \'active show\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(name, 0, isPrivate));\n    }\n  }, "T\\u1EA5t c\\u1EA3"), react_default.a.createElement("button", {\n    className: "btn ".concat(status === 1 && \'active show\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(name, 1, isPrivate));\n    }\n  }, isPrivate ? \'Online\' : \'Đã đọc\'), react_default.a.createElement("button", {\n    className: "btn ".concat(status === -1 && \'active show\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(name, -1, isPrivate));\n    }\n  }, isPrivate ? \'Offline\' : \'Chưa đọc\')));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/DropdownButton.js\nvar DropdownButton = __webpack_require__(773);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Dropdown.js + 13 modules\nvar Dropdown = __webpack_require__(145);\n\n// CONCATENATED MODULE: ./src/components/Controls/SortMembers.jsx\nfunction SortMembers_slicedToArray(arr, i) { return SortMembers_arrayWithHoles(arr) || SortMembers_iterableToArrayLimit(arr, i) || SortMembers_nonIterableRest(); }\n\nfunction SortMembers_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction SortMembers_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction SortMembers_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction SortMembers() {\n  var userSort = Object(es["d" /* useSelector */])(function (state) {\n    return state.userSort;\n  });\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])(\'Sắp xếp theo\'),\n      _useState2 = SortMembers_slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var by = userSort.by,\n      value = userSort.value;\n  return react_default.a.createElement(DropdownButton["a" /* default */], {\n    title: title,\n    size: "sm",\n    variant: "light"\n  }, react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      setTitle(\'Đang Online\');\n      dispatch(controls_sortMembers(\'status\', 1));\n    }\n  }, "\\u0110ang Online", by == \'status\' && value == 1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")), react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      setTitle(\'Đang Offline\');\n      dispatch(controls_sortMembers(\'status\', -1));\n    }\n  }, "\\u0110ang Offline", by == \'status\' && value == -1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")), react_default.a.createElement(Dropdown["a" /* default */].Divider, null), react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      setTitle(\'A đến Z\');\n      dispatch(controls_sortMembers(\'name\', 1));\n    }\n  }, "A \\u0111\\u1EBFn Z", by == \'name\' && value == 1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")), react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      setTitle(\'Z đến A\');\n      dispatch(controls_sortMembers(\'name\', -1));\n    }\n  }, "Z \\u0111\\u1EBFn A", by == \'name\' && value == -1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Controls/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/ButtonToolbar.js\nvar ButtonToolbar = __webpack_require__(774);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Button.js\nvar Button = __webpack_require__(336);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Modal.js + 20 modules\nvar Modal = __webpack_require__(777);\n\n// CONCATENATED MODULE: ./src/components/PopUp/Dialog.jsx\nfunction Dialog_slicedToArray(arr, i) { return Dialog_arrayWithHoles(arr) || Dialog_iterableToArrayLimit(arr, i) || Dialog_nonIterableRest(); }\n\nfunction Dialog_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction Dialog_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction Dialog_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Dialog(props) {\n  var _useState = Object(react["useState"])(false),\n      _useState2 = Dialog_slicedToArray(_useState, 2),\n      modalShow = _useState2[0],\n      setModalShow = _useState2[1];\n\n  var type = props.type,\n      title = props.title,\n      icon = props.icon,\n      disabled = props.disabled,\n      children = props.children;\n\n  var onCloseModal = function onCloseModal() {\n    return setModalShow(false);\n  };\n\n  var onShowModal = function onShowModal() {\n    if (!disabled) setModalShow(true);\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    props.onSubmit();\n    onCloseModal();\n  };\n\n  return react_default.a.createElement(ButtonToolbar["a" /* default */], null, react_default.a.createElement(Button["a" /* default */], {\n    className: type,\n    variant: "outline-primary",\n    onClick: onShowModal\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, icon)), react_default.a.createElement(Modal["a" /* default */], {\n    centered: true,\n    show: modalShow,\n    onHide: onCloseModal\n  }, react_default.a.createElement("div", {\n    className: "requests"\n  }, react_default.a.createElement(Modal["a" /* default */].Header, null, react_default.a.createElement(Modal["a" /* default */].Title, null, react_default.a.createElement("div", {\n    className: "title"\n  }, react_default.a.createElement("h1", null, title), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn",\n    onClick: onCloseModal\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "close"))))), react_default.a.createElement(Modal["a" /* default */].Body, null, react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("form", {\n    onSubmit: onSubmit\n  }, children, react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn button w-100"\n  }, title)))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/PopUp/CreateRoom.jsx\nfunction CreateRoom_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction CreateRoom_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { CreateRoom_ownKeys(Object(source), true).forEach(function (key) { CreateRoom_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { CreateRoom_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction CreateRoom_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction CreateRoom_slicedToArray(arr, i) { return CreateRoom_arrayWithHoles(arr) || CreateRoom_iterableToArrayLimit(arr, i) || CreateRoom_nonIterableRest(); }\n\nfunction CreateRoom_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction CreateRoom_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction CreateRoom_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction CreateRoom() {\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])({\n    name: \'\',\n    firstMessage: \'\'\n  }),\n      _useState2 = CreateRoom_slicedToArray(_useState, 2),\n      roomInfo = _useState2[0],\n      setRoomInfo = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var target = event.target;\n    var name = target.name,\n        value = target.value;\n    setRoomInfo(CreateRoom_objectSpread({}, roomInfo, CreateRoom_defineProperty({}, name, value)));\n  };\n\n  var onSubmit = function onSubmit() {\n    var name = roomInfo.name,\n        firstMessage = roomInfo.firstMessage;\n\n    if (name.trim()) {\n      dispatch(rooms_createRoom(name, firstMessage));\n      setRoomInfo(CreateRoom_objectSpread({}, roomInfo, {\n        name: \'\',\n        firstMessage: \'\'\n      }));\n    }\n  };\n\n  return react_default.a.createElement(Dialog, {\n    type: "create",\n    icon: "create",\n    title: "T\\u1EA1o ph\\xF2ng m\\u1EDBi",\n    onSubmit: onSubmit\n  }, react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "T\\xEAn ph\\xF2ng:"), react_default.a.createElement("input", {\n    type: "text",\n    name: "name",\n    value: roomInfo.name,\n    className: "form-control",\n    placeholder: "\\u0110\\u1EB7t t\\xEAn ph\\xF2ng...",\n    onChange: onChange,\n    required: true\n  })), react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "Tin nh\\u1EAFn:"), react_default.a.createElement("textarea", {\n    name: "firstMessage",\n    value: roomInfo.firstMessage,\n    className: "text-control",\n    placeholder: "Nh\\u1EADp tin nh\\u1EAFn \\u0111\\u1EA7u ti\\xEAn c\\u1EE7a b\\u1EA1n...",\n    onChange: onChange\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-images-upload/compiled.js\nvar compiled = __webpack_require__(337);\nvar compiled_default = /*#__PURE__*/__webpack_require__.n(compiled);\n\n// CONCATENATED MODULE: ./src/components/PopUp/UploadImage.jsx\nfunction UploadImage_slicedToArray(arr, i) { return UploadImage_arrayWithHoles(arr) || UploadImage_iterableToArrayLimit(arr, i) || UploadImage_nonIterableRest(); }\n\nfunction UploadImage_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction UploadImage_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction UploadImage_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction UploadImage() {\n  var roomActive = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomActive;\n  });\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])([]),\n      _useState2 = UploadImage_slicedToArray(_useState, 2),\n      pictures = _useState2[0],\n      setPictures = _useState2[1];\n\n  var _useState3 = Object(react["useState"])(\'\'),\n      _useState4 = UploadImage_slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var onDrop = function onDrop(pictureFiles) {\n    return setPictures(pictureFiles);\n  };\n\n  var onChange = function onChange(event) {\n    return setMessage(event.target.value);\n  };\n\n  var onSubmit = function onSubmit() {\n    if (pictures.length === 0) return;\n    var parts = [];\n    pictures.forEach(function (pic) {\n      return parts.push({\n        file: pic\n      });\n    });\n    if (message.trim()) parts.push({\n      type: \'text/plain\',\n      content: message\n    });\n    dispatch(messages_sendMessage(parts));\n    setPictures([]);\n    setMessage(\'\');\n  };\n\n  return react_default.a.createElement(Dialog, {\n    type: "attach",\n    title: "Th\\xEAm \\u1EA3nh",\n    icon: "photo",\n    onSubmit: onSubmit,\n    disabled: !roomActive.id\n  }, react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "Tin nh\\u1EAFn:"), react_default.a.createElement(compiled_default.a, {\n    withIcon: true,\n    withPreview: true,\n    buttonText: "Ch\\u1ECDn \\u1EA3nh t\\u1EEB m\\xE1y",\n    imgExtension: [\'.jpg\', \'.jpeg\', \'.png\', \'.gif\'],\n    maxFileSize: 5242880,\n    onChange: onDrop\n  })), react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "Tin nh\\u1EAFn:"), react_default.a.createElement("input", {\n    type: "text",\n    name: "name",\n    value: message,\n    className: "form-control",\n    placeholder: "Th\\xEAm tin nh\\u1EAFn v\\u1EC1 \\u1EA3nh n\\xE0y...",\n    onChange: onChange\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/PopUp/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/LeftSideBar/ChatList.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction ChatList(_ref) {\n  var match = _ref.match,\n      chatName = _ref.chatName,\n      isOnline = _ref.isOnline,\n      room = _ref.room,\n      type = _ref.type;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive;\n\n  var id = room.id,\n      unreadCount = room.unreadCount,\n      createdAt = room.createdAt,\n      lastMessageAt = room.lastMessageAt,\n      customData = room.customData;\n  var isActive = roomActive.id === id && \'active\';\n  var isRead = unreadCount > 0 && \'unread\';\n  var lastMessage = customData.lastMessage;\n  var lastMessageTime = new Date(lastMessageAt ? lastMessageAt : createdAt).toLocaleDateString(\'vi-Vn\', {\n    weekday: \'narrow\',\n    year: \'2-digit\',\n    month: \'2-digit\',\n    day: \'2-digit\'\n  });\n\n  var showUnreadCount = function showUnreadCount(unreadCount) {\n    if (unreadCount > 0) {\n      var color = unreadCount > 10 ? \'pink\' : \'yellow\';\n      return react_default.a.createElement("div", {\n        className: "new bg-".concat(color)\n      }, react_default.a.createElement("span", null, unreadCount));\n    }\n  };\n\n  return react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "".concat(match.path, "/").concat(id),\n    className: "".concat(isRead, " ").concat(isActive, " single")\n  }, react_default.a.createElement(Avatar, {\n    name: chatName,\n    type: type\n  }), react_default.a.createElement("div", {\n    className: "status"\n  }, react_default.a.createElement("i", {\n    className: "material-icons ".concat(isOnline)\n  }, "fiber_manual_record")), react_default.a.createElement("div", {\n    className: "data"\n  }, react_default.a.createElement("h5", null, chatName), react_default.a.createElement("span", null, lastMessageTime), react_default.a.createElement("p", null, lastMessage ? lastMessage : \'Chưa có tin nhắn\')), showUnreadCount(unreadCount));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/LeftSideBar/Contacts.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction Contacts(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      rooms = _useSelector.rooms,\n      roomFilter = _useSelector.roomFilter;\n\n  return react_default.a.createElement("div", {\n    className: "discussions"\n  }, react_default.a.createElement("h1", null, "Danh s\\xE1ch li\\xEAn h\\u1EC7"), react_default.a.createElement("div", {\n    className: "list-group"\n  }, rooms.filter(function (room) {\n    if (!room.id) return;\n    return room.isPrivate;\n  }).filter(function (room) {\n    var _onGetPrivateUser = onGetPrivateUser(room, currentUser.id, true),\n        roomName = _onGetPrivateUser.roomName,\n        roomStatus = _onGetPrivateUser.roomStatus;\n\n    if (roomFilter.status === 0) return roomName.indexOf(roomFilter.name) !== -1;\n    return roomName.indexOf(roomFilter.name) !== -1 && roomStatus === roomFilter.status;\n  }).map(function (room) {\n    var _onGetPrivateUser2 = onGetPrivateUser(room, currentUser.id, false),\n        roomName = _onGetPrivateUser2.roomName,\n        roomStatus = _onGetPrivateUser2.roomStatus;\n\n    return react_default.a.createElement(ChatList, {\n      key: room.id,\n      match: match,\n      chatName: roomName,\n      isOnline: roomStatus,\n      room: room,\n      type: "user"\n    });\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/LeftSideBar/Rooms.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction Rooms(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      rooms = _useSelector.rooms,\n      roomFilter = _useSelector.roomFilter;\n\n  return react_default.a.createElement("div", {\n    className: "discussions"\n  }, react_default.a.createElement("h1", null, "C\\xE1c ph\\xF2ng chat"), react_default.a.createElement("div", {\n    className: "list-group"\n  }, rooms.filter(function (room) {\n    if (!room.id) return;\n    return !room.isPrivate;\n  }).filter(function (_ref2) {\n    var name = _ref2.name,\n        unreadCount = _ref2.unreadCount;\n    var roomName = name.toLowerCase();\n    var roomStatus = unreadCount === 0 ? 1 : -1;\n    if (roomFilter.status === 0) return roomName.indexOf(roomFilter.name) !== -1;\n    return roomName.indexOf(roomFilter.name) !== -1 && roomStatus === roomFilter.status;\n  }).sort(function (a, b) {\n    var lastMessageA = new Date(a.lastMessageAt);\n    var lastMessageB = new Date(b.lastMessageAt);\n    return lastMessageB - lastMessageA;\n  }).map(function (room) {\n    var id = room.id,\n        name = room.name,\n        userIds = room.userIds;\n    var isOnline = userIds && userIds.find(function (id) {\n      return currentUser.id === id;\n    });\n    return react_default.a.createElement(ChatList, {\n      key: id,\n      match: match,\n      chatName: name,\n      isOnline: "".concat(isOnline && \'online\'),\n      room: room,\n      type: "room"\n    });\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Spinner.js\nvar Spinner = __webpack_require__(775);\n\n// CONCATENATED MODULE: ./src/components/LeftSideBar/RoomStatus.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction RoomStatus(_ref) {\n  var title = _ref.title;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      isLoading = _useSelector.isLoading;\n\n  return react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "no-messages"\n  }, !isLoading && react_default.a.createElement("i", {\n    className: "material-icons md-48"\n  }, "forum"), react_default.a.createElement("p", null, title), isLoading && react_default.a.createElement(Spinner["a" /* default */], {\n    animation: "border",\n    variant: "primary"\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/LeftSideBar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction LeftSideBar(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomFilter;\n  }),\n      isPrivate = _useSelector.isPrivate;\n\n  return react_default.a.createElement("div", {\n    className: "sidebar"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement(FilterRooms, {\n    placeholder: isPrivate ? \'Tìm kiếm liên hệ...\' : \'Tìm kiếm phòng chat...\'\n  }), !isPrivate && react_default.a.createElement(CreateRoom, null), isPrivate ? react_default.a.createElement(Contacts, {\n    match: match\n  }) : react_default.a.createElement(Rooms, {\n    match: match\n  }))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/RightSideBar/Members.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction Members(_ref) {\n  var match = _ref.match,\n      adminId = _ref.adminId,\n      isPrivate = _ref.isPrivate;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      rooms = _useSelector.rooms,\n      roomUsers = _useSelector.roomUsers,\n      userSort = _useSelector.userSort;\n\n  var privateRooms = rooms.filter(function (room) {\n    return room.isPrivate;\n  }).map(function (_ref2) {\n    var id = _ref2.id,\n        customData = _ref2.customData;\n    var memberIds = customData.members.map(function (member) {\n      return member.id;\n    });\n    return {\n      id: id,\n      memberIds: memberIds\n    };\n  });\n\n  var onShowMemberData = function onShowMemberData(id, createdDate) {\n    createdDate = "\\u0110\\u01B0\\u1EE3c t\\u1EA1o v\\xE0o th\\xE1ng ".concat(createdDate);\n    if (isPrivate) return createdDate;\n    return adminId === id ? \'Quản trị viên\' : createdDate;\n  };\n\n  return react_default.a.createElement("div", {\n    className: "contacts"\n  }, react_default.a.createElement("div", {\n    className: "sort-members"\n  }, react_default.a.createElement("h1", null, "Th\\xE0nh vi\\xEAn", react_default.a.createElement("hr", null)), react_default.a.createElement(SortMembers, null)), react_default.a.createElement("div", {\n    className: "list-group"\n  }, roomUsers.sort(function (a, b) {\n    var by = userSort.by,\n        value = userSort.value;\n\n    if (by == \'name\') {\n      var nameA = a.name.toLowerCase();\n      var nameB = b.name.toLowerCase();\n      if (nameA > nameB) return value;\n      if (nameA < nameB) return -value;\n      return 0;\n    } else if (by == \'status\') {\n      var stateA = a.presence.state;\n      var stateB = b.presence.state;\n      if (stateA > stateB) return -value;\n      if (stateA < stateB) return value;\n      return 0;\n    }\n  }).map(function (_ref3) {\n    var id = _ref3.id,\n        name = _ref3.name,\n        presence = _ref3.presence,\n        createdAt = _ref3.createdAt;\n    var index = privateRooms.findIndex(function (_ref4) {\n      var memberIds = _ref4.memberIds;\n      if (currentUser.id === id) return memberIds.length === 1;\n      return memberIds.includes(currentUser.id) && memberIds.includes(id);\n    });\n    var state = presence.state;\n    var createdDate = new Date(createdAt).toLocaleDateString(\'vi-VN\', {\n      year: \'2-digit\',\n      month: \'numeric\'\n    });\n    return react_default.a.createElement(react_router_dom["b" /* Link */], {\n      key: id,\n      to: "".concat(match.path, "/").concat(privateRooms[index].id),\n      className: "contact"\n    }, react_default.a.createElement(Avatar, {\n      name: name,\n      type: "user"\n    }), react_default.a.createElement("div", {\n      className: "status"\n    }, react_default.a.createElement("i", {\n      className: "material-icons ".concat(state)\n    }, "fiber_manual_record")), react_default.a.createElement("div", {\n      className: "data"\n    }, react_default.a.createElement("h5", null, name), react_default.a.createElement("p", null, onShowMemberData(id, createdDate))), react_default.a.createElement("div", {\n      className: "person-add"\n    }, react_default.a.createElement("i", {\n      className: "material-icons"\n    }, "person")));\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Jumbotron.js\nvar Jumbotron = __webpack_require__(776);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Accordion.js + 4 modules\nvar Accordion = __webpack_require__(778);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Card.js + 2 modules\nvar Card = __webpack_require__(779);\n\n// EXTERNAL MODULE: ./node_modules/react-images/dist/react-images.es.js + 1 modules\nvar react_images_es = __webpack_require__(146);\n\n// CONCATENATED MODULE: ./src/components/Images/ImageCarousel.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction ImageCarousel() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      images = _useSelector.images,\n      showCarousel = _useSelector.showCarousel;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var toggleModal = function toggleModal() {\n    return dispatch(controls_toggleCarousel());\n  };\n\n  return react_default.a.createElement(react_images_es["b" /* ModalGateway */], null, react_default.a.createElement(react_images_es["a" /* Modal */], {\n    onClose: toggleModal\n  }, react_default.a.createElement(react_images_es["c" /* default */], {\n    currentIndex: showCarousel.imageIndex,\n    views: images\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Images/ImageList.jsx\nfunction ImageList_slicedToArray(arr, i) { return ImageList_arrayWithHoles(arr) || ImageList_iterableToArrayLimit(arr, i) || ImageList_nonIterableRest(); }\n\nfunction ImageList_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction ImageList_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction ImageList_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction ImageList() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      images = _useSelector.images,\n      showCarousel = _useSelector.showCarousel;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])(false),\n      _useState2 = ImageList_slicedToArray(_useState, 2),\n      rotate = _useState2[0],\n      setRotate = _useState2[1];\n\n  var onRotateIcon = function onRotateIcon() {\n    return setRotate(!rotate);\n  };\n\n  var onShowImages = function onShowImages() {\n    if (images.length === 0) return react_default.a.createElement(Jumbotron["a" /* default */], {\n      className: "m-0 text-center"\n    }, react_default.a.createElement("i", {\n      className: "material-icons display-4"\n    }, "photo_size_select_actual"), react_default.a.createElement("p", null, "Kh\\xF4ng c\\xF3 h\\xECnh \\u1EA3nh \\u0111\\u1EC3 hi\\u1EC3n th\\u1ECB"));\n    return images.map(function (url, index) {\n      return react_default.a.createElement("img", {\n        key: index,\n        className: "img-thumbnail",\n        src: url.src,\n        alt: "attachment",\n        onClick: function onClick() {\n          return dispatch(controls_toggleCarousel(index, \'ImageList\'));\n        }\n      });\n    });\n  };\n\n  Object(react["useEffect"])(function () {}, [images]);\n  return react_default.a.createElement(Accordion["a" /* default */], null, react_default.a.createElement(Card["a" /* default */], null, react_default.a.createElement(Card["a" /* default */].Header, null, react_default.a.createElement(Accordion["a" /* default */].Toggle, {\n    as: Button["a" /* default */],\n    variant: "default",\n    eventKey: "0",\n    onClick: onRotateIcon\n  }, "\\u1EA2nh \\u0111\\xE3 chia s\\u1EBB", react_default.a.createElement("i", {\n    className: "material-icons ".concat(rotate && \'rotate\')\n  }, "keyboard_arrow_left"))), react_default.a.createElement(Accordion["a" /* default */].Collapse, {\n    eventKey: "0"\n  }, react_default.a.createElement(Card["a" /* default */].Body, {\n    className: "p-0"\n  }, onShowImages(), showCarousel.where === \'ImageList\' && react_default.a.createElement(ImageCarousel, null)))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Images/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/RightSideBar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction RightSideBar(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      showUsersBar = _useSelector.showUsersBar,\n      roomActive = _useSelector.roomActive;\n\n  var name = roomActive.name,\n      createdByUserId = roomActive.createdByUserId,\n      isPrivate = roomActive.isPrivate;\n  var avatarType = isPrivate ? \'user\' : \'room\';\n  return react_default.a.createElement("div", {\n    className: "sidebar ".concat(!showUsersBar && \'d-none\')\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "room-info"\n  }, react_default.a.createElement(Avatar, {\n    name: name,\n    type: avatarType,\n    size: "xl"\n  }), react_default.a.createElement("h4", null, name)), react_default.a.createElement("hr", null), react_default.a.createElement(Members, {\n    match: match,\n    adminId: createdByUserId,\n    isPrivate: isPrivate\n  })), react_default.a.createElement("hr", null), react_default.a.createElement(ImageList, null)));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/Wrapper.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Wrapper(_ref) {\n  var userType = _ref.userType,\n      userName = _ref.userName,\n      updatedAt = _ref.updatedAt,\n      children = _ref.children;\n  return react_default.a.createElement("div", {\n    className: "message ".concat(userType)\n  }, userType !== \'me\' && react_default.a.createElement(Avatar, {\n    name: userName,\n    type: "user"\n  }), react_default.a.createElement("div", {\n    className: "text-main"\n  }, react_default.a.createElement("div", {\n    className: "text-group ".concat(userType)\n  }, children), updatedAt && react_default.a.createElement("span", null, new Date(updatedAt).toLocaleTimeString(\'en-US\', {\n    hour: \'2-digit\',\n    minute: \'2-digit\'\n  }))));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-player/lib/ReactPlayer.js\nvar ReactPlayer = __webpack_require__(340);\nvar ReactPlayer_default = /*#__PURE__*/__webpack_require__.n(ReactPlayer);\n\n// EXTERNAL MODULE: ./node_modules/@microlink/react/dist/microlink.m.js\nvar microlink_m = __webpack_require__(341);\n\n// CONCATENATED MODULE: ./src/components/MessageList/LinkPreview.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction LinkPreview(_ref) {\n  var urlMatches = _ref.urlMatches;\n  var videoSignal = {\n    youtube: \'watch?v=\',\n    facebook: \'videos\'\n  };\n  return urlMatches.map(function (url, index) {\n    if (url.includes(\'youtube\') && url.includes(videoSignal.youtube) || url.includes(\'facebook\') && url.includes(videoSignal.facebook)) return react_default.a.createElement(ReactPlayer_default.a, {\n      key: index,\n      className: "mt-2",\n      url: url,\n      width: "100%",\n      height: "300px",\n      controls: true\n    });\n    return react_default.a.createElement(microlink_m["a" /* default */], {\n      key: index,\n      className: "mt-2",\n      url: url\n    });\n  });\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/Content.jsx\nfunction Content_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction Content(_ref) {\n  var currentUserName = _ref.currentUserName,\n      text = _ref.text;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomUsers = _useSelector.roomUsers;\n\n  var insertTextAtIndices = function insertTextAtIndices(text, obj) {\n    return text.replace(/./g, function (character, index) {\n      return obj[index] ? obj[index] + character : character;\n    });\n  };\n\n  var messageText = text;\n  var urlMatches = text.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\n  var mentions = text.match(/@[a-zA-Z0-9]+/g) || [];\n  var roomUserNames = roomUsers.map(function (user) {\n    return "@".concat(user.name);\n  });\n  var mentionedUsers = mentions.filter(function (username) {\n    return roomUserNames.includes(username);\n  });\n  urlMatches.forEach(function (link) {\n    var _insertTextAtIndices;\n\n    var startIndex = text.indexOf(link);\n    var endIndex = startIndex + link.length;\n    messageText = insertTextAtIndices(messageText, (_insertTextAtIndices = {}, Content_defineProperty(_insertTextAtIndices, startIndex, "<a class=\\"embedded-link\\" href=\\"".concat(link, "\\" target=\\"_blank\\">")), Content_defineProperty(_insertTextAtIndices, endIndex, \'</a>\'), _insertTextAtIndices));\n  });\n  mentionedUsers.forEach(function (user) {\n    var _insertTextAtIndices2;\n\n    var startIndex = messageText.indexOf(user);\n    var endIndex = startIndex + user.length;\n    var isMe = currentUserName === user.substring(1) ? \'danger\' : \'info\';\n    messageText = insertTextAtIndices(messageText, (_insertTextAtIndices2 = {}, Content_defineProperty(_insertTextAtIndices2, startIndex, "<span class=\\"badge badge-pill badge-".concat(isMe, "\\">")), Content_defineProperty(_insertTextAtIndices2, endIndex, \'</span>\'), _insertTextAtIndices2));\n  });\n  return react_default.a.createElement("div", null, react_default.a.createElement("p", {\n    dangerouslySetInnerHTML: {\n      __html: messageText\n    }\n  }), react_default.a.createElement(LinkPreview, {\n    urlMatches: urlMatches\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/Message.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction Message(_ref) {\n  var parts = _ref.parts,\n      userType = _ref.userType;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      images = _useSelector.images;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  Object(react["useEffect"])(function () {}, [images]);\n  if (parts.length === 0) return;\n  return parts.map(function (part, index) {\n    var partType = part.partType,\n        payload = part.payload;\n    if (partType === \'inline\') return react_default.a.createElement("div", {\n      key: index,\n      className: "text ".concat(userType)\n    }, react_default.a.createElement(Content, {\n      currentUserName: currentUser.name,\n      text: payload.content\n    }));\n    if (Date.now() > Date.parse(payload._expiration)) payload._fetchNewDownloadURL();\n    return react_default.a.createElement("img", {\n      key: index,\n      className: "w-25 img-thumbnail \\n                    ".concat(index !== parts.length - 1 && \'mb-3\', "\\n                "),\n      src: payload._downloadURL,\n      alt: "attachment",\n      onClick: function onClick() {\n        return dispatch(controls_toggleCarousel(index, \'MessageList\'));\n      }\n    });\n  });\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction MessageList(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      roomUsers = _useSelector.roomUsers,\n      typingUsers = _useSelector.typingUsers,\n      messages = _useSelector.messages,\n      isLoading = _useSelector.isLoading,\n      justLoadMore = _useSelector.justLoadMore,\n      showCarousel = _useSelector.showCarousel;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var messageNode = Object(react["useRef"])(null);\n  var messageDay = 0;\n  var roomId = match.params.roomId;\n  var roomNotFound = !roomUsers.length;\n  Object(react["useEffect"])(function () {\n    dispatch(rooms_enterRoom(roomId));\n  }, [roomId]);\n  Object(react["useEffect"])(function () {\n    messageNode.current.scrollIntoView();\n  }, [isLoading]);\n  Object(react["useEffect"])(function () {\n    if (document.hasFocus() && roomId && !justLoadMore) messageNode.current.scrollIntoView({\n      behavior: \'smooth\'\n    });\n  }, [messages, typingUsers]);\n\n  var onShowMessageDay = function onShowMessageDay(updatedAt) {\n    var sendDay = new Date(updatedAt).setHours(0, 0, 0, 0);\n\n    if (sendDay > messageDay) {\n      messageDay = sendDay;\n      return react_default.a.createElement("div", {\n        className: "date"\n      }, react_default.a.createElement("hr", null), react_default.a.createElement("span", null, messageDay === new Date().setHours(0, 0, 0, 0) ? \'Hôm nay\' : new Date(updatedAt).toLocaleDateString(\'vi-VN\', {\n        weekday: \'narrow\',\n        year: \'numeric\',\n        month: \'2-digit\',\n        day: \'2-digit\'\n      })), react_default.a.createElement("hr", null));\n    }\n  };\n\n  var onShowMessage = function onShowMessage() {\n    if (messages.length === 0 && !isLoading && !roomNotFound) return react_default.a.createElement(RoomStatus, {\n      title: "B\\u1EAFt \\u0111\\u1EA7u cu\\u1ED9c tr\\xF2 chuy\\u1EC7n m\\u1EDBi..."\n    });else if (isLoading) return react_default.a.createElement(RoomStatus, {\n      title: "\\u0110ang t\\u1EA3i, \\u0111\\u1EE3i ch\\xFAt !"\n    });else if (!isLoading && roomNotFound) return react_default.a.createElement(RoomStatus, {\n      title: "404 Not Found :("\n    });\n    return messages.map(function (_ref2) {\n      var id = _ref2.id,\n          sender = _ref2.sender,\n          updatedAt = _ref2.updatedAt,\n          parts = _ref2.parts;\n      var userType = sender.id === currentUser.id && \'me\';\n      return react_default.a.createElement("div", {\n        key: id\n      }, onShowMessageDay(updatedAt), react_default.a.createElement(Wrapper, {\n        userType: userType,\n        userName: sender.name,\n        updatedAt: updatedAt\n      }, react_default.a.createElement(Message, {\n        parts: parts,\n        userType: userType\n      })));\n    });\n  };\n\n  var onShowTypingUsers = function onShowTypingUsers() {\n    return typingUsers.map(function (user) {\n      var id = user.id,\n          name = user.name;\n      if (currentUser.id === id) return;\n      return react_default.a.createElement(Wrapper, {\n        key: id,\n        userType: "text typing",\n        userName: name\n      }, react_default.a.createElement("div", {\n        className: "wave"\n      }, react_default.a.createElement("span", {\n        className: "dot"\n      }), "\\xA0", react_default.a.createElement("span", {\n        className: "dot"\n      }), "\\xA0", react_default.a.createElement("span", {\n        className: "dot"\n      })));\n    });\n  };\n\n  return react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, onShowMessage(), typingUsers.length > 0 && onShowTypingUsers(), showCarousel.where === \'MessageList\' && react_default.a.createElement(ImageCarousel, null), react_default.a.createElement("div", {\n    ref: messageNode\n  }));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/emoji-mart/dist-es/index.js + 29 modules\nvar dist_es = __webpack_require__(143);\n\n// EXTERNAL MODULE: ./node_modules/emoji-mart/css/emoji-mart.css\nvar emoji_mart = __webpack_require__(762);\n\n// EXTERNAL MODULE: ./node_modules/@webscopeio/react-textarea-autocomplete/dist/react-textarea-autocomplete.es.js\nvar react_textarea_autocomplete_es = __webpack_require__(347);\n\n// CONCATENATED MODULE: ./src/components/MessageInput/TextArea.jsx\nfunction TextArea_toConsumableArray(arr) { return TextArea_arrayWithoutHoles(arr) || TextArea_iterableToArray(arr) || TextArea_nonIterableSpread(); }\n\nfunction TextArea_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction TextArea_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction TextArea_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction TextArea(props) {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomActive;\n  }),\n      id = _useSelector.id,\n      users = _useSelector.users;\n\n  var onChange = function onChange(event) {\n    return props.onChange(event.target.value);\n  };\n\n  var filterUserNames = function filterUserNames(token) {\n    return users.filter(function (user) {\n      return user.name.includes(token);\n    });\n  };\n\n  return react_default.a.createElement(react_textarea_autocomplete_es["a" /* default */], {\n    className: "form-control",\n    value: props.message,\n    loadingComponent: function loadingComponent() {\n      return react_default.a.createElement("p", null, "Loading...");\n    },\n    onChange: onChange,\n    placeholder: "Nh\\u1EADp tin nh\\u1EAFn. G\\xF5 @ \\u0111\\u1EC3 \\u0111\\u1EC1 c\\u1EADp ai \\u0111\\xF3",\n    trigger: {\n      \'@\': {\n        dataProvider: function dataProvider(token) {\n          return TextArea_toConsumableArray(filterUserNames(token));\n        },\n        component: function component(_ref) {\n          var name = _ref.entity.name;\n          return react_default.a.createElement("div", null, name);\n        },\n        output: function output(item) {\n          return "@".concat(item.name);\n        }\n      },\n      \':\': {\n        dataProvider: function dataProvider(token) {\n          return dist_es["b" /* emojiIndex */].search(token).map(function (o) {\n            return {\n              colons: o.colons,\n              "native": o["native"]\n            };\n          });\n        },\n        component: function component(_ref2) {\n          var _ref2$entity = _ref2.entity,\n              _native = _ref2$entity["native"],\n              colons = _ref2$entity.colons;\n          return react_default.a.createElement("div", null, "".concat(colons, " ").concat(_native));\n        },\n        output: function output(item) {\n          return "".concat(item["native"]);\n        }\n      }\n    },\n    disabled: !id\n  });\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageInput/index.jsx\nfunction MessageInput_slicedToArray(arr, i) { return MessageInput_arrayWithHoles(arr) || MessageInput_iterableToArrayLimit(arr, i) || MessageInput_nonIterableRest(); }\n\nfunction MessageInput_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction MessageInput_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction MessageInput_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction MessageInput() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive,\n      showPicker = _useSelector.showPicker;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])(\'\'),\n      _useState2 = MessageInput_slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var onTogglePicker = function onTogglePicker() {\n    return dispatch(controls_togglePicker());\n  };\n\n  var onAddEmoji = function onAddEmoji(emoji) {\n    return setMessage(dispatch(controls_addEmoji(emoji, message)));\n  };\n\n  var handleSlashCommand = function handleSlashCommand(message) {\n    var cmd = message.split(\' \')[0];\n    var query = message.slice(cmd.length).trim();\n\n    if (cmd !== \'/news\') {\n      alert("L\\u1EC7nh ".concat(cmd, " Kh\\xF4ng h\\u1EE3p l\\u1EC7"));\n      return;\n    }\n\n    dispatch(messages_sendNews(query));\n  };\n\n  var onChange = function onChange(text) {\n    setMessage(text);\n    dispatch(messages_typingMessage());\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    var parts = [];\n\n    if (message.trim()) {\n      if (message.startsWith(\'/\')) {\n        handleSlashCommand(message);\n        setMessage(\'\');\n        return;\n      }\n\n      parts.push({\n        type: \'text/plain\',\n        content: message\n      });\n      dispatch(messages_sendMessage(parts));\n      setMessage(\'\');\n    }\n  };\n\n  Object(react["useEffect"])(function () {\n    setMessage(\'\');\n  }, [roomActive]);\n  return react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "bottom"\n  }, react_default.a.createElement("form", {\n    className: "position-relative w-100",\n    onSubmit: onSubmit\n  }, react_default.a.createElement(TextArea, {\n    message: message,\n    onChange: onChange\n  }), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn emoticons",\n    onClick: onTogglePicker,\n    disabled: !roomActive.id\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "insert_emoticon")), react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn send"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "send")), showPicker && react_default.a.createElement(dist_es["a" /* Picker */], {\n    set: "emojione",\n    onSelect: onAddEmoji\n  })), react_default.a.createElement(UploadImage, null))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Chat/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\n\n\nfunction Chat(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      authentication = _useSelector.authentication,\n      notification = _useSelector.notification,\n      isLoading = _useSelector.isLoading,\n      videoCall = _useSelector.videoCall,\n      rooms = _useSelector.rooms;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var chatNode = Object(react["useRef"])(null);\n\n  var enablePermission = function enablePermission() {\n    return dispatch(notification_grantPermission());\n  };\n\n  var onShowRoomStatus = function onShowRoomStatus() {\n    if (isLoading) return react_default.a.createElement(RoomStatus, {\n      title: "\\u0110ang k\\u1EBFt n\\u1ED1i m\\xE1y ch\\u1EE7"\n    });else if (rooms.length > 0) return react_default.a.createElement(RoomStatus, {\n      title: "Ch\\u1ECDn ph\\xF2ng \\u0111\\u1EC3 b\\u1EAFt \\u0111\\u1EA7u chat n\\xE0o !"\n    });\n    return react_default.a.createElement(RoomStatus, {\n      title: "M\\u1EDDi b\\u1EA1n t\\u1EA1o ph\\xF2ng chat m\\u1EDBi !"\n    });\n  };\n\n  var onScroll = function onScroll(event) {\n    if (event.target.scrollTop === 0) dispatch(messages_loadMoreMessages());\n  };\n\n  Object(react["useEffect"])(function () {\n    dispatch(authentication_connect(authentication.userId));\n  }, []);\n  Object(react["useEffect"])(function () {\n    chatNode.current.scrollIntoView();\n  }, [isLoading]);\n  return react_default.a.createElement("div", {\n    className: "app"\n  }, notification && react_default.a.createElement("div", {\n    className: "notification-toast"\n  }, "QuanChat c\\u1EA7n b\\u1EA1n cho ph\\xE9p \\u0111\\u1EC3\\xA0", react_default.a.createElement("span", {\n    onClick: enablePermission\n  }, "hi\\u1EC3n th\\u1ECB th\\xF4ng b\\xE1o")), react_default.a.createElement(Navigation, null), react_default.a.createElement(LeftSideBar, {\n    match: match\n  }), react_default.a.createElement("div", {\n    className: "main"\n  }, react_default.a.createElement("div", {\n    className: "chat",\n    ref: chatNode\n  }, react_default.a.createElement(TopBar, null), react_default.a.createElement("div", {\n    className: "content",\n    onScroll: onScroll\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement(react_router["d" /* Switch */], null, react_default.a.createElement(react_router["b" /* Route */], {\n    exact: true,\n    path: match.path\n  }, onShowRoomStatus()), rooms.map(function (room) {\n    if (!room) return;\n    return react_default.a.createElement(react_router["b" /* Route */], {\n      key: room.id,\n      path: "".concat(match.path, "/:roomId"),\n      component: MessageList\n    });\n  }), react_default.a.createElement(react_router["b" /* Route */], null, onShowRoomStatus())))), react_default.a.createElement(MessageInput, null)), videoCall.show && react_default.a.createElement(VideoCall, null)), react_default.a.createElement(RightSideBar, {\n    match: match\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/App/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\nfunction App() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.authentication;\n  }),\n      currentScreen = _useSelector.currentScreen;\n\n  return react_default.a.createElement(react_router_dom["a" /* HashRouter */], null, react_default.a.createElement(react_router["d" /* Switch */], null, react_default.a.createElement(react_router["a" /* Redirect */], {\n    exact: true,\n    from: "/",\n    to: "/room"\n  }), react_default.a.createElement(react_router["b" /* Route */], {\n    path: "/room",\n    component: currentScreen === \'SignIn\' ? SignIn : Chat\n  }), react_default.a.createElement(react_router["b" /* Route */], {\n    path: "/sign-up",\n    component: SignUp\n  }), react_default.a.createElement(react_router["b" /* Route */], {\n    component: NotFound\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/bootstrap/dist/css/bootstrap.min.css\nvar bootstrap_min = __webpack_require__(763);\n\n// EXTERNAL MODULE: ./node_modules/bootstrap/dist/js/bootstrap.bundle.min.js\nvar bootstrap_bundle_min = __webpack_require__(764);\n\n// EXTERNAL MODULE: ./node_modules/jquery/dist/jquery.js\nvar jquery = __webpack_require__(329);\n\n// EXTERNAL MODULE: ./node_modules/material-design-icons/iconfont/material-icons.css\nvar material_icons = __webpack_require__(765);\n\n// EXTERNAL MODULE: ./src/scss/style.scss\nvar style = __webpack_require__(766);\n\n// CONCATENATED MODULE: ./src/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\n\nreact_dom_default.a.render(react_default.a.createElement(es["a" /* Provider */], {\n  store: reducers\n}, react_default.a.createElement(App, null)), document.getElementById(\'root\'));\n/* eslint-enable *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL2luZGV4Lm1qcz81MDFjIiwid2VicGFjazovLy8uL3NyYy9jb25zdGFudHMvaW5kZXguanN4Pzg2ZjQiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL2NoYXRraXQvaW5kZXguanN4P2YzMTgiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL2F1dGhlbnRpY2F0aW9uL2luZGV4LmpzeD8wMmUwIiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy9ub3RpZmljYXRpb24vaW5kZXguanN4PzlkZTciLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL3ZpZGVvQ2FsbC9pbmRleC5qc3g/ZjBhNyIsIndlYnBhY2s6Ly8vLi9zcmMvcmVkdWNlcnMvbWVzc2FnZXMvaXNMb2FkaW5nLmpzeD8wYWFkIiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy9tZXNzYWdlcy9qdXN0TG9hZE1vcmUuanN4PzRkZTMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL21lc3NhZ2VzL21lc3NhZ2VzLmpzeD8xMGNjIiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy9tZXNzYWdlcy9pbWFnZXMuanN4PzkyN2EiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL21lc3NhZ2VzL2luZGV4LmpzeD84Nzc0Iiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy91c2Vycy9jdXJyZW50VXNlci5qc3g/NTYwYyIsIndlYnBhY2s6Ly8vLi9zcmMvcmVkdWNlcnMvdXNlcnMvdHlwaW5nVXNlcnMuanN4PzUwN2MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL3VzZXJzL3Jvb21Vc2Vycy5qc3g/ZGMxMiIsIndlYnBhY2s6Ly8vLi9zcmMvcmVkdWNlcnMvdXNlcnMvaW5kZXguanN4PzkzNjYiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL3Jvb21zL3Jvb21zLmpzeD81YTZlIiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy9yb29tcy9yb29tQWN0aXZlLmpzeD8zMDdkIiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy9yb29tcy9pbmRleC5qc3g/ZjgwNSIsIndlYnBhY2s6Ly8vLi9zcmMvcmVkdWNlcnMvY29udHJvbHMvdXNlclNvcnQuanN4P2I3MTkiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL2NvbnRyb2xzL3Jvb21GaWx0ZXIuanN4PzAzMzkiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL2NvbnRyb2xzL3Nob3dQaWNrZXIuanN4P2UxNDAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL2NvbnRyb2xzL3Nob3dDYXJvdXNlbC5qc3g/MTJiZCIsIndlYnBhY2s6Ly8vLi9zcmMvcmVkdWNlcnMvY29udHJvbHMvc2hvd1VzZXJzQmFyLmpzeD80YjViIiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy9jb250cm9scy9pbmRleC5qc3g/YTIxOSIsIndlYnBhY2s6Ly8vLi9zcmMvcmVkdWNlcnMvaW5kZXguanN4PzljYTEiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL2luZGV4LmpzeD85ZmVhIiwid2VicGFjazovLy8uL3NyYy9hY3Rpb25zL25vdGlmaWNhdGlvbi5qc3g/ODdkNiIsIndlYnBhY2s6Ly8vLi9zcmMvYWN0aW9ucy9tZXNzYWdlcy5qc3g/NGQzYSIsIndlYnBhY2s6Ly8vLi9zcmMvYWN0aW9ucy9yb29tcy5qc3g/OWZjMiIsIndlYnBhY2s6Ly8vLi9zcmMvYWN0aW9ucy9jb250cm9scy5qc3g/MWI2ZiIsIndlYnBhY2s6Ly8vLi9zcmMvYWN0aW9ucy9hdXRoZW50aWNhdGlvbi5qc3g/NGQxNSIsIndlYnBhY2s6Ly8vLi9zcmMvYWN0aW9ucy9pbmRleC5qc3g/OWY5MyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9BdXRoL0F1dGhJbnB1dC5qc3g/ZTNhMCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9BdXRoL1RoaXJkUGFydHkuanN4PzZkMzUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQXV0aC9Bc2lkZS5qc3g/NTc5ZSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9BdXRoL1NpZ25Jbi5qc3g/OWU0YSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9BdXRoL1NpZ25VcC5qc3g/NDFjZiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9BdXRoL2luZGV4LmpzeD9hNzA1Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL05vdEZvdW5kL2luZGV4LmpzeD82ZTI5Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL05hdmlnYXRpb24vaW5kZXguanN4Pzg1NTEiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQXZhdGFyL2luZGV4LmpzeD82ODE4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1RvcEJhci9pbmRleC5qc3g/YjIzZSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9WaWRlb0NhbGwvTG9jYWxPcHRpb25zLmpzeD8zNTQ4Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1ZpZGVvQ2FsbC9PcHRpb25zLmpzeD9iZjRjIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1ZpZGVvQ2FsbC9DYWxsU3RhdHVzLmpzeD9mOGE2Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1ZpZGVvQ2FsbC9pbmRleC5qc3g/N2Y3MiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Db250cm9scy9GaWx0ZXJSb29tcy5qc3g/MjE2YyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Db250cm9scy9Tb3J0TWVtYmVycy5qc3g/YWJiNiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Db250cm9scy9pbmRleC5qc3g/MzYzZCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Qb3BVcC9EaWFsb2cuanN4PzcyZTMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvUG9wVXAvQ3JlYXRlUm9vbS5qc3g/MTgzMiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Qb3BVcC9VcGxvYWRJbWFnZS5qc3g/MjYyMyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Qb3BVcC9pbmRleC5qc3g/OTIyNCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9MZWZ0U2lkZUJhci9DaGF0TGlzdC5qc3g/YTMzYSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9MZWZ0U2lkZUJhci9Db250YWN0cy5qc3g/ZTU1OSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9MZWZ0U2lkZUJhci9Sb29tcy5qc3g/ZWUyMiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9MZWZ0U2lkZUJhci9Sb29tU3RhdHVzLmpzeD9kOGNkIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0xlZnRTaWRlQmFyL2luZGV4LmpzeD9hZjgxIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1JpZ2h0U2lkZUJhci9NZW1iZXJzLmpzeD81NDI0Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0ltYWdlcy9JbWFnZUNhcm91c2VsLmpzeD9kN2U5Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0ltYWdlcy9JbWFnZUxpc3QuanN4PzcxM2MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSW1hZ2VzL2luZGV4LmpzeD9hYzk5Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1JpZ2h0U2lkZUJhci9pbmRleC5qc3g/Y2I1MyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9NZXNzYWdlTGlzdC9XcmFwcGVyLmpzeD81MWIzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL01lc3NhZ2VMaXN0L0xpbmtQcmV2aWV3LmpzeD8zN2UyIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL01lc3NhZ2VMaXN0L0NvbnRlbnQuanN4PzIyZjEiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvTWVzc2FnZUxpc3QvTWVzc2FnZS5qc3g/NzFiOSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9NZXNzYWdlTGlzdC9pbmRleC5qc3g/ZTI3YiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9NZXNzYWdlSW5wdXQvVGV4dEFyZWEuanN4Pzk5MTIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvTWVzc2FnZUlucHV0L2luZGV4LmpzeD9hMDBlIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0NoYXQvaW5kZXguanN4PzljOWMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQXBwL2luZGV4LmpzeD84OGU3Iiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qc3g/ZWQxMiJdLCJuYW1lcyI6WyJTSUdOX0lOIiwiU0lHTl9PVVQiLCJOT1RfRk9VTkQiLCJDT05ORUNUIiwiR0VUX1JPT01TIiwiRU5URVJfUk9PTSIsIlVQREFURV9ST09NIiwiU0hPV19OT1RJRklDQVRJT05fVE9BU1QiLCJBRERfRU1PSkkiLCJTT1JUX01FTUJFUlMiLCJGSUxURVJfUk9PTVMiLCJUT0dHTEVfQ0FMTCIsIlRPR0dMRV9QSUNLRVIiLCJUT0dHTEVfQ0FST1VTRUwiLCJUT0dHTEVfVVNFUlNfQkFSIiwiT05fTUVTU0FHRSIsIkNMRUFSX01FU1NBR0UiLCJTVEFSVF9MT0FEX01PUkUiLCJFTkRfTE9BRF9NT1JFIiwiVVNFUl9TVEFSVEVEX1RZUElORyIsIlVTRVJfU1RPUEVEX1RZUElORyIsIlBSRVNFTkNFX0NIQU5HRUQiLCJpbml0aWFsU3RhdGUiLCJDaGF0a2l0IiwiaW5zdGFuY2VMb2NhdG9yIiwia2V5IiwiY2hhdGtpdCIsInN0YXRlIiwiYWN0aW9uIiwidHlwZSIsInVzZXJJZCIsImN1cnJlbnRTY3JlZW4iLCJhdXRoZW50aWNhdGlvbiIsIm5vdGlmaWNhdGlvbiIsImlzU2hvdyIsInNob3ciLCJjYW0iLCJ2aWRlb0NhbGwiLCJpc0xvYWRpbmciLCJqdXN0TG9hZE1vcmUiLCJtZXNzYWdlcyIsIm1lc3NhZ2UiLCJpbWFnZXMiLCJwYXJ0cyIsImZvckVhY2giLCJwYXJ0VHlwZSIsInBheWxvYWQiLCJwdXNoIiwic3JjIiwiX2Rvd25sb2FkVVJMIiwiY3VycmVudFVzZXIiLCJ0eXBpbmdVc2VycyIsInVzZXIiLCJmaWx0ZXIiLCJpZCIsInJvb21Vc2VycyIsInJvb21BY3RpdmUiLCJ1c2VycyIsInNvcnQiLCJwcmVzZW5jZSIsInJvb21zIiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJyb29tIiwiYnkiLCJ2YWx1ZSIsInVzZXJTb3J0IiwibmFtZSIsInN0YXR1cyIsImlzUHJpdmF0ZSIsInJvb21GaWx0ZXIiLCJzaG93UGlja2VyIiwiaW1hZ2VJbmRleCIsIndoZXJlIiwic2hvd0Nhcm91c2VsIiwic2hvd1VzZXJzQmFyIiwicm9vdFJlZHVjZXIiLCJjb21iaW5lUmVkdWNlcnMiLCJzaW1wbGV3ZWJydGMiLCJyZWR1Y2VyIiwiY29tcG9zZUVuaGFuY2VyIiwid2luZG93IiwiX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fQ09NUE9TRV9fIiwiY29tcG9zZSIsInN0b3JlIiwiY3JlYXRlU3RvcmUiLCJhcHBseU1pZGRsZXdhcmUiLCJ0aHVuayIsImFsZXJ0RXJyb3IiLCJ0aXRsZSIsImVyciIsImVycm9yIiwiZXJyb3JfZGVzY3JpcHRpb24iLCJpbmZvIiwiY29uc29sZSIsImxvZyIsImFsZXJ0Iiwib25HZXRQcml2YXRlVXNlciIsImN1cnJlbnRVc2VySWQiLCJpc0ZpbHRlciIsIm1lbWJlcnMiLCJjdXN0b21EYXRhIiwiT2JqZWN0IiwidmFsdWVzIiwidXNlclN0b3JlIiwibWFpblVzZXIiLCJsZW5ndGgiLCJmaW5kIiwibWVtYmVyIiwicm9vbU5hbWUiLCJ0b0xvd2VyQ2FzZSIsInJvb21TdGF0dXMiLCJncmFudFBlcm1pc3Npb24iLCJkaXNwYXRjaCIsImdldFN0YXRlIiwiTm90aWZpY2F0aW9uIiwicGVybWlzc2lvbiIsInJlcXVlc3RQZXJtaXNzaW9uIiwidGhlbiIsInJlc3VsdCIsImJvZHkiLCJzaG93Tm90aWZpY2F0aW9uVG9hc3QiLCJzaG93Tm90aWZpY2F0aW9uIiwibGFzdE1lc3NhZ2UiLCJ0eXBpbmdNZXNzYWdlIiwiaXNUeXBpbmdJbiIsInJvb21JZCIsInNlbmRNZXNzYWdlIiwic2VuZE11bHRpcGFydE1lc3NhZ2UiLCJzZW5kTmV3cyIsInF1ZXJ5IiwibmV3c0FwaSIsIk5FV1NfQVBJX0tFWSIsImZldGNoIiwicmVzIiwianNvbiIsImRhdGEiLCJhcnRpY2xlcyIsImFydGljbGUiLCJzb3VyY2UiLCJ1cmwiLCJjb250ZW50IiwiZmV0Y2hMYXN0TWVzc2FnZSIsInNlbmRlciIsInVwZGF0ZVJvb20iLCJsb2FkTW9yZU1lc3NhZ2VzIiwib2xkZXN0TWVzc2FnZUlkIiwiTWF0aCIsIm1pbiIsIm1hcCIsImZldGNoTXVsdGlwYXJ0TWVzc2FnZXMiLCJpbml0aWFsSWQiLCJkaXJlY3Rpb24iLCJsaW1pdCIsIm9uU2V0Um9vbUFjdGl2ZSIsImdldFJvb21zIiwiZ2V0Sm9pbmFibGVSb29tcyIsInVuam9pbmVkUm9vbXMiLCJ0eXBlcyIsImVudGVyUm9vbSIsInN1YnNjcmliZVRvUm9vbU11bHRpcGFydCIsIm1lc3NhZ2VMaW1pdCIsImhvb2tzIiwib25NZXNzYWdlIiwic2V0VGltZW91dCIsImxvY2F0aW9uIiwiaGFzaCIsInN1YnN0ciIsInNldFJlYWRDdXJzb3IiLCJwb3NpdGlvbiIsIm9uVXNlclN0YXJ0ZWRUeXBpbmciLCJvblVzZXJTdG9wcGVkVHlwaW5nIiwib25QcmVzZW5jZUNoYW5nZWQiLCJjYWxsIiwiY3JlYXRlUm9vbSIsInRyaW0iLCJoaXN0b3J5IiwicHVzaFN0YXRlIiwiY3JlYXRlUHJpdmF0ZVJvb20iLCJIbWFjU0hBMSIsInRvU3RyaW5nIiwib3RoZXJSb29tSWQiLCJpbmNsdWRlUHJpdmF0ZSIsInByaXZhdGVSb29tQ3JlYXRlZCIsInNvbWUiLCJhZGRVc2VySWRzIiwiYWRkRW1vamkiLCJlbW9qaSIsInNvcnRNZW1iZXJzIiwiZmlsdGVyUm9vbXMiLCJ0b2dnbGVDYWxsIiwidG9nZ2xlUGlja2VyIiwidG9nZ2xlQ2Fyb3VzZWwiLCJ0b2dnbGVVc2Vyc0JhciIsInNpZ25PdXQiLCJkaXNjb25uZWN0Iiwic2lnblVwIiwiZW1haWwiLCJwYXNzd29yZCIsImF2YXRhclVSTCIsImNyZWF0ZVVzZXIiLCJzaWduSW4iLCJnZXRVc2VyIiwiY29ubmVjdCIsImNoYXRNYW5hZ2VyIiwiQ2hhdE1hbmFnZXIiLCJ0b2tlblByb3ZpZGVyIiwiVG9rZW5Qcm92aWRlciIsInRva2VuVXJsIiwib25Sb29tVXBkYXRlZCIsIm9uQWRkZWRUb1Jvb20iLCJnZXRVc2VycyIsIkF1dGhJbnB1dCIsInByb3BzIiwicGxhY2Vob2xkZXIiLCJpY29uIiwib25DaGFuZ2UiLCJldmVudCIsIlRoaXJkUGFydHkiLCJBc2lkZSIsInRvIiwiU2lnbkluIiwidXNlRGlzcGF0Y2giLCJ1c2VTdGF0ZSIsInVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJ0YXJnZXQiLCJvblN1Ym1pdCIsInByZXZlbnREZWZhdWx0IiwiU2lnblVwIiwiTm90Rm91bmQiLCJOYXZpZ2F0aW9uIiwidXNlU2VsZWN0b3IiLCJvblNpZ25PdXQiLCJBdmF0YXIiLCJ0b29sdGlwIiwic2l6ZSIsImF2YXRhclNpemUiLCJhdmF0YXJBUEkiLCJvcHRpb25zIiwiZXllcyIsImV5ZWJyb3ciLCJtb3V0aCIsImtleXMiLCJyZWR1Y2UiLCJUb3BCYXIiLCJvblNob3dTdGF0dXMiLCJvblBob25lQ2hhdCIsIm9uVmlkZW9DaGF0Iiwib25TaG93TWVtYmVycyIsIkxvY2FsT3B0aW9ucyIsImNoaWxkcmVuIiwiaXNNdXRlZCIsImlzUGF1c2VkIiwibXV0ZSIsInVubXV0ZSIsInJlc3VtZVZpZGVvIiwicGF1c2VWaWRlbyIsIk9wdGlvbnMiLCJsb2NhbFZpZGVvcyIsImxvY2FsU2NyZWVuIiwicmVtb3ZlIiwiZ2V0VXNlck1lZGlhIiwic3RvcFNoYXJpbmciLCJnZXREaXNwbGF5TWVkaWEiLCJDYWxsU3RhdHVzIiwiYXZhdGFyVHlwZSIsIm9uQ2xvc2VDYWxsIiwiVmlkZW9DYWxsIiwib25VbmxvYWQiLCJTV1JUQ19DT05GSUdfVVJMIiwibG9jYWxNZWRpYSIsInJlbW90ZU1lZGlhIiwicmVtb3RlVmlkZW9zIiwibSIsImtpbmQiLCJzaGFyZWQiLCJsb2NhbFNjcmVlbnMiLCJzY3JlZW5DYXB0dXJlIiwiaXRlbSIsIkZpbHRlclJvb21zIiwic2VhcmNoVGV4dCIsInNldFNlYXJjaFRleHQiLCJ1c2VFZmZlY3QiLCJTb3J0TWVtYmVycyIsInNldFRpdGxlIiwiRGlhbG9nIiwibW9kYWxTaG93Iiwic2V0TW9kYWxTaG93IiwiZGlzYWJsZWQiLCJvbkNsb3NlTW9kYWwiLCJvblNob3dNb2RhbCIsIkNyZWF0ZVJvb20iLCJmaXJzdE1lc3NhZ2UiLCJyb29tSW5mbyIsInNldFJvb21JbmZvIiwiVXBsb2FkSW1hZ2UiLCJwaWN0dXJlcyIsInNldFBpY3R1cmVzIiwic2V0TWVzc2FnZSIsIm9uRHJvcCIsInBpY3R1cmVGaWxlcyIsInBpYyIsImZpbGUiLCJDaGF0TGlzdCIsIm1hdGNoIiwiY2hhdE5hbWUiLCJpc09ubGluZSIsInVucmVhZENvdW50IiwiY3JlYXRlZEF0IiwibGFzdE1lc3NhZ2VBdCIsImlzQWN0aXZlIiwiaXNSZWFkIiwibGFzdE1lc3NhZ2VUaW1lIiwiRGF0ZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsIndlZWtkYXkiLCJ5ZWFyIiwibW9udGgiLCJkYXkiLCJzaG93VW5yZWFkQ291bnQiLCJjb2xvciIsInBhdGgiLCJDb250YWN0cyIsImluZGV4T2YiLCJSb29tcyIsImEiLCJiIiwibGFzdE1lc3NhZ2VBIiwibGFzdE1lc3NhZ2VCIiwidXNlcklkcyIsIlJvb21TdGF0dXMiLCJMZWZ0U2lkZUJhciIsIk1lbWJlcnMiLCJhZG1pbklkIiwicHJpdmF0ZVJvb21zIiwibWVtYmVySWRzIiwib25TaG93TWVtYmVyRGF0YSIsImNyZWF0ZWREYXRlIiwibmFtZUEiLCJuYW1lQiIsInN0YXRlQSIsInN0YXRlQiIsImluY2x1ZGVzIiwiSW1hZ2VDYXJvdXNlbCIsInRvZ2dsZU1vZGFsIiwiSW1hZ2VMaXN0Iiwicm90YXRlIiwic2V0Um90YXRlIiwib25Sb3RhdGVJY29uIiwib25TaG93SW1hZ2VzIiwiQnV0dG9uIiwiUmlnaHRTaWRlQmFyIiwiY3JlYXRlZEJ5VXNlcklkIiwiV3JhcHBlciIsInVzZXJUeXBlIiwidXNlck5hbWUiLCJ1cGRhdGVkQXQiLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJob3VyIiwibWludXRlIiwiTGlua1ByZXZpZXciLCJ1cmxNYXRjaGVzIiwidmlkZW9TaWduYWwiLCJ5b3V0dWJlIiwiZmFjZWJvb2siLCJDb250ZW50IiwiY3VycmVudFVzZXJOYW1lIiwidGV4dCIsImluc2VydFRleHRBdEluZGljZXMiLCJvYmoiLCJyZXBsYWNlIiwiY2hhcmFjdGVyIiwibWVzc2FnZVRleHQiLCJtZW50aW9ucyIsInJvb21Vc2VyTmFtZXMiLCJtZW50aW9uZWRVc2VycyIsInVzZXJuYW1lIiwibGluayIsInN0YXJ0SW5kZXgiLCJlbmRJbmRleCIsImlzTWUiLCJzdWJzdHJpbmciLCJfX2h0bWwiLCJNZXNzYWdlIiwicGFydCIsIm5vdyIsInBhcnNlIiwiX2V4cGlyYXRpb24iLCJfZmV0Y2hOZXdEb3dubG9hZFVSTCIsIk1lc3NhZ2VMaXN0IiwibWVzc2FnZU5vZGUiLCJ1c2VSZWYiLCJtZXNzYWdlRGF5IiwicGFyYW1zIiwicm9vbU5vdEZvdW5kIiwiY3VycmVudCIsInNjcm9sbEludG9WaWV3IiwiZG9jdW1lbnQiLCJoYXNGb2N1cyIsImJlaGF2aW9yIiwib25TaG93TWVzc2FnZURheSIsInNlbmREYXkiLCJzZXRIb3VycyIsIm9uU2hvd01lc3NhZ2UiLCJvblNob3dUeXBpbmdVc2VycyIsIlRleHRBcmVhIiwiZmlsdGVyVXNlck5hbWVzIiwidG9rZW4iLCJkYXRhUHJvdmlkZXIiLCJjb21wb25lbnQiLCJlbnRpdHkiLCJvdXRwdXQiLCJlbW9qaUluZGV4Iiwic2VhcmNoIiwibyIsImNvbG9ucyIsIm5hdGl2ZSIsIk1lc3NhZ2VJbnB1dCIsIm9uVG9nZ2xlUGlja2VyIiwib25BZGRFbW9qaSIsImhhbmRsZVNsYXNoQ29tbWFuZCIsImNtZCIsInNwbGl0Iiwic2xpY2UiLCJzdGFydHNXaXRoIiwiQ2hhdCIsImNoYXROb2RlIiwiZW5hYmxlUGVybWlzc2lvbiIsIm9uU2hvd1Jvb21TdGF0dXMiLCJvblNjcm9sbCIsInNjcm9sbFRvcCIsIkFwcCIsIlJlYWN0RE9NIiwicmVuZGVyIiwiZ2V0RWxlbWVudEJ5SWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxzRUFBc0UsY0FBYzs7QUFFVjs7QUFFMUU7OztBQ2JBOztBQUNBO0FBRU8sSUFBTUEsT0FBTyxHQUFHLFNBQWhCO0FBQ0EsSUFBTUMsUUFBUSxHQUFHLFVBQWpCO0FBQ0EsSUFBTUMsU0FBUyxHQUFHLFdBQWxCO0FBRUEsSUFBTUMsT0FBTyxHQUFHLFNBQWhCO0FBQ0EsSUFBTUMsU0FBUyxHQUFHLFdBQWxCO0FBQ0EsSUFBTUMsVUFBVSxHQUFHLFlBQW5CO0FBQ0EsSUFBTUMsV0FBVyxHQUFHLGFBQXBCO0FBQ0EsSUFBTUMsdUJBQXVCLEdBQUcseUJBQWhDO0FBRUEsSUFBTUMsU0FBUyxHQUFHLFdBQWxCO0FBQ0EsSUFBTUMsWUFBWSxHQUFHLGNBQXJCO0FBQ0EsSUFBTUMsWUFBWSxHQUFHLGNBQXJCO0FBRUEsSUFBTUMsV0FBVyxHQUFHLGFBQXBCO0FBQ0EsSUFBTUMsYUFBYSxHQUFHLGVBQXRCO0FBQ0EsSUFBTUMsZUFBZSxHQUFHLGlCQUF4QjtBQUNBLElBQU1DLGdCQUFnQixHQUFHLGtCQUF6QjtBQUVBLElBQU1DLFVBQVUsR0FBRyxZQUFuQjtBQUNBLElBQU1DLGFBQWEsR0FBRyxlQUF0QjtBQUNBLElBQU1DLGVBQWUsR0FBRyxpQkFBeEI7QUFDQSxJQUFNQyxhQUFhLEdBQUcsZUFBdEI7QUFFQSxJQUFNQyxtQkFBbUIsR0FBRyxxQkFBNUI7QUFDQSxJQUFNQyxrQkFB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Q0MsOEJBQUMsc0JBQUQ7QUFBVSxPQUFLLEVBQUU5VixRQUFLQTtBQUF0QixHQUNDLDhCQUFDLEdBQUQsT0FERCxDQURELEVBSUMwVCxRQUFRLENBQUNxQyxjQUFULENBQXdCLE1BQXhCLENBSkQ7QUFPQSIsImZpbGUiOiI3NzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cblxuY29uc3QgdG9rZW5VcmwgPSAnaHR0cHM6Ly91czEucHVzaGVycGxhdGZvcm0uaW8vc2VydmljZXMvY2hhdGtpdF90b2tlbl9wcm92aWRlci92MS9jYWY0YTU4My04MTk0LTQ1MTAtYWRiZS1jOTg3OWYwNjBmZmMvdG9rZW4nO1xuY29uc3QgaW5zdGFuY2VMb2NhdG9yID0gJ3YxOnVzMTpjYWY0YTU4My04MTk0LTQ1MTAtYWRiZS1jOTg3OWYwNjBmZmMnO1xuY29uc3Qga2V5ID0gJzdlYTVlOTg2LTcyZmUtNGNlYy1iYTBjLTRkMDcyNTJmNWY1ZjpMVUI5Zlpaamc3dmRwYUZabEpFUEJiWmZLQWU3c1BMci9maHRBMStjM0NvPSc7XG5cbmNvbnN0IE5FV1NfQVBJX0tFWSA9ICdlMzBjNWJlMDJkMGI0Njk4YjZhNzcyMmQ5M2M3MDIyNSc7XG5jb25zdCBTV1JUQ19BUElfS0VZID0gJzk3MGI0ZTVhMjNlN2M0NDAwMzI3YTQ1ZCc7XG5jb25zdCBTV1JUQ19DT05GSUdfVVJMID0gYGh0dHBzOi8vYXBpLnNpbXBsZXdlYnJ0Yy5jb20vY29uZmlnL2d1ZXN0LyR7U1dSVENfQVBJX0tFWX1gXG5cbmV4cG9ydCB7IHRva2VuVXJsLCBpbnN0YW5jZUxvY2F0b3IsIGtleSwgTkVXU19BUElfS0VZLCBTV1JUQ19DT05GSUdfVVJMIH07XG5cbi8qIGVzbGludC1lbmFibGUgKi9cbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5leHBvcnQgY29uc3QgU0lHTl9JTiA9ICdTSUdOX0lOJztcclxuZXhwb3J0IGNvbnN0IFNJR05fT1VUID0gJ1NJR05fT1VUJztcclxuZXhwb3J0IGNvbnN0IE5PVF9GT1VORCA9ICdOT1RfRk9VTkQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IENPTk5FQ1QgPSAnQ09OTkVDVCc7XHJcbmV4cG9ydCBjb25zdCBHRVRfUk9PTVMgPSAnR0VUX1JPT01TJztcclxuZXhwb3J0IGNvbnN0IEVOVEVSX1JPT00gPSAnRU5URVJfUk9PTSc7XHJcbmV4cG9ydCBjb25zdCBVUERBVEVfUk9PTSA9ICdVUERBVEVfUk9PTSc7XHJcbmV4cG9ydCBjb25zdCBTSE9XX05PVElGSUNBVElPTl9UT0FTVCA9ICdTSE9XX05PVElGSUNBVElPTl9UT0FTVCc7XHJcblxyXG5leHBvcnQgY29uc3QgQUREX0VNT0pJID0gJ0FERF9FTU9KSSc7XHJcbmV4cG9ydCBjb25zdCBTT1JUX01FTUJFUlMgPSAnU09SVF9NRU1CRVJTJztcclxuZXhwb3J0IGNvbnN0IEZJTFRFUl9ST09NUyA9ICdGSUxURVJfUk9PTVMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IFRPR0dMRV9DQUxMID0gJ1RPR0dMRV9DQUxMJztcclxuZXhwb3J0IGNvbnN0IFRPR0dMRV9QSUNLRVIgPSAnVE9HR0xFX1BJQ0tFUic7XHJcbmV4cG9ydCBjb25zdCBUT0dHTEVfQ0FST1VTRUwgPSAnVE9HR0xFX0NBUk9VU0VMJztcclxuZXhwb3J0IGNvbnN0IFRPR0dMRV9VU0VSU19CQVIgPSAnVE9HR0xFX1VTRVJTX0JBUic7XHJcblxyXG5leHBvcnQgY29uc3QgT05fTUVTU0FHRSA9ICdPTl9NRVNTQUdFJztcclxuZXhwb3J0IGNvbnN0IENMRUFSX01FU1NBR0UgPSAnQ0xFQVJfTUVTU0FHRSc7XHJcbmV4cG9ydCBjb25zdCBTVEFSVF9MT0FEX01PUkUgPSAnU1RBUlRfTE9BRF9NT1JFJztcclxuZXhwb3J0IGNvbnN0IEVORF9MT0FEX01PUkUgPSAnRU5EX0xPQURfTU9SRSc7XHJcblxyXG5leHBvcnQgY29uc3QgVVNFUl9TVEFSVEVEX1RZUElORyA9ICdVU0VSX1NUQVJURURfVFlQSU5HJztcclxuZXhwb3J0IGNvbnN0IFVTRVJfU1RPUEVEX1RZUElORyA9ICdVU0VSX1NUT1BFRF9UWVBJTkcnO1xyXG5leHBvcnQgY29uc3QgUFJFU0VOQ0VfQ0hBTkdFRCA9ICdQUkVTRU5DRV9DSEFOR0VEJztcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBDaGF0a2l0IGZyb20gJ0BwdXNoZXIvY2hhdGtpdC1zZXJ2ZXInO1xyXG5pbXBvcnQgeyBpbnN0YW5jZUxvY2F0b3IsIGtleSB9IGZyb20gJy4uLy4uL2NvbmZpZyc7XHJcbmltcG9ydCB7IFNJR05fT1VUIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJztcclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZSA9IG5ldyBDaGF0a2l0KHsgaW5zdGFuY2VMb2NhdG9yLCBrZXkgfSk7XHJcbmNvbnN0IGNoYXRraXQgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgU0lHTl9PVVQ6XHJcblx0XHRcdHJldHVybiBpbml0aWFsU3RhdGU7XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2hhdGtpdDtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IFNJR05fSU4sIFNJR05fT1VUIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJztcclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHsgdXNlcklkOiAnJywgY3VycmVudFNjcmVlbjogJ1NpZ25JbicgfTtcclxuY29uc3QgYXV0aGVudGljYXRpb24gPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgU0lHTl9JTjpcclxuXHRcdFx0cmV0dXJuIHsgdXNlcklkOiBhY3Rpb24udXNlcklkLCBjdXJyZW50U2NyZWVuOiAnQ2hhdCcgfTtcclxuXHRcdGNhc2UgU0lHTl9PVVQ6XHJcblx0XHRcdHJldHVybiBpbml0aWFsU3RhdGU7XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXV0aGVudGljYXRpb247XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgeyBTSE9XX05PVElGSUNBVElPTl9UT0FTVCwgU0lHTl9PVVQgfSBmcm9tICcuLi8uLi9jb25zdGFudHMnO1xyXG5cclxuY29uc3QgaW5pdGlhbFN0YXRlID0gZmFsc2U7XHJcbmNvbnN0IG5vdGlmaWNhdGlvbiA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0Y2FzZSBTSE9XX05PVElGSUNBVElPTl9UT0FTVDpcclxuXHRcdFx0cmV0dXJuIGFjdGlvbi5pc1Nob3c7XHJcblx0XHRjYXNlIFNJR05fT1VUOlxyXG5cdFx0XHRyZXR1cm4gaW5pdGlhbFN0YXRlO1xyXG5cdFx0ZGVmYXVsdDpcclxuXHRcdFx0cmV0dXJuIHN0YXRlO1xyXG5cdH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5vdGlmaWNhdGlvbjtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IFRPR0dMRV9DQUxMLCBTSUdOX09VVCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7IHNob3c6IGZhbHNlLCBjYW06IGZhbHNlIH07XHJcbmNvbnN0IHZpZGVvQ2FsbCA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0Y2FzZSBUT0dHTEVfQ0FMTDpcclxuXHRcdFx0Y29uc3Qgc2hvdyA9ICFzdGF0ZS5zaG93O1xyXG5cdFx0XHRjb25zdCBjYW0gPSBhY3Rpb24uY2FtO1xyXG5cdFx0XHRyZXR1cm4geyAuLi5zdGF0ZSwgc2hvdywgY2FtIH07XHJcblx0XHRjYXNlIFNJR05fT1VUOlxyXG5cdFx0XHRyZXR1cm4gaW5pdGlhbFN0YXRlO1xyXG5cdFx0ZGVmYXVsdDpcclxuXHRcdFx0cmV0dXJuIHN0YXRlO1xyXG5cdH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHZpZGVvQ2FsbDtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IEdFVF9ST09NUywgQ0xFQVJfTUVTU0FHRSwgTk9UX0ZPVU5ELCBTSUdOX09VVCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSB0cnVlO1xyXG5jb25zdCBpc0xvYWRpbmcgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgR0VUX1JPT01TOlxyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRjYXNlIENMRUFSX01FU1NBR0U6XHJcblx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0Y2FzZSBOT1RfRk9VTkQ6XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdGNhc2UgU0lHTl9PVVQ6XHJcblx0XHRcdHJldHVybiBpbml0aWFsU3RhdGU7XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgaXNMb2FkaW5nO1xyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IHtcclxuXHRPTl9NRVNTQUdFLFxyXG5cdENMRUFSX01FU1NBR0UsXHJcblx0U1RBUlRfTE9BRF9NT1JFLFxyXG5cdEVORF9MT0FEX01PUkUsXHJcblx0U0lHTl9PVVRcclxufSBmcm9tICcuLi8uLi9jb25zdGFudHMnO1xyXG5cclxuY29uc3QgaW5pdGlhbFN0YXRlID0gZmFsc2U7XHJcbmNvbnN0IGp1c3RMb2FkTW9yZSA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0Y2FzZSBPTl9NRVNTQUdFOlxyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRjYXNlIENMRUFSX01FU1NBR0U6XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdGNhc2UgU1RBUlRfTE9BRF9NT1JFOlxyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRjYXNlIEVORF9MT0FEX01PUkU6XHJcblx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0Y2FzZSBTSUdOX09VVDpcclxuXHRcdFx0cmV0dXJuIGluaXRpYWxTdGF0ZTtcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBqdXN0TG9hZE1vcmU7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQge1xyXG5cdE9OX01FU1NBR0UsXHJcblx0RU5EX0xPQURfTU9SRSxcclxuXHRDTEVBUl9NRVNTQUdFLFxyXG5cdFNJR05fT1VUXHJcbn0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJztcclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZSA9IFtdO1xyXG5jb25zdCBtZXNzYWdlcyA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0Y2FzZSBPTl9NRVNTQUdFOlxyXG5cdFx0XHRyZXR1cm4gWy4uLnN0YXRlLCBhY3Rpb24ubWVzc2FnZV07XHJcblx0XHRjYXNlIEVORF9MT0FEX01PUkU6XHJcblx0XHRcdHJldHVybiBbLi4uYWN0aW9uLm1lc3NhZ2VzLCAuLi5zdGF0ZV07XHJcblx0XHRjYXNlIENMRUFSX01FU1NBR0U6XHJcblx0XHRcdHJldHVybiBbXTtcclxuXHRcdGNhc2UgU0lHTl9PVVQ6XHJcblx0XHRcdHJldHVybiBpbml0aWFsU3RhdGU7XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbWVzc2FnZXM7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQge1xyXG5cdEVORF9MT0FEX01PUkUsXHJcblx0T05fTUVTU0FHRSxcclxuXHRDTEVBUl9NRVNTQUdFLFxyXG5cdFNJR05fT1VUXHJcbn0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJztcclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZSA9IFtdO1xyXG5jb25zdCBpbWFnZXMgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgT05fTUVTU0FHRTpcclxuXHRcdFx0YWN0aW9uLm1lc3NhZ2UucGFydHMuZm9yRWFjaCgoeyBwYXJ0VHlwZSwgcGF5bG9hZCB9KSA9PiB7XHJcblx0XHRcdFx0aWYgKHBhcnRUeXBlID09PSAnYXR0YWNobWVudCcpXHJcblx0XHRcdFx0XHRzdGF0ZS5wdXNoKHsgc3JjOiBwYXlsb2FkLl9kb3dubG9hZFVSTCB9KTtcclxuXHRcdFx0fSk7XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHRcdGNhc2UgRU5EX0xPQURfTU9SRTpcclxuXHRcdFx0YWN0aW9uLm1lc3NhZ2VzLmZvckVhY2gobWVzc2FnZSA9PiB7XHJcblx0XHRcdFx0bWVzc2FnZS5wYXJ0cy5mb3JFYWNoKCh7IHBhcnRUeXBlLCBwYXlsb2FkIH0pID0+IHtcclxuXHRcdFx0XHRcdGlmIChwYXJ0VHlwZSA9PT0gJ2F0dGFjaG1lbnQnKVxyXG5cdFx0XHRcdFx0XHRzdGF0ZS5wdXNoKHsgc3JjOiBwYXlsb2FkLl9kb3dubG9hZFVSTCB9KTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fSk7XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHRcdGNhc2UgQ0xFQVJfTUVTU0FHRTpcclxuXHRcdFx0cmV0dXJuIFtdO1xyXG5cdFx0Y2FzZSBTSUdOX09VVDpcclxuXHRcdFx0cmV0dXJuIGluaXRpYWxTdGF0ZTtcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBpbWFnZXM7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5leHBvcnQgeyBkZWZhdWx0IGFzIGlzTG9hZGluZyB9IGZyb20gJy4vaXNMb2FkaW5nJztcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBqdXN0TG9hZE1vcmUgfSBmcm9tICcuL2p1c3RMb2FkTW9yZSc7XHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgbWVzc2FnZXMgfSBmcm9tICcuL21lc3NhZ2VzJztcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBpbWFnZXMgfSBmcm9tICcuL2ltYWdlcyc7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgeyBDT05ORUNULCBTSUdOX09VVCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7fTtcclxuY29uc3QgY3VycmVudFVzZXIgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgQ09OTkVDVDpcclxuXHRcdFx0cmV0dXJuIGFjdGlvbi5jdXJyZW50VXNlcjtcclxuXHRcdGNhc2UgU0lHTl9PVVQ6XHJcblx0XHRcdHJldHVybiBpbml0aWFsU3RhdGU7XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY3VycmVudFVzZXI7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQge1xyXG5cdFVTRVJfU1RBUlRFRF9UWVBJTkcsXHJcblx0VVNFUl9TVE9QRURfVFlQSU5HLFxyXG5cdFNJR05fT1VUXHJcbn0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJztcclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZSA9IFtdO1xyXG5jb25zdCB0eXBpbmdVc2VycyA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0Y2FzZSBVU0VSX1NUQVJURURfVFlQSU5HOlxyXG5cdFx0XHRyZXR1cm4gWy4uLnN0YXRlLCBhY3Rpb24udXNlcl07XHJcblx0XHRjYXNlIFVTRVJfU1RPUEVEX1RZUElORzpcclxuXHRcdFx0cmV0dXJuIHN0YXRlLmZpbHRlcih1c2VyID0+IHVzZXIuaWQgIT09IGFjdGlvbi51c2VyLmlkKTtcclxuXHRcdGNhc2UgU0lHTl9PVVQ6XHJcblx0XHRcdHJldHVybiBpbml0aWFsU3RhdGU7XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHlwaW5nVXNlcnM7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgeyBFTlRFUl9ST09NLCBQUkVTRU5DRV9DSEFOR0VELCBTSUdOX09VVCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSBbXTtcclxuY29uc3Qgcm9vbVVzZXJzID0gKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pID0+IHtcclxuXHRzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XHJcblx0XHRjYXNlIEVOVEVSX1JPT006XHJcblx0XHRcdHJldHVybiBhY3Rpb24ucm9vbUFjdGl2ZS51c2VycztcclxuXHRcdGNhc2UgUFJFU0VOQ0VfQ0hBTkdFRDpcclxuXHRcdFx0cmV0dXJuIGFjdGlvbi5yb29tQWN0aXZlLnVzZXJzLnNvcnQodXNlciA9PiB7XHJcblx0XHRcdFx0aWYgKHVzZXIucHJlc2VuY2Uuc3RhdGUgPT09ICdvbmxpbmUnKSByZXR1cm4gLTE7XHJcblx0XHRcdFx0ZWxzZSByZXR1cm4gMTtcclxuXHRcdFx0fSk7XHJcblx0XHRjYXNlIFNJR05fT1VUOlxyXG5cdFx0XHRyZXR1cm4gaW5pdGlhbFN0YXRlO1xyXG5cdFx0ZGVmYXVsdDpcclxuXHRcdFx0cmV0dXJuIHN0YXRlO1xyXG5cdH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvb21Vc2VycztcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgY3VycmVudFVzZXIgfSBmcm9tICcuL2N1cnJlbnRVc2VyJztcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyB0eXBpbmdVc2VycyB9IGZyb20gJy4vdHlwaW5nVXNlcnMnO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIHJvb21Vc2VycyB9IGZyb20gJy4vcm9vbVVzZXJzJztcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7XHJcblx0R0VUX1JPT01TLFxyXG5cdFVQREFURV9ST09NLFxyXG5cdFBSRVNFTkNFX0NIQU5HRUQsXHJcblx0U0lHTl9PVVRcclxufSBmcm9tICcuLi8uLi9jb25zdGFudHMnO1xyXG5cclxuY29uc3QgaW5pdGlhbFN0YXRlID0gW107XHJcbmNvbnN0IHJvb21zID0gKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pID0+IHtcclxuXHRzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XHJcblx0XHRjYXNlIEdFVF9ST09NUzpcclxuXHRcdFx0cmV0dXJuIGFjdGlvbi5yb29tcztcclxuXHRcdGNhc2UgVVBEQVRFX1JPT006XHJcblx0XHRcdGNvbnN0IGluZGV4ID0gc3RhdGUuZmluZEluZGV4KHJvb20gPT4ge1xyXG5cdFx0XHRcdGlmIChyb29tKSByZXR1cm4gYWN0aW9uLnJvb20uaWQgPT09IHJvb20uaWQ7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRpZiAoaW5kZXggPT09IC0xKSByZXR1cm4gc3RhdGU7XHJcblx0XHRcdHN0YXRlW2luZGV4XSA9IGFjdGlvbi5yb29tO1xyXG5cdFx0XHRyZXR1cm4gWy4uLnN0YXRlXTtcclxuXHRcdGNhc2UgUFJFU0VOQ0VfQ0hBTkdFRDpcclxuXHRcdFx0cmV0dXJuIHN0YXRlO1xyXG5cdFx0Y2FzZSBTSUdOX09VVDpcclxuXHRcdFx0cmV0dXJuIGluaXRpYWxTdGF0ZTtcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCByb29tcztcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7XHJcblx0Q09OTkVDVCxcclxuXHRFTlRFUl9ST09NLFxyXG5cdFBSRVNFTkNFX0NIQU5HRUQsXHJcblx0U0lHTl9PVVRcclxufSBmcm9tICcuLi8uLi9jb25zdGFudHMnO1xyXG5cclxuY29uc3QgaW5pdGlhbFN0YXRlID0ge307XHJcbmNvbnN0IHJvb21BY3RpdmUgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgQ09OTkVDVDpcclxuXHRcdFx0cmV0dXJuIHN0YXRlO1xyXG5cdFx0Y2FzZSBFTlRFUl9ST09NOlxyXG5cdFx0XHRyZXR1cm4gYWN0aW9uLnJvb21BY3RpdmU7XHJcblx0XHRjYXNlIFBSRVNFTkNFX0NIQU5HRUQ6XHJcblx0XHRcdHJldHVybiBhY3Rpb24ucm9vbUFjdGl2ZTtcclxuXHRcdGNhc2UgU0lHTl9PVVQ6XHJcblx0XHRcdHJldHVybiBpbml0aWFsU3RhdGU7XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm9vbUFjdGl2ZTtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgcm9vbXMgfSBmcm9tICcuL3Jvb21zJztcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyByb29tQWN0aXZlIH0gZnJvbSAnLi9yb29tQWN0aXZlJztcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IFNPUlRfTUVNQkVSUywgU0lHTl9PVVQgfSBmcm9tICcuLi8uLi9jb25zdGFudHMnO1xyXG5cclxuY29uc3QgaW5pdGlhbFN0YXRlID0geyBieTogJ3N0YXR1cycsIHZhbHVlOiAxIH07XHJcbmNvbnN0IHVzZXJTb3J0ID0gKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pID0+IHtcclxuXHRzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XHJcblx0XHRjYXNlIFNPUlRfTUVNQkVSUzpcclxuXHRcdFx0Y29uc3QgeyBieSwgdmFsdWUgfSA9IGFjdGlvbjtcclxuXHRcdFx0cmV0dXJuIHsgLi4uc3RhdGUsIGJ5LCB2YWx1ZSB9O1xyXG5cdFx0Y2FzZSBTSUdOX09VVDpcclxuXHRcdFx0cmV0dXJuIGluaXRpYWxTdGF0ZTtcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB1c2VyU29ydDtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IEZJTFRFUl9ST09NUywgU0lHTl9PVVQgfSBmcm9tICcuLi8uLi9jb25zdGFudHMnO1xyXG5cclxuY29uc3QgaW5pdGlhbFN0YXRlID0geyBuYW1lOiAnJywgc3RhdHVzOiAwLCBpc1ByaXZhdGU6IGZhbHNlIH07XHJcbmNvbnN0IHJvb21GaWx0ZXIgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgRklMVEVSX1JPT01TOlxyXG5cdFx0XHRjb25zdCB7IG5hbWUsIHN0YXR1cywgaXNQcml2YXRlIH0gPSBhY3Rpb247XHJcblx0XHRcdHJldHVybiB7IC4uLnN0YXRlLCBuYW1lLCBzdGF0dXMsIGlzUHJpdmF0ZSB9O1xyXG5cdFx0Y2FzZSBTSUdOX09VVDpcclxuXHRcdFx0cmV0dXJuIGluaXRpYWxTdGF0ZTtcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCByb29tRmlsdGVyO1xyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IHsgQUREX0VNT0pJLCBUT0dHTEVfUElDS0VSLCBTSUdOX09VVCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSBmYWxzZTtcclxuY29uc3Qgc2hvd1BpY2tlciA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0Y2FzZSBBRERfRU1PSkk6XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdGNhc2UgVE9HR0xFX1BJQ0tFUjpcclxuXHRcdFx0cmV0dXJuICFzdGF0ZTtcclxuXHRcdGNhc2UgU0lHTl9PVVQ6XHJcblx0XHRcdHJldHVybiBpbml0aWFsU3RhdGU7XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgc2hvd1BpY2tlcjtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IFRPR0dMRV9DQVJPVVNFTCwgU0lHTl9PVVQgfSBmcm9tICcuLi8uLi9jb25zdGFudHMnO1xyXG5cclxuY29uc3QgaW5pdGlhbFN0YXRlID0geyBpc1Nob3c6IGZhbHNlLCBpbWFnZUluZGV4OiAtMSwgd2hlcmU6ICcnIH07XHJcbmNvbnN0IHNob3dDYXJvdXNlbCA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0Y2FzZSBUT0dHTEVfQ0FST1VTRUw6XHJcblx0XHRcdHJldHVybiB7XHJcblx0XHRcdFx0Li4uc2hvd0Nhcm91c2VsLFxyXG5cdFx0XHRcdGlzU2hvdzogIXN0YXRlLmlzU2hvdyxcclxuXHRcdFx0XHRpbWFnZUluZGV4OiBhY3Rpb24uaW1hZ2VJbmRleCxcclxuXHRcdFx0XHR3aGVyZTogYWN0aW9uLndoZXJlXHJcblx0XHRcdH07XHJcblx0XHRjYXNlIFNJR05fT1VUOlxyXG5cdFx0XHRyZXR1cm4gaW5pdGlhbFN0YXRlO1xyXG5cdFx0ZGVmYXVsdDpcclxuXHRcdFx0cmV0dXJuIHN0YXRlO1xyXG5cdH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHNob3dDYXJvdXNlbDtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IFRPR0dMRV9VU0VSU19CQVIsIFNJR05fT1VUIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJztcclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZSA9IGZhbHNlO1xyXG5jb25zdCBzaG93VXNlcnNCYXIgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgVE9HR0xFX1VTRVJTX0JBUjpcclxuXHRcdFx0cmV0dXJuICFzdGF0ZTtcclxuXHRcdGNhc2UgU0lHTl9PVVQ6XHJcblx0XHRcdHJldHVybiBpbml0aWFsU3RhdGU7XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgc2hvd1VzZXJzQmFyO1xyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VyU29ydCB9IGZyb20gJy4vdXNlclNvcnQnO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIHJvb21GaWx0ZXIgfSBmcm9tICcuL3Jvb21GaWx0ZXInO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIHNob3dQaWNrZXIgfSBmcm9tICcuL3Nob3dQaWNrZXInO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIHNob3dDYXJvdXNlbCB9IGZyb20gJy4vc2hvd0Nhcm91c2VsJztcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBzaG93VXNlcnNCYXIgfSBmcm9tICcuL3Nob3dVc2Vyc0Jhcic7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgeyBjb21iaW5lUmVkdWNlcnMsIGNyZWF0ZVN0b3JlLCBjb21wb3NlLCBhcHBseU1pZGRsZXdhcmUgfSBmcm9tICdyZWR1eCc7XHJcbmltcG9ydCB0aHVuayBmcm9tICdyZWR1eC10aHVuayc7XHJcbmltcG9ydCB7IHJlZHVjZXIgfSBmcm9tICdAYW5keWV0L3NpbXBsZXdlYnJ0Yyc7XHJcblxyXG5pbXBvcnQgY2hhdGtpdCBmcm9tICcuL2NoYXRraXQnO1xyXG5pbXBvcnQgYXV0aGVudGljYXRpb24gZnJvbSAnLi9hdXRoZW50aWNhdGlvbic7XHJcbmltcG9ydCBub3RpZmljYXRpb24gZnJvbSAnLi9ub3RpZmljYXRpb24nO1xyXG5pbXBvcnQgdmlkZW9DYWxsIGZyb20gJy4vdmlkZW9DYWxsJztcclxuXHJcbmltcG9ydCB7IGlzTG9hZGluZywganVzdExvYWRNb3JlLCBtZXNzYWdlcywgaW1hZ2VzIH0gZnJvbSAnLi9tZXNzYWdlcyc7XHJcbmltcG9ydCB7IGN1cnJlbnRVc2VyLCB0eXBpbmdVc2Vycywgcm9vbVVzZXJzIH0gZnJvbSAnLi91c2Vycyc7XHJcbmltcG9ydCB7IHJvb21zLCByb29tQWN0aXZlIH0gZnJvbSAnLi9yb29tcyc7XHJcblxyXG5pbXBvcnQge1xyXG5cdHVzZXJTb3J0LFxyXG5cdHJvb21GaWx0ZXIsXHJcblx0c2hvd1BpY2tlcixcclxuXHRzaG93Q2Fyb3VzZWwsXHJcblx0c2hvd1VzZXJzQmFyXHJcbn0gZnJvbSAnLi9jb250cm9scyc7XHJcblxyXG5jb25zdCByb290UmVkdWNlciA9IGNvbWJpbmVSZWR1Y2Vycyh7XHJcblx0c2ltcGxld2VicnRjOiByZWR1Y2VyLFxyXG5cdGF1dGhlbnRpY2F0aW9uLFxyXG5cdG5vdGlmaWNhdGlvbixcclxuXHRqdXN0TG9hZE1vcmUsXHJcblx0c2hvd0Nhcm91c2VsLFxyXG5cdHNob3dVc2Vyc0JhcixcclxuXHRjdXJyZW50VXNlcixcclxuXHR0eXBpbmdVc2VycyxcclxuXHRyb29tQWN0aXZlLFxyXG5cdHJvb21GaWx0ZXIsXHJcblx0c2hvd1BpY2tlcixcclxuXHR2aWRlb0NhbGwsXHJcblx0cm9vbVVzZXJzLFxyXG5cdGlzTG9hZGluZyxcclxuXHR1c2VyU29ydCxcclxuXHRtZXNzYWdlcyxcclxuXHRjaGF0a2l0LFxyXG5cdGltYWdlcyxcclxuXHRyb29tc1xyXG59KTtcclxuXHJcbmNvbnN0IGNvbXBvc2VFbmhhbmNlciA9IHdpbmRvdy5fX1JFRFVYX0RFVlRPT0xTX0VYVEVOU0lPTl9DT01QT1NFX18gfHwgY29tcG9zZTtcclxuY29uc3Qgc3RvcmUgPSBjcmVhdGVTdG9yZShcclxuXHRyb290UmVkdWNlcixcclxuXHR7IHNpbXBsZXdlYnJ0Yzoge30gfSxcclxuXHRjb21wb3NlRW5oYW5jZXIoYXBwbHlNaWRkbGV3YXJlKHRodW5rKSlcclxuKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHN0b3JlO1xyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuZXhwb3J0IGNvbnN0IGFsZXJ0RXJyb3IgPSAodGl0bGUsIGVycikgPT4ge1xyXG5cdHRyeSB7XHJcblx0XHR2YXIgZXJyb3IgPSBlcnIuZXJyb3JfZGVzY3JpcHRpb25cclxuXHRcdFx0PyBlcnIuZXJyb3JfZGVzY3JpcHRpb25cclxuXHRcdFx0OiBlcnIuaW5mby5lcnJvcl9kZXNjcmlwdGlvbjtcclxuXHR9IGNhdGNoIHtcclxuXHRcdGVycm9yID0gZXJyLmVycm9yO1xyXG5cdH1cclxuXHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdGFsZXJ0KHRpdGxlICsgJzogJyArIGVycm9yKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBvbkdldFByaXZhdGVVc2VyID0gKHJvb20sIGN1cnJlbnRVc2VySWQsIGlzRmlsdGVyKSA9PiB7XHJcblx0Y29uc3QgeyBtZW1iZXJzIH0gPSByb29tLmN1c3RvbURhdGE7XHJcblx0Y29uc3QgdXNlcnMgPSBPYmplY3QudmFsdWVzKHJvb20udXNlclN0b3JlLnVzZXJzKTtcclxuXHR2YXIgbWFpblVzZXIgPSBtZW1iZXJzWzBdO1xyXG5cclxuXHRpZiAobWVtYmVycy5sZW5ndGggPT09IDIpXHJcblx0XHRtYWluVXNlciA9IG1lbWJlcnMuZmluZChtZW1iZXIgPT4gbWVtYmVyLmlkICE9PSBjdXJyZW50VXNlcklkKTtcclxuXHJcblx0dmFyIHJvb21OYW1lID0gaXNGaWx0ZXIgPyBtYWluVXNlci5uYW1lLnRvTG93ZXJDYXNlKCkgOiBtYWluVXNlci5uYW1lO1xyXG5cdHZhciByb29tU3RhdHVzID0gaXNGaWx0ZXIgPyAtMSA6ICcnO1xyXG5cclxuXHRtYWluVXNlciA9IHVzZXJzLmZpbmQodXNlciA9PiB1c2VyLmlkID09PSBtYWluVXNlci5pZCk7XHJcblx0aWYgKG1haW5Vc2VyKSB7XHJcblx0XHRjb25zdCB7IG5hbWUsIHByZXNlbmNlIH0gPSBtYWluVXNlcjtcclxuXHRcdHJvb21OYW1lID0gbmFtZTtcclxuXHRcdHJvb21TdGF0dXMgPSBwcmVzZW5jZS5zdGF0ZTtcclxuXHRcdGlmIChpc0ZpbHRlcikgcm9vbVN0YXR1cyA9IHByZXNlbmNlLnN0YXRlID09PSAnb25saW5lJyA/IDEgOiAtMTtcclxuXHR9XHJcblxyXG5cdHJldHVybiB7IHJvb21OYW1lLCByb29tU3RhdHVzIH07XHJcbn07XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgeyBTSE9XX05PVElGSUNBVElPTl9UT0FTVCB9IGZyb20gJy4uL2NvbnN0YW50cyc7XHJcblxyXG5leHBvcnQgY29uc3QgZ3JhbnRQZXJtaXNzaW9uID0gKCkgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG5cdGlmICghKCdOb3RpZmljYXRpb24nIGluIHdpbmRvdykpIHtcclxuXHRcdGFsZXJ0KCdUcsOsbmggZHV54buHdCBj4bunYSBi4bqhbiBraMO0bmcgaOG7lyB0cuG7oyBoaeG7g24gdGjhu4sgdGjDtG5nIGLDoW8nKTtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHsgcGVybWlzc2lvbiB9ID0gTm90aWZpY2F0aW9uO1xyXG5cdGlmIChwZXJtaXNzaW9uID09PSAnZ3JhbnRlZCcpIHtcclxuXHRcdG5ldyBOb3RpZmljYXRpb24oJ0LhuqFuIMSRw6MgY2hvIHBow6lwIGhp4buDbiB0aOG7iyB0aMO0bmcgYsOhbyBy4buTaScpO1xyXG5cdFx0ZGlzcGF0Y2goeyB0eXBlOiBTSE9XX05PVElGSUNBVElPTl9UT0FTVCwgaXNTaG93OiBmYWxzZSB9KTtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdGlmIChwZXJtaXNzaW9uICE9PSAnZGVuaWVkJyB8fCBwZXJtaXNzaW9uID09PSAnZGVmYXVsdCcpIHtcclxuXHRcdE5vdGlmaWNhdGlvbi5yZXF1ZXN0UGVybWlzc2lvbigpLnRoZW4ocmVzdWx0ID0+IHtcclxuXHRcdFx0aWYgKHJlc3VsdCA9PT0gJ2dyYW50ZWQnKVxyXG5cdFx0XHRcdG5ldyBOb3RpZmljYXRpb24oJ1R1eeG7h3QgduG7nWkgISEhJywge1xyXG5cdFx0XHRcdFx0Ym9keTpcclxuXHRcdFx0XHRcdFx0J1F1YW5DaGF0IHPhur0gYuG6r3QgxJHhuqd1IHRow7RuZyBiw6FvIGNobyBi4bqhbiB24buBIHRpbiBuaOG6r24gbeG7m2kgbmjhuqV0J1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0fSk7XHJcblx0fVxyXG5cdGRpc3BhdGNoKHsgdHlwZTogU0hPV19OT1RJRklDQVRJT05fVE9BU1QsIGlzU2hvdzogZmFsc2UgfSk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3Qgc2hvd05vdGlmaWNhdGlvblRvYXN0ID0gKCkgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG5cdGlmICh3aW5kb3cuTm90aWZpY2F0aW9uICYmIE5vdGlmaWNhdGlvbi5wZXJtaXNzaW9uID09PSAnZ3JhbnRlZCcpIHJldHVybjtcclxuXHRkaXNwYXRjaCh7IHR5cGU6IFNIT1dfTk9USUZJQ0FUSU9OX1RPQVNULCBpc1Nob3c6IHRydWUgfSk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3Qgc2hvd05vdGlmaWNhdGlvbiA9ICh0aXRsZSwgbGFzdE1lc3NhZ2UpID0+IHtcclxuXHRyZXR1cm4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG5cdFx0bmV3IE5vdGlmaWNhdGlvbih0aXRsZSwgeyBib2R5OiBsYXN0TWVzc2FnZSB9KTtcclxuXHR9O1xyXG59O1xyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IHsgTkVXU19BUElfS0VZIH0gZnJvbSAnLi4vY29uZmlnJztcclxuaW1wb3J0IHsgU1RBUlRfTE9BRF9NT1JFLCBFTkRfTE9BRF9NT1JFIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcclxuXHJcbmltcG9ydCB7IGFsZXJ0RXJyb3IgfSBmcm9tICcuLi91dGlscyc7XHJcbmltcG9ydCB7IHNob3dOb3RpZmljYXRpb24gfSBmcm9tICcuL25vdGlmaWNhdGlvbic7XHJcblxyXG5leHBvcnQgY29uc3QgdHlwaW5nTWVzc2FnZSA9ICgpID0+IChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcclxuXHRjb25zdCB7IGN1cnJlbnRVc2VyLCByb29tQWN0aXZlIH0gPSBnZXRTdGF0ZSgpO1xyXG5cdGN1cnJlbnRVc2VyXHJcblx0XHQuaXNUeXBpbmdJbih7IHJvb21JZDogcm9vbUFjdGl2ZS5pZCB9KVxyXG5cdFx0LmNhdGNoKGVyciA9PiBhbGVydEVycm9yKCdFcnJvciBvbiB0eXBpbmcgcm9vbXMnLCBlcnIpKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBzZW5kTWVzc2FnZSA9IChwYXJ0cywgcm9vbUlkID0gbnVsbCkgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG5cdGNvbnN0IHsgY3VycmVudFVzZXIsIHJvb21BY3RpdmUgfSA9IGdldFN0YXRlKCk7XHJcblx0aWYgKHJvb21JZCA9PT0gbnVsbCkgcm9vbUlkID0gYCR7cm9vbUFjdGl2ZS5pZH1gO1xyXG5cdGN1cnJlbnRVc2VyXHJcblx0XHQuc2VuZE11bHRpcGFydE1lc3NhZ2UoeyByb29tSWQsIHBhcnRzIH0pXHJcblx0XHQuY2F0Y2goZXJyID0+IGFsZXJ0RXJyb3IoJ0Vycm9yIG9uIHNlbmRpbmcgbWVzc2FnZScsIGVycikpO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlbmROZXdzID0gcXVlcnkgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG5cdGNvbnN0IG5ld3NBcGkgPSBgaHR0cHM6Ly9uZXdzYXBpLm9yZy92Mi9ldmVyeXRoaW5nP3E9JHtxdWVyeX0mcGFnZVNpemU9MyZhcGlLZXk9JHtORVdTX0FQSV9LRVl9YDtcclxuXHRmZXRjaChuZXdzQXBpKVxyXG5cdFx0LnRoZW4ocmVzID0+IHJlcy5qc29uKCkpXHJcblx0XHQudGhlbihkYXRhID0+IHtcclxuXHRcdFx0Y29uc3QgcGFydHMgPSBbXTtcclxuXHRcdFx0ZGF0YS5hcnRpY2xlcy5mb3JFYWNoKGFydGljbGUgPT4ge1xyXG5cdFx0XHRcdGNvbnN0IHsgdGl0bGUsIHNvdXJjZSwgdXJsIH0gPSBhcnRpY2xlO1xyXG5cdFx0XHRcdHBhcnRzLnB1c2goe1xyXG5cdFx0XHRcdFx0dHlwZTogJ3RleHQvcGxhaW4nLFxyXG5cdFx0XHRcdFx0Y29udGVudDogYCR7dGl0bGV9IC0gJHtzb3VyY2UubmFtZX0gLSAke3VybH1gXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRkaXNwYXRjaChzZW5kTWVzc2FnZShwYXJ0cykpO1xyXG5cdFx0fSlcclxuXHRcdC5jYXRjaChlcnIgPT4gYWxlcnRFcnJvcignRXJyb3Igb24gZmV0Y2hpbmcgbmV3c2FwaScsIGVycikpO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGZldGNoTGFzdE1lc3NhZ2UgPSAoKSA9PiB7XHJcblx0cmV0dXJuIChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcclxuXHRcdGNvbnN0IHsgY3VycmVudFVzZXIsIG1lc3NhZ2VzIH0gPSBnZXRTdGF0ZSgpO1xyXG5cdFx0Y29uc3QgeyByb29tLCBzZW5kZXIsIHBhcnRzIH0gPSBtZXNzYWdlc1ttZXNzYWdlcy5sZW5ndGggLSAxXTtcclxuXHJcblx0XHRjb25zdCB7IGlkLCBuYW1lLCBjdXN0b21EYXRhIH0gPSByb29tO1xyXG5cdFx0Y29uc3QgeyBwYXJ0VHlwZSwgcGF5bG9hZCB9ID0gcGFydHNbcGFydHMubGVuZ3RoIC0gMV07XHJcblx0XHR2YXIgbGFzdE1lc3NhZ2UgPSBgOiAke3BheWxvYWQuY29udGVudH1gO1xyXG5cclxuXHRcdGlmIChwYXJ0VHlwZSA9PT0gJ2F0dGFjaG1lbnQnKSBsYXN0TWVzc2FnZSA9ICcgxJHDoyBn4butaSAxIOG6o25oJztcclxuXHRcdGVsc2UgaWYgKHBhcnRUeXBlID09PSAndXJsJykgbGFzdE1lc3NhZ2UgPSAnIMSRw6MgZ+G7rWkgMSBsacOqbiBr4bq/dCc7XHJcblx0XHRsYXN0TWVzc2FnZSA9IGAke3NlbmRlci5uYW1lfSR7bGFzdE1lc3NhZ2V9YDtcclxuXHJcblx0XHRjdXJyZW50VXNlclxyXG5cdFx0XHQudXBkYXRlUm9vbSh7XHJcblx0XHRcdFx0cm9vbUlkOiBpZCxcclxuXHRcdFx0XHRjdXN0b21EYXRhOiB7IGxhc3RNZXNzYWdlLCBtZW1iZXJzOiBjdXN0b21EYXRhLm1lbWJlcnMgfVxyXG5cdFx0XHR9KVxyXG5cdFx0XHQudGhlbigoKSA9PiB7XHJcblx0XHRcdFx0aWYgKGN1cnJlbnRVc2VyLmlkICE9PSBzZW5kZXIuaWQpXHJcblx0XHRcdFx0XHRkaXNwYXRjaChzaG93Tm90aWZpY2F0aW9uKG5hbWUsIGxhc3RNZXNzYWdlKSk7XHJcblx0XHRcdH0pO1xyXG5cdH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgbG9hZE1vcmVNZXNzYWdlcyA9ICgpID0+IChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcclxuXHRkaXNwYXRjaCh7IHR5cGU6IFNUQVJUX0xPQURfTU9SRSB9KTtcclxuXHRjb25zdCB7IGN1cnJlbnRVc2VyLCBtZXNzYWdlcywgcm9vbUFjdGl2ZSB9ID0gZ2V0U3RhdGUoKTtcclxuXHRpZiAobWVzc2FnZXMubGVuZ3RoID09PSAwKSByZXR1cm47XHJcblx0Y29uc3Qgb2xkZXN0TWVzc2FnZUlkID0gTWF0aC5taW4oLi4ubWVzc2FnZXMubWFwKG1lc3NhZ2UgPT4gbWVzc2FnZS5pZCkpO1xyXG5cclxuXHRjdXJyZW50VXNlclxyXG5cdFx0LmZldGNoTXVsdGlwYXJ0TWVzc2FnZXMoe1xyXG5cdFx0XHRyb29tSWQ6IHJvb21BY3RpdmUuaWQsXHJcblx0XHRcdGluaXRpYWxJZDogb2xkZXN0TWVzc2FnZUlkLFxyXG5cdFx0XHRkaXJlY3Rpb246ICdvbGRlcicsXHJcblx0XHRcdGxpbWl0OiAxMFxyXG5cdFx0fSlcclxuXHRcdC50aGVuKG1lc3NhZ2VzID0+IGRpc3BhdGNoKHsgdHlwZTogRU5EX0xPQURfTU9SRSwgbWVzc2FnZXMgfSkpO1xyXG59O1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IHsga2V5IH0gZnJvbSAnLi4vY29uZmlnJztcclxuaW1wb3J0IHsgSG1hY1NIQTEgfSBmcm9tICdjcnlwdG8tanMnO1xyXG5cclxuaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAnLi4vY29uc3RhbnRzJztcclxuaW1wb3J0IHsgYWxlcnRFcnJvciwgb25HZXRQcml2YXRlVXNlciB9IGZyb20gJy4uL3V0aWxzJztcclxuXHJcbmltcG9ydCB7IHNob3dOb3RpZmljYXRpb25Ub2FzdCB9IGZyb20gJy4vbm90aWZpY2F0aW9uJztcclxuaW1wb3J0IHsgc2VuZE1lc3NhZ2UsIGZldGNoTGFzdE1lc3NhZ2UgfSBmcm9tICcuL21lc3NhZ2VzJztcclxuXHJcbmV4cG9ydCBjb25zdCBvblNldFJvb21BY3RpdmUgPSAocm9vbUFjdGl2ZSwgY3VycmVudFVzZXJJZCkgPT4ge1xyXG5cdGNvbnN0IHsgaXNQcml2YXRlLCB1c2VycyB9ID0gcm9vbUFjdGl2ZTtcclxuXHRpZiAoaXNQcml2YXRlKSB7XHJcblx0XHRjb25zdCB7IHJvb21OYW1lLCByb29tU3RhdHVzIH0gPSBvbkdldFByaXZhdGVVc2VyKFxyXG5cdFx0XHRyb29tQWN0aXZlLFxyXG5cdFx0XHRjdXJyZW50VXNlcklkLFxyXG5cdFx0XHRmYWxzZVxyXG5cdFx0KTtcclxuXHRcdHJldHVybiB7IC4uLnJvb21BY3RpdmUsIHVzZXJzLCBuYW1lOiByb29tTmFtZSwgc3RhdHVzOiByb29tU3RhdHVzIH07XHJcblx0fVxyXG5cdHJldHVybiByb29tQWN0aXZlO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldFJvb21zID0gY3VycmVudFVzZXIgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG5cdGN1cnJlbnRVc2VyXHJcblx0XHQuZ2V0Sm9pbmFibGVSb29tcygpXHJcblx0XHQudGhlbih1bmpvaW5lZFJvb21zID0+IHtcclxuXHRcdFx0Y29uc3Qgcm9vbXMgPSBbLi4uY3VycmVudFVzZXIucm9vbXMsIC4uLnVuam9pbmVkUm9vbXNdO1xyXG5cdFx0XHRkaXNwYXRjaCh7IHR5cGU6IHR5cGVzLkdFVF9ST09NUywgcm9vbXMgfSk7XHJcblx0XHR9KVxyXG5cdFx0LmNhdGNoKGVyciA9PiBhbGVydEVycm9yKCdFcnJvciBvbiBnZXR0aW5nIHJvb21zJywgZXJyKSk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZW50ZXJSb29tID0gcm9vbUlkID0+IChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcclxuXHRjb25zdCBjdXJyZW50VXNlciA9IGdldFN0YXRlKCkuY3VycmVudFVzZXI7XHJcblx0ZGlzcGF0Y2goeyB0eXBlOiB0eXBlcy5DTEVBUl9NRVNTQUdFIH0pO1xyXG5cdGlmICghY3VycmVudFVzZXIuaWQpIHJldHVybjtcclxuXHJcblx0Y3VycmVudFVzZXJcclxuXHRcdC5zdWJzY3JpYmVUb1Jvb21NdWx0aXBhcnQoe1xyXG5cdFx0XHRyb29tSWQsXHJcblx0XHRcdG1lc3NhZ2VMaW1pdDogMTAsXHJcblx0XHRcdGhvb2tzOiB7XHJcblx0XHRcdFx0b25NZXNzYWdlOiBtZXNzYWdlID0+IHtcclxuXHRcdFx0XHRcdHNldFRpbWVvdXQoKCkgPT4gZGlzcGF0Y2goZmV0Y2hMYXN0TWVzc2FnZSgpKSwgMjUwKTtcclxuXHRcdFx0XHRcdGlmIChsb2NhdGlvbi5oYXNoLnN1YnN0cig3KSA9PT0gcm9vbUlkKSB7XHJcblx0XHRcdFx0XHRcdGRpc3BhdGNoKHsgdHlwZTogdHlwZXMuT05fTUVTU0FHRSwgbWVzc2FnZSB9KTtcclxuXHRcdFx0XHRcdFx0Y3VycmVudFVzZXIuc2V0UmVhZEN1cnNvcih7XHJcblx0XHRcdFx0XHRcdFx0cm9vbUlkLFxyXG5cdFx0XHRcdFx0XHRcdHBvc2l0aW9uOiBtZXNzYWdlLmlkXHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0b25Vc2VyU3RhcnRlZFR5cGluZzogdXNlciA9PiB7XHJcblx0XHRcdFx0XHRjb25zdCB7IHJvb21BY3RpdmUgfSA9IGdldFN0YXRlKCk7XHJcblx0XHRcdFx0XHRpZiAocm9vbUFjdGl2ZS5pZCA9PT0gcm9vbUlkKVxyXG5cdFx0XHRcdFx0XHRkaXNwYXRjaCh7IHR5cGU6IHR5cGVzLlVTRVJfU1RBUlRFRF9UWVBJTkcsIHVzZXIgfSk7XHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRvblVzZXJTdG9wcGVkVHlwaW5nOiB1c2VyID0+IHtcclxuXHRcdFx0XHRcdGNvbnN0IHsgcm9vbUFjdGl2ZSB9ID0gZ2V0U3RhdGUoKTtcclxuXHRcdFx0XHRcdGlmIChyb29tQWN0aXZlLmlkID09PSByb29tSWQpXHJcblx0XHRcdFx0XHRcdGRpc3BhdGNoKHsgdHlwZTogdHlwZXMuVVNFUl9TVE9QRURfVFlQSU5HLCB1c2VyIH0pO1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0b25QcmVzZW5jZUNoYW5nZWQ6ICgpID0+IHtcclxuXHRcdFx0XHRcdGNvbnN0IHsgY3VycmVudFVzZXIsIHJvb21BY3RpdmUgfSA9IGdldFN0YXRlKCk7XHJcblx0XHRcdFx0XHRpZiAocm9vbUFjdGl2ZS5pZCA9PT0gcm9vbUlkKVxyXG5cdFx0XHRcdFx0XHRkaXNwYXRjaCh7XHJcblx0XHRcdFx0XHRcdFx0dHlwZTogdHlwZXMuUFJFU0VOQ0VfQ0hBTkdFRCxcclxuXHRcdFx0XHRcdFx0XHRyb29tQWN0aXZlOiBvblNldFJvb21BY3RpdmUoXHJcblx0XHRcdFx0XHRcdFx0XHRyb29tQWN0aXZlLFxyXG5cdFx0XHRcdFx0XHRcdFx0Y3VycmVudFVzZXIuaWRcclxuXHRcdFx0XHRcdFx0XHQpXHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fSlcclxuXHRcdC50aGVuKHJvb21BY3RpdmUgPT4ge1xyXG5cdFx0XHRkaXNwYXRjaCh7XHJcblx0XHRcdFx0dHlwZTogdHlwZXMuRU5URVJfUk9PTSxcclxuXHRcdFx0XHRyb29tQWN0aXZlOiBvblNldFJvb21BY3RpdmUocm9vbUFjdGl2ZSwgY3VycmVudFVzZXIuaWQpXHJcblx0XHRcdH0pO1xyXG5cdFx0XHRkaXNwYXRjaChnZXRSb29tcyhjdXJyZW50VXNlcikpO1xyXG5cdFx0XHRkaXNwYXRjaChzaG93Tm90aWZpY2F0aW9uVG9hc3QuY2FsbCh0aGlzKSk7XHJcblx0XHR9KVxyXG5cdFx0LmNhdGNoKGVyciA9PiB7XHJcblx0XHRcdGRpc3BhdGNoKHsgdHlwZTogdHlwZXMuTk9UX0ZPVU5EIH0pO1xyXG5cdFx0XHRhbGVydEVycm9yKCdFcnJvciBvbiBlbnRlcmluZyByb29tczogJywgZXJyKTtcclxuXHRcdH0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNyZWF0ZVJvb20gPSAobmFtZSwgbWVzc2FnZSkgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG5cdGNvbnN0IGN1cnJlbnRVc2VyID0gZ2V0U3RhdGUoKS5jdXJyZW50VXNlcjtcclxuXHRjdXJyZW50VXNlclxyXG5cdFx0LmNyZWF0ZVJvb20oeyBuYW1lLCBjdXN0b21EYXRhOiB7IGxhc3RNZXNzYWdlOiAnJyB9IH0pXHJcblx0XHQudGhlbihyb29tID0+IHtcclxuXHRcdFx0Y29uc3Qgcm9vbUlkID0gcm9vbS5pZDtcclxuXHRcdFx0Y29uc3QgcGFydHMgPSBbXTtcclxuXHRcdFx0aWYgKG1lc3NhZ2UudHJpbSgpKSB7XHJcblx0XHRcdFx0cGFydHMucHVzaCh7IHR5cGU6ICd0ZXh0L3BsYWluJywgY29udGVudDogbWVzc2FnZSB9KTtcclxuXHRcdFx0XHRkaXNwYXRjaChzZW5kTWVzc2FnZShwYXJ0cywgYCR7cm9vbUlkfWApKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRoaXN0b3J5LnB1c2hTdGF0ZShudWxsLCBudWxsLCBgIy9yb29tLyR7cm9vbUlkfWApO1xyXG5cdFx0XHRzZXRUaW1lb3V0KCgpID0+IGRpc3BhdGNoKGVudGVyUm9vbShyb29tSWQpKSwgMjUwKTtcclxuXHRcdH0pXHJcblx0XHQuY2F0Y2goZXJyID0+IGFsZXJ0RXJyb3IoJ0Vycm9yIG9uIGNyZWF0aW5nIHJvb21zJywgZXJyKSk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgY3JlYXRlUHJpdmF0ZVJvb20gPSB1c2VyID0+IChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcclxuXHRjb25zdCB7IGNoYXRraXQsIGN1cnJlbnRVc2VyIH0gPSBnZXRTdGF0ZSgpO1xyXG5cdGNvbnN0IHsgaWQsIG5hbWUgfSA9IGN1cnJlbnRVc2VyO1xyXG5cclxuXHRjb25zdCByb29tSWQgPSBIbWFjU0hBMShgJHtpZH0ke3VzZXIuaWR9YCwga2V5KS50b1N0cmluZygpO1xyXG5cdGNvbnN0IG90aGVyUm9vbUlkID0gSG1hY1NIQTEoYCR7dXNlci5pZH0ke2lkfWAsIGtleSkudG9TdHJpbmcoKTtcclxuXHRjb25zdCBtZW1iZXJzID1cclxuXHRcdHVzZXIuaWQgPT09IGlkXHJcblx0XHRcdD8gW3sgaWQsIG5hbWUgfV1cclxuXHRcdFx0OiBbXHJcblx0XHRcdFx0XHR7IGlkLCBuYW1lIH0sXHJcblx0XHRcdFx0XHR7IGlkOiB1c2VyLmlkLCBuYW1lOiB1c2VyLm5hbWUgfVxyXG5cdFx0XHQgIF07XHJcblxyXG5cdGNoYXRraXRcclxuXHRcdC5nZXRSb29tcyh7IGluY2x1ZGVQcml2YXRlOiB0cnVlIH0pXHJcblx0XHQudGhlbihyb29tcyA9PiB7XHJcblx0XHRcdGNvbnN0IHByaXZhdGVSb29tQ3JlYXRlZCA9IHJvb21zLnNvbWUoXHJcblx0XHRcdFx0cm9vbSA9PiByb29tLmlkID09PSByb29tSWQgfHwgcm9vbS5pZCA9PT0gb3RoZXJSb29tSWRcclxuXHRcdFx0KTtcclxuXHRcdFx0aWYgKCFwcml2YXRlUm9vbUNyZWF0ZWQpXHJcblx0XHRcdFx0Y3VycmVudFVzZXJcclxuXHRcdFx0XHRcdC5jcmVhdGVSb29tKHtcclxuXHRcdFx0XHRcdFx0aWQ6IHJvb21JZCxcclxuXHRcdFx0XHRcdFx0bmFtZTogYCR7bmFtZX0gJiAke3VzZXIubmFtZX1gLFxyXG5cdFx0XHRcdFx0XHRwcml2YXRlOiB0cnVlLFxyXG5cdFx0XHRcdFx0XHRhZGRVc2VySWRzOiBbdXNlci5pZF0sXHJcblx0XHRcdFx0XHRcdGN1c3RvbURhdGE6IHsgbGFzdE1lc3NhZ2U6ICcnLCBtZW1iZXJzIH1cclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHQuY2F0Y2goZXJyID0+IHtcclxuXHRcdFx0XHRcdFx0YWxlcnRFcnJvcignRXJyb3Igb24gY3JlYXRpbmcgcHJpdmF0ZSByb29tcycsIGVycik7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdH0pXHJcblx0XHQuY2F0Y2goZXJyID0+IGFsZXJ0RXJyb3IoJ0Vycm9yIG9uIGdldHRpbmcgYWxsIHJvb21zJywgZXJyKSk7XHJcbn07XHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCAqIGFzIHR5cGVzIGZyb20gJy4uL2NvbnN0YW50cyc7XHJcblxyXG5leHBvcnQgY29uc3QgYWRkRW1vamkgPSAoZW1vamksIG1lc3NhZ2UpID0+IChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcclxuXHRkaXNwYXRjaCh7IHR5cGU6IHR5cGVzLkFERF9FTU9KSSB9KTtcclxuXHRyZXR1cm4gYCR7bWVzc2FnZX0ke2Vtb2ppLm5hdGl2ZX1gO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHNvcnRNZW1iZXJzID0gKGJ5LCB2YWx1ZSkgPT4ge1xyXG5cdHJldHVybiB7IHR5cGU6IHR5cGVzLlNPUlRfTUVNQkVSUywgYnksIHZhbHVlIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZmlsdGVyUm9vbXMgPSAobmFtZSwgc3RhdHVzLCBpc1ByaXZhdGUpID0+IHtcclxuXHRyZXR1cm4geyB0eXBlOiB0eXBlcy5GSUxURVJfUk9PTVMsIG5hbWUsIHN0YXR1cywgaXNQcml2YXRlIH07XHJcbn07XHJcbmV4cG9ydCBjb25zdCB0b2dnbGVDYWxsID0gKGNhbSA9IGZhbHNlKSA9PiB7XHJcblx0cmV0dXJuIHsgdHlwZTogdHlwZXMuVE9HR0xFX0NBTEwsIGNhbSB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHRvZ2dsZVBpY2tlciA9ICgpID0+IHtcclxuXHRyZXR1cm4geyB0eXBlOiB0eXBlcy5UT0dHTEVfUElDS0VSIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgdG9nZ2xlQ2Fyb3VzZWwgPSAoaW1hZ2VJbmRleCA9IC0xLCB3aGVyZSA9ICcnKSA9PiB7XHJcblx0cmV0dXJuIHsgdHlwZTogdHlwZXMuVE9HR0xFX0NBUk9VU0VMLCBpbWFnZUluZGV4LCB3aGVyZSB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHRvZ2dsZVVzZXJzQmFyID0gKCkgPT4ge1xyXG5cdHJldHVybiB7IHR5cGU6IHR5cGVzLlRPR0dMRV9VU0VSU19CQVIgfTtcclxufTtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IENoYXRNYW5hZ2VyLCBUb2tlblByb3ZpZGVyIH0gZnJvbSAnQHB1c2hlci9jaGF0a2l0LWNsaWVudCc7XHJcbmltcG9ydCB7IHRva2VuVXJsLCBpbnN0YW5jZUxvY2F0b3IsIGtleSB9IGZyb20gJy4uL2NvbmZpZyc7XHJcbmltcG9ydCB7IEhtYWNTSEExIH0gZnJvbSAnY3J5cHRvLWpzJztcclxuXHJcbmltcG9ydCAqIGFzIHR5cGVzIGZyb20gJy4uL2NvbnN0YW50cyc7XHJcbmltcG9ydCB7IGFsZXJ0RXJyb3IgfSBmcm9tICcuLi91dGlscyc7XHJcblxyXG5pbXBvcnQgeyBjcmVhdGVQcml2YXRlUm9vbSwgZ2V0Um9vbXMgfSBmcm9tICcuL3Jvb21zJztcclxuaW1wb3J0IHsgZmlsdGVyUm9vbXMgfSBmcm9tICcuL2NvbnRyb2xzJztcclxuXHJcbmV4cG9ydCBjb25zdCBzaWduT3V0ID0gKCkgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG5cdGNvbnN0IGN1cnJlbnRVc2VyID0gZ2V0U3RhdGUoKS5jdXJyZW50VXNlcjtcclxuXHRkaXNwYXRjaCh7IHR5cGU6IHR5cGVzLlNJR05fT1VUIH0pO1xyXG5cdGN1cnJlbnRVc2VyLmRpc2Nvbm5lY3QoKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBzaWduVXAgPSAobmFtZSwgZW1haWwsIHBhc3N3b3JkKSA9PiAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiB7XHJcblx0Y29uc3QgY2hhdGtpdCA9IGdldFN0YXRlKCkuY2hhdGtpdDtcclxuXHRjb25zdCBpZCA9IEhtYWNTSEExKGAke2VtYWlsfUAhPyM/JHtwYXNzd29yZH1gLCBrZXkpLnRvU3RyaW5nKCk7XHJcblx0Y29uc3QgYXZhdGFyVVJMID0gYGh0dHBzOi8vYXZhdGFycy5kaWNlYmVhci5jb20vdjIvYXZhdGFhYXJzLyR7bmFtZX0uc3ZnP29wdGlvbnNbZXllc11bXT1zcXVpbnQmb3B0aW9uc1tleWVicm93XVtdPXJhaXNlZCZvcHRpb25zW21vdXRoXVtdPXNtaWxlYDtcclxuXHJcblx0Y2hhdGtpdFxyXG5cdFx0LmNyZWF0ZVVzZXIoeyBpZCwgbmFtZSwgYXZhdGFyVVJMIH0pXHJcblx0XHQudGhlbigoKSA9PiBhbGVydCgnVXNlciBjcmVhdGVkIHN1Y2Nlc3NmdWxseScpKVxyXG5cdFx0LmNhdGNoKGVyciA9PiBhbGVydEVycm9yKCdFcnJvciBvbiBzaWduIHVwJywgZXJyKSk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3Qgc2lnbkluID0gKGVtYWlsLCBwYXNzd29yZCkgPT4ge1xyXG5cdHJldHVybiAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiB7XHJcblx0XHRjb25zdCBjaGF0a2l0ID0gZ2V0U3RhdGUoKS5jaGF0a2l0O1xyXG5cdFx0Y29uc3QgaWQgPSBIbWFjU0hBMShgJHtlbWFpbH1AIT8jPyR7cGFzc3dvcmR9YCwga2V5KS50b1N0cmluZygpO1xyXG5cclxuXHRcdGNoYXRraXRcclxuXHRcdFx0LmdldFVzZXIoeyBpZCB9KVxyXG5cdFx0XHQudGhlbigoKSA9PiBkaXNwYXRjaCh7IHR5cGU6IHR5cGVzLlNJR05fSU4sIHVzZXJJZDogaWQgfSkpXHJcblx0XHRcdC5jYXRjaChlcnIgPT4gYWxlcnRFcnJvcignRXJyb3Igb24gc2lnbiBpbicsIGVycikpO1xyXG5cdH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgY29ubmVjdCA9IHVzZXJJZCA9PiAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiB7XHJcblx0Y29uc3QgY2hhdE1hbmFnZXIgPSBuZXcgQ2hhdE1hbmFnZXIoe1xyXG5cdFx0aW5zdGFuY2VMb2NhdG9yLFxyXG5cdFx0dXNlcklkLFxyXG5cdFx0dG9rZW5Qcm92aWRlcjogbmV3IFRva2VuUHJvdmlkZXIoeyB1cmw6IHRva2VuVXJsIH0pXHJcblx0fSk7XHJcblx0Y2hhdE1hbmFnZXJcclxuXHRcdC5jb25uZWN0KHtcclxuXHRcdFx0b25Sb29tVXBkYXRlZDogcm9vbSA9PiB7XHJcblx0XHRcdFx0ZGlzcGF0Y2goeyB0eXBlOiB0eXBlcy5VUERBVEVfUk9PTSwgcm9vbSB9KTtcclxuXHRcdFx0fSxcclxuXHRcdFx0b25BZGRlZFRvUm9vbTogcm9vbSA9PiB7XHJcblx0XHRcdFx0aWYgKHJvb20uaXNQcml2YXRlKSB7XHJcblx0XHRcdFx0XHRjb25zdCBjdXJyZW50VXNlciA9IGdldFN0YXRlKCkuY3VycmVudFVzZXI7XHJcblx0XHRcdFx0XHRkaXNwYXRjaChnZXRSb29tcyhjdXJyZW50VXNlcikpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSxcclxuXHRcdFx0b25QcmVzZW5jZUNoYW5nZWQ6ICgpID0+IHtcclxuXHRcdFx0XHRjb25zdCB7IG5hbWUsIHN0YXR1cywgaXNQcml2YXRlIH0gPSBnZXRTdGF0ZSgpLnJvb21GaWx0ZXI7XHJcblx0XHRcdFx0ZGlzcGF0Y2goZmlsdGVyUm9vbXMobmFtZSwgc3RhdHVzLCBpc1ByaXZhdGUpKTtcclxuXHRcdFx0fVxyXG5cdFx0fSlcclxuXHRcdC50aGVuKGN1cnJlbnRVc2VyID0+IHtcclxuXHRcdFx0ZGlzcGF0Y2goeyB0eXBlOiB0eXBlcy5DT05ORUNULCBjdXJyZW50VXNlciB9KTtcclxuXHRcdFx0ZGlzcGF0Y2goZ2V0Um9vbXMoY3VycmVudFVzZXIpKTtcclxuXHRcdH0pXHJcblx0XHQudGhlbigoKSA9PiB7XHJcblx0XHRcdGNvbnN0IGNoYXRraXQgPSBnZXRTdGF0ZSgpLmNoYXRraXQ7XHJcblx0XHRcdGNoYXRraXRcclxuXHRcdFx0XHQuZ2V0VXNlcnMoKVxyXG5cdFx0XHRcdC50aGVuKHVzZXJzID0+IHtcclxuXHRcdFx0XHRcdHVzZXJzLmZvckVhY2godXNlciA9PiBkaXNwYXRjaChjcmVhdGVQcml2YXRlUm9vbSh1c2VyKSkpO1xyXG5cdFx0XHRcdH0pXHJcblx0XHRcdFx0LmNhdGNoKGVyciA9PiBhbGVydEVycm9yKCdFcnJvciBvbiBnZXR0aW5nIGFsbCB1c2VycycsIGVycikpO1xyXG5cdFx0fSlcclxuXHRcdC5jYXRjaChlcnIgPT4gYWxlcnRFcnJvcignRXJyb3Igb24gY29ubmVjdGlvbicsIGVycikpO1xyXG59O1xyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuZXhwb3J0IHsgc2lnbk91dCwgc2lnblVwLCBzaWduSW4sIGNvbm5lY3QgfSBmcm9tICcuL2F1dGhlbnRpY2F0aW9uJztcclxuZXhwb3J0IHsgZ3JhbnRQZXJtaXNzaW9uLCBzaG93Tm90aWZpY2F0aW9uVG9hc3QgfSBmcm9tICcuL25vdGlmaWNhdGlvbic7XHJcbmV4cG9ydCB7IGdldFJvb21zLCBlbnRlclJvb20sIGNyZWF0ZVJvb20gfSBmcm9tICcuL3Jvb21zJztcclxuXHJcbmV4cG9ydCB7XHJcblx0dHlwaW5nTWVzc2FnZSxcclxuXHRzZW5kTWVzc2FnZSxcclxuXHRzZW5kTmV3cyxcclxuXHRmZXRjaExhc3RNZXNzYWdlLFxyXG5cdGxvYWRNb3JlTWVzc2FnZXNcclxufSBmcm9tICcuL21lc3NhZ2VzJztcclxuXHJcbmV4cG9ydCB7XHJcblx0YWRkRW1vamksXHJcblx0c29ydE1lbWJlcnMsXHJcblx0ZmlsdGVyUm9vbXMsXHJcblx0dG9nZ2xlQ2FsbCxcclxuXHR0b2dnbGVQaWNrZXIsXHJcblx0dG9nZ2xlQ2Fyb3VzZWwsXHJcblx0dG9nZ2xlVXNlcnNCYXJcclxufSBmcm9tICcuL2NvbnRyb2xzJztcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBdXRoSW5wdXQocHJvcHMpIHtcclxuXHRjb25zdCB7IHR5cGUsIGlkLCB2YWx1ZSwgcGxhY2Vob2xkZXIsIGljb24gfSA9IHByb3BzO1xyXG5cdGNvbnN0IG9uQ2hhbmdlID0gZXZlbnQgPT4gcHJvcHMub25DaGFuZ2UoZXZlbnQpO1xyXG5cdHJldHVybiAoXHJcblx0XHQ8ZGl2IGNsYXNzTmFtZT0nZm9ybS1ncm91cCc+XHJcblx0XHRcdDxpbnB1dFxyXG5cdFx0XHRcdHR5cGU9e3R5cGV9XHJcblx0XHRcdFx0bmFtZT17dHlwZX1cclxuXHRcdFx0XHRpZD17aWR9XHJcblx0XHRcdFx0Y2xhc3NOYW1lPSdmb3JtLWNvbnRyb2wnXHJcblx0XHRcdFx0dmFsdWU9e3ZhbHVlfVxyXG5cdFx0XHRcdHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cclxuXHRcdFx0XHRvbkNoYW5nZT17b25DaGFuZ2V9XHJcblx0XHRcdFx0cmVxdWlyZWRcclxuXHRcdFx0Lz5cclxuXHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBpY29uJz5cclxuXHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zJz57aWNvbn08L2k+XHJcblx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRoaXJkUGFydHkoKSB7XHJcblx0cmV0dXJuIChcclxuXHRcdDxkaXYgY2xhc3NOYW1lPSd0aGlyZC1wYXJ0eSc+XHJcblx0XHRcdDxidXR0b24gY2xhc3NOYW1lPSdidG4gaXRlbSBiZy1ibHVlJz5cclxuXHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zJz5wYWdlczwvaT5cclxuXHRcdFx0PC9idXR0b24+XHJcblx0XHRcdDxidXR0b24gY2xhc3NOYW1lPSdidG4gaXRlbSBiZy10ZWFsJz5cclxuXHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zJz5wYXJ0eV9tb2RlPC9pPlxyXG5cdFx0XHQ8L2J1dHRvbj5cclxuXHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBpdGVtIGJnLXB1cnBsZSc+XHJcblx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyc+d2hhdHNob3Q8L2k+XHJcblx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXNpZGUoeyB0bywgdGl0bGUsIGNvbnRlbnQgfSkge1xyXG5cdHJldHVybiAoXHJcblx0XHQ8ZGl2IGNsYXNzTmFtZT0nYXNpZGUnPlxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29udGFpbmVyJz5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29sLW1kLTEyJz5cclxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdwcmVmZXJlbmNlJz5cclxuXHRcdFx0XHRcdFx0PGgyPnt0aXRsZX08L2gyPlxyXG5cdFx0XHRcdFx0XHQ8cD57Y29udGVudH08L3A+XHJcblx0XHRcdFx0XHRcdDxMaW5rIHRvPXt0b30gY2xhc3NOYW1lPSdidG4gYnV0dG9uJz5cclxuXHRcdFx0XHRcdFx0XHR7dG8gPT09ICcvJyA/ICfEkMSDbmcgbmjhuq1wJyA6ICfEkMSDbmcga8OtJ31cclxuXHRcdFx0XHRcdFx0PC9MaW5rPlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cblxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlRGlzcGF0Y2ggfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5cbmltcG9ydCB7IHNpZ25JbiB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xuaW1wb3J0IEF1dGhJbnB1dCBmcm9tICcuL0F1dGhJbnB1dCc7XG5pbXBvcnQgVGhpcmRQYXJ0eSBmcm9tICcuL1RoaXJkUGFydHknO1xuaW1wb3J0IEFzaWRlIGZyb20gJy4vQXNpZGUnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTaWduSW4oKSB7XG5cdGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcblx0Y29uc3QgW3VzZXJJbmZvLCBzZXRVc2VySW5mb10gPSB1c2VTdGF0ZSh7IGVtYWlsOiAnJywgcGFzc3dvcmQ6ICcnIH0pO1xuXG5cdGNvbnN0IG9uQ2hhbmdlID0gZXZlbnQgPT4ge1xuXHRcdGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcblx0XHRjb25zdCB7IG5hbWUsIHZhbHVlIH0gPSB0YXJnZXQ7XG5cdFx0c2V0VXNlckluZm8oeyAuLi51c2VySW5mbywgW25hbWVdOiB2YWx1ZSB9KTtcblx0fTtcblxuXHRjb25zdCBvblN1Ym1pdCA9IGV2ZW50ID0+IHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSB1c2VySW5mbztcblxuXHRcdGlmIChlbWFpbC50cmltKCkgJiYgcGFzc3dvcmQudHJpbSgpKVxuXHRcdFx0ZGlzcGF0Y2goc2lnbkluKGVtYWlsLCBwYXNzd29yZCwgaGlzdG9yeSkpO1xuXHR9O1xuXG5cdHJldHVybiAoXG5cdFx0PGRpdiBjbGFzc05hbWU9J2FwcCc+XG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nbWFpbiBzaWduLWluJz5cblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3N0YXJ0Jz5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29udGFpbmVyJz5cblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb2wtbWQtMTInPlxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29udGVudCc+XG5cdFx0XHRcdFx0XHRcdFx0PGgxPlNpZ24gaW4gUXVhbkNoYXQ8L2gxPlxuXHRcdFx0XHRcdFx0XHRcdDxUaGlyZFBhcnR5IC8+XG5cdFx0XHRcdFx0XHRcdFx0PHA+U+G7rSBk4bulbmcgdMOgaSBraG/huqNuIGVtYWlsIMSRw6MgxJHEg25nIGvDrTo8L3A+XG5cdFx0XHRcdFx0XHRcdFx0PGZvcm0gb25TdWJtaXQ9e29uU3VibWl0fT5cblx0XHRcdFx0XHRcdFx0XHRcdDxBdXRoSW5wdXRcblx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZT0nZW1haWwnXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlkPSdpbnB1dEVtYWlsJ1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR2YWx1ZT17dXNlckluZm8uZW1haWx9XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHBsYWNlaG9sZGVyPSdlbWFpbEBkb21haW4uY29tJ1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRpY29uPSdtYWlsX291dGxpbmUnXG5cdFx0XHRcdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXtvbkNoYW5nZX1cblx0XHRcdFx0XHRcdFx0XHRcdC8+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8QXV0aElucHV0XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU9J3Bhc3N3b3JkJ1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZD0naW5wdXRQYXNzd29yZCdcblx0XHRcdFx0XHRcdFx0XHRcdFx0dmFsdWU9e3VzZXJJbmZvLnBhc3N3b3JkfVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRwbGFjZWhvbGRlcj0nTeG6rXQga2jhuql1J1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRpY29uPSdsb2NrX291dGxpbmUnXG5cdFx0XHRcdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXtvbkNoYW5nZX1cblx0XHRcdFx0XHRcdFx0XHRcdC8+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU9J3N1Ym1pdCdcblx0XHRcdFx0XHRcdFx0XHRcdFx0Y2xhc3NOYW1lPSdidG4gYnV0dG9uJ1xuXHRcdFx0XHRcdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0XHRcdFx0XHTEkMSDbmcgTmjhuq1wXG5cdFx0XHRcdFx0XHRcdFx0XHQ8L2J1dHRvbj5cblx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjYWxsb3V0Jz5cblx0XHRcdFx0XHRcdFx0XHRcdFx0PHNwYW4+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Q2jGsGEgY8OzIHTDoGkga2hv4bqjbj8gJm5ic3A7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0PExpbmsgdG89Jy9zaWduLXVwJz5U4bqhbyBuZ2F5PC9MaW5rPlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8L3NwYW4+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHRcdFx0XHQ8L2Zvcm0+XG5cdFx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0PC9kaXY+XG5cdFx0XHQ8QXNpZGVcblx0XHRcdFx0dG89Jy9zaWduLXVwJ1xuXHRcdFx0XHR0aXRsZT0nSGVsbG8sIEZyaWVuZCEnXG5cdFx0XHRcdGNvbnRlbnQ9J05o4bqtcCB0aMO0bmcgdGluIHTDoGkga2hv4bqjbiB2w6AgYuG6r3QgxJHhuqd1XG5cdFx0XHRcdFx0XHQgaMOgbmggdHLDrG5oIHbhu5tpIFF1YW5DaGF0IG5nYXkgbsOgby4nXG5cdFx0XHQvPlxuXHRcdDwvZGl2PlxuXHQpO1xufVxuXG4vKiBlc2xpbnQtZW5hYmxlICovXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xyXG5cclxuaW1wb3J0IHsgc2lnblVwIH0gZnJvbSAnLi4vLi4vYWN0aW9ucyc7XHJcbmltcG9ydCBBdXRoSW5wdXQgZnJvbSAnLi9BdXRoSW5wdXQnO1xyXG5pbXBvcnQgVGhpcmRQYXJ0eSBmcm9tICcuL1RoaXJkUGFydHknO1xyXG5pbXBvcnQgQXNpZGUgZnJvbSAnLi9Bc2lkZSc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTaWduVXAoKSB7XHJcblx0Y29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG5cdGNvbnN0IFt1c2VySW5mbywgc2V0VXNlckluZm9dID0gdXNlU3RhdGUoe1xyXG5cdFx0bmFtZTogJycsXHJcblx0XHRlbWFpbDogJycsXHJcblx0XHRwYXNzd29yZDogJydcclxuXHR9KTtcclxuXHJcblx0Y29uc3Qgb25DaGFuZ2UgPSBldmVudCA9PiB7XHJcblx0XHRjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XHJcblx0XHRjb25zdCB7IG5hbWUsIHZhbHVlIH0gPSB0YXJnZXQ7XHJcblx0XHRzZXRVc2VySW5mbyh7IC4uLnVzZXJJbmZvLCBbbmFtZV06IHZhbHVlIH0pO1xyXG5cdH07XHJcblxyXG5cdGNvbnN0IG9uU3VibWl0ID0gZXZlbnQgPT4ge1xyXG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdGNvbnN0IHsgbmFtZSwgZW1haWwsIHBhc3N3b3JkIH0gPSB1c2VySW5mbztcclxuXHJcblx0XHRpZiAobmFtZS50cmltKCkgJiYgZW1haWwudHJpbSgpICYmIHBhc3N3b3JkLnRyaW0oKSkge1xyXG5cdFx0XHRkaXNwYXRjaChzaWduVXAobmFtZSwgZW1haWwsIHBhc3N3b3JkKSk7XHJcblx0XHRcdHNldFVzZXJJbmZvKHsgbmFtZTogJycsIGVtYWlsOiAnJywgcGFzc3dvcmQ6ICcnIH0pO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdHJldHVybiAoXHJcblx0XHQ8ZGl2IGNsYXNzTmFtZT0nYXBwJz5cclxuXHRcdFx0PEFzaWRlXHJcblx0XHRcdFx0dG89Jy8nXHJcblx0XHRcdFx0dGl0bGU9J1dlbGNvbWUgQmFjayEnXHJcblx0XHRcdFx0Y29udGVudD0nxJDhu4MgZ2nhu68ga+G6v3QgbuG7kWkgduG7m2kgYuG6oW4gYsOoLCB2dWkgbMOybmcgc+G7rSBk4bulbmdcclxuXHRcdFx0XHRcdFx0IHRow7RuZyB0aW4gdMOgaSBraG/huqNuIG3DoCBi4bqhbiDEkcOjIMSRxINuZyBrw60gLidcclxuXHRcdFx0Lz5cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J21haW4gc2lnbi11cCc+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3N0YXJ0Jz5cclxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29sLW1kLTEyJz5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29udGVudCc+XHJcblx0XHRcdFx0XHRcdFx0XHQ8aDE+VOG6oW8gdMOgaSBraG/huqNuPC9oMT5cclxuXHRcdFx0XHRcdFx0XHRcdDxUaGlyZFBhcnR5IC8+XHJcblx0XHRcdFx0XHRcdFx0XHQ8cD5T4butIGThu6VuZyBlbWFpbCBj4bunYSBi4bqhbiDEkeG7gyDEkcSDbmcga8OtOjwvcD5cclxuXHRcdFx0XHRcdFx0XHRcdDxmb3JtIGNsYXNzTmFtZT0nc2lnbnVwJyBvblN1Ym1pdD17b25TdWJtaXR9PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nZm9ybS1wYXJlbnQnPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxBdXRoSW5wdXRcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU9J25hbWUnXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZD0naW5wdXROYW1lJ1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dmFsdWU9e3VzZXJJbmZvLm5hbWV9XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwbGFjZWhvbGRlcj0nVMOqbiBuZ8aw4budaSBkw7luZydcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGljb249J3BlcnNvbl9vdXRsaW5lJ1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0b25DaGFuZ2U9e29uQ2hhbmdlfVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0PEF1dGhJbnB1dFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZT0nZW1haWwnXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZD0naW5wdXRFbWFpbCdcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHZhbHVlPXt1c2VySW5mby5lbWFpbH1cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHBsYWNlaG9sZGVyPSfEkOG7i2EgY2jhu4kgRW1haWwnXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpY29uPSdtYWlsX291dGxpbmUnXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRvbkNoYW5nZT17b25DaGFuZ2V9XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxBdXRoSW5wdXRcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlPSdwYXNzd29yZCdcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZD0naW5wdXRQYXNzd29yZCdcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR2YWx1ZT17dXNlckluZm8ucGFzc3dvcmR9XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0cGxhY2Vob2xkZXI9J03huq10IGto4bqpdSdcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpY29uPSdsb2NrX291dGxpbmUnXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0b25DaGFuZ2U9e29uQ2hhbmdlfVxyXG5cdFx0XHRcdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZT0nc3VibWl0J1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT0nYnRuIGJ1dHRvbidcclxuXHRcdFx0XHRcdFx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdMSQxINuZyBrw61cclxuXHRcdFx0XHRcdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjYWxsb3V0Jz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8c3Bhbj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdMSQw6MgY8OzIHTDoGkga2hv4bqjbj8gJm5ic3A7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8TGluayB0bz0nLyc+xJDEg25nIE5o4bqtcDwvTGluaz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8L3NwYW4+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0PC9mb3JtPlxyXG5cdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgU2lnbkluIH0gZnJvbSAnLi9TaWduSW4nO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFNpZ25VcCB9IGZyb20gJy4uL0F1dGgvU2lnblVwJztcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5vdEZvdW5kKCkge1xyXG5cdHJldHVybiAoXHJcblx0XHQ8ZGl2IGNsYXNzTmFtZT0nbm90LWZvdW5kJz5cclxuXHRcdFx0PHN2ZyB3aWR0aD0nMzgwcHgnIGhlaWdodD0nNTAwcHgnIHZpZXdCb3g9JzAgMCA4MzcgMTA0NSc+XHJcblx0XHRcdFx0PGdcclxuXHRcdFx0XHRcdGlkPSdQYWdlLTEnXHJcblx0XHRcdFx0XHRzdHJva2U9J25vbmUnXHJcblx0XHRcdFx0XHRzdHJva2VXaWR0aD17MX1cclxuXHRcdFx0XHRcdGZpbGw9J25vbmUnXHJcblx0XHRcdFx0XHRmaWxsUnVsZT0nZXZlbm9kZCdcclxuXHRcdFx0XHQ+XHJcblx0XHRcdFx0XHQ8cGF0aFxyXG5cdFx0XHRcdFx0XHRkPSdNMzUzLDkgTDYyNi42NjQwMjgsMTcwIEw2MjYuNjY0MDI4LDQ4NyBMMzUzLDY0MiBMNzkuMzM1OTcyNCw0ODcgTDc5LjMzNTk3MjQsMTcwIEwzNTMsOSBaJ1xyXG5cdFx0XHRcdFx0XHRpZD0nUG9seWdvbi0xJ1xyXG5cdFx0XHRcdFx0XHRzdHJva2U9JyMwMDdGQjInXHJcblx0XHRcdFx0XHRcdHN0cm9rZVdpZHRoPXs2fVxyXG5cdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHRcdDxwYXRoXHJcblx0XHRcdFx0XHRcdGQ9J003OC41LDUyOSBMMTQ3LDU2OS4xODY0MTQgTDE0Nyw2NDguMzExMjE2IEw3OC41LDY4NyBMMTAsNjQ4LjMxMTIxNiBMMTAsNTY5LjE4NjQxNCBMNzguNSw1MjkgWidcclxuXHRcdFx0XHRcdFx0aWQ9J1BvbHlnb24tMidcclxuXHRcdFx0XHRcdFx0c3Ryb2tlPScjRUY0QTVCJ1xyXG5cdFx0XHRcdFx0XHRzdHJva2VXaWR0aD17Nn1cclxuXHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHQ8cGF0aFxyXG5cdFx0XHRcdFx0XHRkPSdNNzczLDE4NiBMODI3LDIxNy41Mzg3MDUgTDgyNywyNzkuNjM2NjUxIEw3NzMsMzEwIEw3MTksMjc5LjYzNjY1MSBMNzE5LDIxNy41Mzg3MDUgTDc3MywxODYgWidcclxuXHRcdFx0XHRcdFx0aWQ9J1BvbHlnb24tMydcclxuXHRcdFx0XHRcdFx0c3Ryb2tlPScjNzk1RDlDJ1xyXG5cdFx0XHRcdFx0XHRzdHJva2VXaWR0aD17Nn1cclxuXHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHQ8cGF0aFxyXG5cdFx0XHRcdFx0XHRkPSdNNjM5LDUyOSBMNzczLDYwNy44NDY3NjEgTDc3Myw3NjMuMDkxNjI3IEw2MzksODM5IEw1MDUsNzYzLjA5MTYyNyBMNTA1LDYwNy44NDY3NjEgTDYzOSw1MjkgWidcclxuXHRcdFx0XHRcdFx0aWQ9J1BvbHlnb24tNCdcclxuXHRcdFx0XHRcdFx0c3Ryb2tlPScjRjI3NzNGJ1xyXG5cdFx0XHRcdFx0XHRzdHJva2VXaWR0aD17Nn1cclxuXHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHQ8cGF0aFxyXG5cdFx0XHRcdFx0XHRkPSdNMjgxLDgwMSBMMzgzLDg2MS4wMjUyNzYgTDM4Myw5NzkuMjExNjkgTDI4MSwxMDM3IEwxNzksOTc5LjIxMTY5IEwxNzksODYxLjAyNTI3NiBMMjgxLDgwMSBaJ1xyXG5cdFx0XHRcdFx0XHRpZD0nUG9seWdvbi01J1xyXG5cdFx0XHRcdFx0XHRzdHJva2U9JyMzNkI0NTUnXHJcblx0XHRcdFx0XHRcdHN0cm9rZVdpZHRoPXs2fVxyXG5cdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHQ8L2c+XHJcblx0XHRcdDwvc3ZnPlxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nbm90LWZvdW5kLWNvbnRlbnQnPlxyXG5cdFx0XHRcdDxoMT40MDQ8L2gxPlxyXG5cdFx0XHRcdDxwPktow7RuZyB0w6xtIHRo4bqleSB0cmFuZyBi4bqhbiB5w6p1IGPhuqd1PC9wPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdidXR0b25zLWNvbic+XHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nYWN0aW9uLWxpbmstd3JhcCc+XHJcblx0XHRcdFx0XHRcdDxMaW5rIHRvPScvJz5W4buBIHRyYW5nIGNo4bunPC9MaW5rPlxyXG5cdFx0XHRcdFx0XHQ8YSBocmVmPSdodHRwczovL2dpdGh1Yi5jb20vMTg1MjAzMzknIHRhcmdldD0nX2JsYW5rJz5cclxuXHRcdFx0XHRcdFx0XHRMacOqbiBo4buHXHJcblx0XHRcdFx0XHRcdDwvYT5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVNlbGVjdG9yLCB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IHsgc2lnbk91dCwgZmlsdGVyUm9vbXMgfSBmcm9tICcuLi8uLi9hY3Rpb25zJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5hdmlnYXRpb24oKSB7XHJcblx0Y29uc3QgeyByb29tRmlsdGVyLCBjdXJyZW50VXNlciB9ID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUpO1xyXG5cdGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcclxuXHJcblx0Y29uc3QgeyBpc1ByaXZhdGUgfSA9IHJvb21GaWx0ZXI7XHJcblx0Y29uc3Qgb25TaWduT3V0ID0gKCkgPT4gZGlzcGF0Y2goc2lnbk91dCgpKTtcclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxkaXYgY2xhc3NOYW1lPSduYXZpZ2F0aW9uJz5cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J2NvbnRhaW5lcic+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2luc2lkZSc+XHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nbmF2IG5hdi10YWIgbWVudSc+XHJcblx0XHRcdFx0XHRcdDxidXR0b24gY2xhc3NOYW1lPSdidG4nPlxyXG5cdFx0XHRcdFx0XHRcdDxpbWdcclxuXHRcdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT0nYXZhdGFyLXhsJ1xyXG5cdFx0XHRcdFx0XHRcdFx0c3JjPXtjdXJyZW50VXNlci5hdmF0YXJVUkx9XHJcblx0XHRcdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0XHRcdDxhXHJcblx0XHRcdFx0XHRcdFx0dHlwZT0nYnV0dG9uJ1xyXG5cdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT17YCR7aXNQcml2YXRlICYmICdhY3RpdmUnfWB9XHJcblx0XHRcdFx0XHRcdFx0b25DbGljaz17KCkgPT4gZGlzcGF0Y2goZmlsdGVyUm9vbXMoJycsIDAsIHRydWUpKX1cclxuXHRcdFx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMnPmFjY291bnRfY2lyY2xlPC9pPlxyXG5cdFx0XHRcdFx0XHQ8L2E+XHJcblx0XHRcdFx0XHRcdDxhXHJcblx0XHRcdFx0XHRcdFx0dHlwZT0nYnV0dG9uJ1xyXG5cdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT17YCR7IWlzUHJpdmF0ZSAmJiAnYWN0aXZlJ30gZi1ncm93MWB9XHJcblx0XHRcdFx0XHRcdFx0b25DbGljaz17KCkgPT4gZGlzcGF0Y2goZmlsdGVyUm9vbXMoJycsIDAsIGZhbHNlKSl9XHJcblx0XHRcdFx0XHRcdD5cclxuXHRcdFx0XHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zIGFjdGl2ZSc+XHJcblx0XHRcdFx0XHRcdFx0XHRjaGF0X2J1YmJsZV9vdXRsaW5lXHJcblx0XHRcdFx0XHRcdFx0PC9pPlxyXG5cdFx0XHRcdFx0XHQ8L2E+XHJcblx0XHRcdFx0XHRcdDxidXR0b24gY2xhc3NOYW1lPSdidG4gbW9kZSc+XHJcblx0XHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyc+YnJpZ2h0bmVzc18yPC9pPlxyXG5cdFx0XHRcdFx0XHQ8L2J1dHRvbj5cclxuXHRcdFx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBwb3dlcicgb25DbGljaz17b25TaWduT3V0fT5cclxuXHRcdFx0XHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zJz5wb3dlcl9zZXR0aW5nc19uZXc8L2k+XHJcblx0XHRcdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgT3ZlcmxheVRyaWdnZXIsIFRvb2x0aXAgfSBmcm9tICdyZWFjdC1ib290c3RyYXAnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXZhdGFyKHsgbmFtZSwgdHlwZSwgdG9vbHRpcCA9ICd0b3AnLCBzaXplIH0pIHtcclxuXHRjb25zdCBhdmF0YXJTaXplID0gIXNpemUgPyAnYXZhdGFyLW1kJyA6IGBhdmF0YXItJHtzaXplfWA7XHJcblx0dmFyIGF2YXRhckFQSSA9ICdodHRwczovL2F2YXRhcnMuZGljZWJlYXIuY29tL3YyJztcclxuXHJcblx0aWYgKHR5cGUgPT09ICdyb29tJykge1xyXG5cdFx0YXZhdGFyQVBJID0gYCR7YXZhdGFyQVBJfS9qZGVudGljb24vJHtuYW1lfS5zdmdgO1xyXG5cdH0gZWxzZSBpZiAodHlwZSA9PT0gJ3VzZXInKSB7XHJcblx0XHR2YXIgb3B0aW9ucyA9IHsgZXllczogJ3NxdWludCcsIGV5ZWJyb3c6ICdyYWlzZWQnLCBtb3V0aDogJ3NtaWxlJyB9O1xyXG5cdFx0b3B0aW9ucyA9IE9iamVjdC5rZXlzKG9wdGlvbnMpLnJlZHVjZSgocmVzLCBrZXkpID0+IHtcclxuXHRcdFx0cmV0dXJuIGAke3Jlc31vcHRpb25zWyR7a2V5fV1bXT0ke29wdGlvbnNba2V5XX0mYDtcclxuXHRcdH0sIFtdKTtcclxuXHRcdGF2YXRhckFQSSA9IGAke2F2YXRhckFQSX0vYXZhdGFhYXJzLyR7bmFtZX0uc3ZnPyR7b3B0aW9uc31gO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxPdmVybGF5VHJpZ2dlciBwbGFjZW1lbnQ9e3Rvb2x0aXB9IG92ZXJsYXk9ezxUb29sdGlwPntuYW1lfTwvVG9vbHRpcD59PlxyXG5cdFx0XHQ8aW1nIGNsYXNzTmFtZT17YXZhdGFyU2l6ZX0gc3JjPXthdmF0YXJBUEl9IGFsdD17bmFtZX0gLz5cclxuXHRcdDwvT3ZlcmxheVRyaWdnZXI+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IsIHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xyXG5cclxuaW1wb3J0IHsgdG9nZ2xlQ2FsbCwgdG9nZ2xlVXNlcnNCYXIgfSBmcm9tICcuLi8uLi9hY3Rpb25zJztcclxuaW1wb3J0IEF2YXRhciBmcm9tICcuLi9BdmF0YXInO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVG9wQmFyKCkge1xyXG5cdGNvbnN0IHsgcm9vbUFjdGl2ZSB9ID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUpO1xyXG5cdGNvbnN0IHsgaWQsIG5hbWUsIHN0YXR1cywgaXNQcml2YXRlIH0gPSByb29tQWN0aXZlO1xyXG5cdGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcclxuXHJcblx0Y29uc3Qgb25TaG93U3RhdHVzID0gc3RhdHVzID0+IHtcclxuXHRcdGlmIChpc1ByaXZhdGUpIHN0YXR1cyA9IHN0YXR1cyA9PT0gJ29ubGluZScgPyAnT25saW5lJyA6ICdPZmZsaW5lJztcclxuXHRcdGVsc2Ugc3RhdHVzID0gJ09ubGluZSc7XHJcblx0XHRyZXR1cm4gYMSQYW5nICR7c3RhdHVzfWA7XHJcblx0fTtcclxuXHJcblx0Y29uc3Qgb25QaG9uZUNoYXQgPSAoKSA9PiB7XHJcblx0XHRpZiAoaWQpIGRpc3BhdGNoKHRvZ2dsZUNhbGwoKSk7XHJcblx0fTtcclxuXHRjb25zdCBvblZpZGVvQ2hhdCA9ICgpID0+IHtcclxuXHRcdGlmIChpZCkgZGlzcGF0Y2godG9nZ2xlQ2FsbCh0cnVlKSk7XHJcblx0fTtcclxuXHRjb25zdCBvblNob3dNZW1iZXJzID0gKCkgPT4ge1xyXG5cdFx0aWYgKGlkKSBkaXNwYXRjaCh0b2dnbGVVc2Vyc0JhcigpKTtcclxuXHR9O1xyXG5cclxuXHRyZXR1cm4gKFxyXG5cdFx0PGRpdiBjbGFzc05hbWU9J3RvcCc+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb2wtbWQtMTInPlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2luc2lkZSc+XHJcblx0XHRcdFx0XHRcdDxBdmF0YXJcclxuXHRcdFx0XHRcdFx0XHRuYW1lPXtuYW1lfVxyXG5cdFx0XHRcdFx0XHRcdHR5cGU9e2lzUHJpdmF0ZSA/ICd1c2VyJyA6ICdyb29tJ31cclxuXHRcdFx0XHRcdFx0XHR0b29sdGlwPSdsZWZ0J1xyXG5cdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nc3RhdHVzJz5cclxuXHRcdFx0XHRcdFx0XHQ8aVxyXG5cdFx0XHRcdFx0XHRcdFx0Y2xhc3NOYW1lPXtgbWF0ZXJpYWwtaWNvbnMgJHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0aXNQcml2YXRlID8gc3RhdHVzIDogJ29ubGluZSdcclxuXHRcdFx0XHRcdFx0XHRcdH1gfVxyXG5cdFx0XHRcdFx0XHRcdD5cclxuXHRcdFx0XHRcdFx0XHRcdGZpYmVyX21hbnVhbF9yZWNvcmRcclxuXHRcdFx0XHRcdFx0XHQ8L2k+XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nZGF0YSc+XHJcblx0XHRcdFx0XHRcdFx0PGg1PntuYW1lfTwvaDU+XHJcblx0XHRcdFx0XHRcdFx0PHNwYW4+e29uU2hvd1N0YXR1cyhzdGF0dXMpfTwvc3Bhbj5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDxidXR0b25cclxuXHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9J2J0biBkLW1kLWJsb2NrIGQtbm9uZSdcclxuXHRcdFx0XHRcdFx0XHRvbkNsaWNrPXtvblBob25lQ2hhdH1cclxuXHRcdFx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWQtMzAnPlxyXG5cdFx0XHRcdFx0XHRcdFx0cGhvbmVfaW5fdGFsa1xyXG5cdFx0XHRcdFx0XHRcdDwvaT5cclxuXHRcdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0XHRcdDxidXR0b25cclxuXHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9J2J0biBkLW1kLWJsb2NrIGQtbm9uZSdcclxuXHRcdFx0XHRcdFx0XHRvbkNsaWNrPXtvblZpZGVvQ2hhdH1cclxuXHRcdFx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWQtMzYnPnZpZGVvY2FtPC9pPlxyXG5cdFx0XHRcdFx0XHQ8L2J1dHRvbj5cclxuXHRcdFx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0bicgb25DbGljaz17b25TaG93TWVtYmVyc30+XHJcblx0XHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBtZC0zMCc+aW5mbzwvaT5cclxuXHRcdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQ8L2Rpdj5cclxuXHQpO1xyXG59XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgVXNlckNvbnRyb2xzIH0gZnJvbSAnQGFuZHlldC9zaW1wbGV3ZWJydGMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMb2NhbE9wdGlvbnMoeyBjaGlsZHJlbiB9KSB7XG5cdHJldHVybiAoXG5cdFx0PFVzZXJDb250cm9sc1xuXHRcdFx0cmVuZGVyPXsoe1xuXHRcdFx0XHRpc011dGVkLFxuXHRcdFx0XHRpc1BhdXNlZCxcblx0XHRcdFx0bXV0ZSxcblx0XHRcdFx0dW5tdXRlLFxuXHRcdFx0XHRyZXN1bWVWaWRlbyxcblx0XHRcdFx0cGF1c2VWaWRlb1xuXHRcdFx0fSkgPT4gKFxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nb3B0aW9ucyc+XG5cdFx0XHRcdFx0PGJ1dHRvblxuXHRcdFx0XHRcdFx0Y2xhc3NOYW1lPSdidG4gb3B0aW9uJ1xuXHRcdFx0XHRcdFx0b25DbGljaz17KCkgPT5cblx0XHRcdFx0XHRcdFx0aXNQYXVzZWQgPyByZXN1bWVWaWRlbygpIDogcGF1c2VWaWRlbygpXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBtZC0zMCc+XG5cdFx0XHRcdFx0XHRcdHtpc1BhdXNlZCA/ICdwbGF5X2Fycm93JyA6ICdwYXVzZSd9XG5cdFx0XHRcdFx0XHQ8L2k+XG5cdFx0XHRcdFx0PC9idXR0b24+XG5cdFx0XHRcdFx0e2NoaWxkcmVufVxuXHRcdFx0XHRcdDxidXR0b25cblx0XHRcdFx0XHRcdGNsYXNzTmFtZT0nYnRuIG9wdGlvbidcblx0XHRcdFx0XHRcdG9uQ2xpY2s9eygpID0+IChpc011dGVkID8gdW5tdXRlKCkgOiBtdXRlKCkpfVxuXHRcdFx0XHRcdD5cblx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWQtMzAnPlxuXHRcdFx0XHRcdFx0XHR7aXNNdXRlZCA/ICd2b2x1bWVfb2ZmJyA6ICd2b2x1bWVfdXAnfVxuXHRcdFx0XHRcdFx0PC9pPlxuXHRcdFx0XHRcdDwvYnV0dG9uPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdCl9XG5cdFx0Lz5cblx0KTtcbn1cbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IHtcclxuXHRSZXF1ZXN0RGlzcGxheU1lZGlhLFxyXG5cdFJlcXVlc3RVc2VyTWVkaWEsXHJcblx0TWVkaWFDb250cm9sc1xyXG59IGZyb20gJ0BhbmR5ZXQvc2ltcGxld2VicnRjJztcclxuXHJcbmltcG9ydCB7IHRvZ2dsZUNhbGwgfSBmcm9tICcuLi8uLi9hY3Rpb25zJztcclxuaW1wb3J0IExvY2FsT3B0aW9ucyBmcm9tICcuL0xvY2FsT3B0aW9ucyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBPcHRpb25zKHsgbG9jYWxWaWRlb3MsIGxvY2FsU2NyZWVuIH0pIHtcclxuXHRjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XHJcblx0cmV0dXJuIChcclxuXHRcdDxMb2NhbE9wdGlvbnM+XHJcblx0XHRcdHtsb2NhbFZpZGVvcyAmJiBsb2NhbFZpZGVvcy5sZW5ndGggPyAoXHJcblx0XHRcdFx0PE1lZGlhQ29udHJvbHNcclxuXHRcdFx0XHRcdG1lZGlhPXtsb2NhbFZpZGVvc1swXX1cclxuXHRcdFx0XHRcdGF1dG9SZW1vdmVcclxuXHRcdFx0XHRcdHJlbmRlcj17KHsgcmVtb3ZlIH0pID0+IChcclxuXHRcdFx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBvcHRpb24nIG9uQ2xpY2s9e3JlbW92ZX0+XHJcblx0XHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBtZC0zMCc+dmlkZW9jYW1fb2ZmPC9pPlxyXG5cdFx0XHRcdFx0XHQ8L2J1dHRvbj5cclxuXHRcdFx0XHRcdCl9XHJcblx0XHRcdFx0Lz5cclxuXHRcdFx0KSA6IChcclxuXHRcdFx0XHQ8UmVxdWVzdFVzZXJNZWRpYVxyXG5cdFx0XHRcdFx0dmlkZW9cclxuXHRcdFx0XHRcdGF1ZGlvXHJcblx0XHRcdFx0XHRyZW5kZXI9e2dldFVzZXJNZWRpYSA9PiAoXHJcblx0XHRcdFx0XHRcdDxidXR0b24gY2xhc3NOYW1lPSdidG4gb3B0aW9uJyBvbkNsaWNrPXtnZXRVc2VyTWVkaWF9PlxyXG5cdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWQtMzAnPnZpZGVvY2FtPC9pPlxyXG5cdFx0XHRcdFx0XHQ8L2J1dHRvbj5cclxuXHRcdFx0XHRcdCl9XHJcblx0XHRcdFx0Lz5cclxuXHRcdFx0KX1cclxuXHRcdFx0PGJ1dHRvblxyXG5cdFx0XHRcdGNsYXNzTmFtZT0nYnRuIG9wdGlvbiBjYWxsLWVuZCdcclxuXHRcdFx0XHRvbkNsaWNrPXsoKSA9PiBkaXNwYXRjaCh0b2dnbGVDYWxsKCkpfVxyXG5cdFx0XHQ+XHJcblx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBtZC0zMCc+Y2FsbF9lbmQ8L2k+XHJcblx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHR7bG9jYWxTY3JlZW4gPyAoXHJcblx0XHRcdFx0PE1lZGlhQ29udHJvbHNcclxuXHRcdFx0XHRcdG1lZGlhPXtsb2NhbFNjcmVlbn1cclxuXHRcdFx0XHRcdGF1dG9SZW1vdmVcclxuXHRcdFx0XHRcdHJlbmRlcj17KHsgc3RvcFNoYXJpbmcgfSkgPT4gKFxyXG5cdFx0XHRcdFx0XHQ8YnV0dG9uIGNsYXNzTmFtZT0nYnRuIG9wdGlvbicgb25DbGljaz17c3RvcFNoYXJpbmd9PlxyXG5cdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWQtMzAnPlxyXG5cdFx0XHRcdFx0XHRcdFx0c3RvcF9zY3JlZW5fc2hhcmVcclxuXHRcdFx0XHRcdFx0XHQ8L2k+XHJcblx0XHRcdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0KX1cclxuXHRcdFx0XHQvPlxyXG5cdFx0XHQpIDogKFxyXG5cdFx0XHRcdDxSZXF1ZXN0RGlzcGxheU1lZGlhXHJcblx0XHRcdFx0XHRyZW5kZXI9e2dldERpc3BsYXlNZWRpYSA9PiAoXHJcblx0XHRcdFx0XHRcdDxidXR0b25cclxuXHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9J2J0biBvcHRpb24nXHJcblx0XHRcdFx0XHRcdFx0b25DbGljaz17Z2V0RGlzcGxheU1lZGlhfVxyXG5cdFx0XHRcdFx0XHQ+XHJcblx0XHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBtZC0zMCc+c2NyZWVuX3NoYXJlPC9pPlxyXG5cdFx0XHRcdFx0XHQ8L2J1dHRvbj5cclxuXHRcdFx0XHRcdCl9XHJcblx0XHRcdFx0Lz5cclxuXHRcdFx0KX1cclxuXHRcdDwvTG9jYWxPcHRpb25zPlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciwgdXNlRGlzcGF0Y2ggfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5cbmltcG9ydCB7IHRvZ2dsZUNhbGwgfSBmcm9tICcuLi8uLi9hY3Rpb25zJztcbmltcG9ydCBBdmF0YXIgZnJvbSAnLi4vQXZhdGFyJztcbmltcG9ydCBPcHRpb25zIGZyb20gJy4vT3B0aW9ucyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENhbGxTdGF0dXMoeyB2YWx1ZSB9KSB7XG5cdGNvbnN0IHsgbmFtZSwgaXNQcml2YXRlIH0gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS5yb29tQWN0aXZlKTtcblx0Y29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuXG5cdGNvbnN0IGF2YXRhclR5cGUgPSBpc1ByaXZhdGUgPyAndXNlcicgOiAncm9vbSc7XG5cdGNvbnN0IG9uQ2xvc2VDYWxsID0gKCkgPT4gZGlzcGF0Y2godG9nZ2xlQ2FsbCgpKTtcblxuXHRyZXR1cm4gKFxuXHRcdDxkaXYgY2xhc3NOYW1lPSdjb250ZW50Jz5cblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29sLW1kLTEyJz5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0naW5zaWRlJz5cblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdwYW5lbCc+XG5cdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdwYXJ0aWNpcGFudCc+XG5cdFx0XHRcdFx0XHRcdFx0PEF2YXRhclxuXHRcdFx0XHRcdFx0XHRcdFx0bmFtZT17bmFtZX1cblx0XHRcdFx0XHRcdFx0XHRcdHR5cGU9e2F2YXRhclR5cGV9XG5cdFx0XHRcdFx0XHRcdFx0XHR0b29sdGlwPSdib3R0b20nXG5cdFx0XHRcdFx0XHRcdFx0XHRzaXplPSd4eGwnXG5cdFx0XHRcdFx0XHRcdFx0Lz5cblx0XHRcdFx0XHRcdFx0XHQ8c3Bhbj57dmFsdWV9PC9zcGFuPlxuXHRcdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHRcdFx0PE9wdGlvbnMgLz5cblx0XHRcdFx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBiYWNrJyBvbkNsaWNrPXtvbkNsb3NlQ2FsbH0+XG5cdFx0XHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBtZC0yNCc+Y2hhdDwvaT5cblx0XHRcdFx0XHRcdFx0PC9idXR0b24+XG5cdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L2Rpdj5cblx0XHQ8L2Rpdj5cblx0KTtcbn1cblxuLyogZXNsaW50LWVuYWJsZSAqL1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVNlbGVjdG9yLCB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IE5ld1dpbmRvdyBmcm9tICdyZWFjdC1uZXctd2luZG93JztcclxuaW1wb3J0IHtcclxuXHRSb29tLFxyXG5cdFZpZGVvLFxyXG5cdFByb3ZpZGVyLFxyXG5cdENvbm5lY3RlZCxcclxuXHRHcmlkTGF5b3V0LFxyXG5cdENvbm5lY3RpbmcsXHJcblx0RGlzY29ubmVjdGVkLFxyXG5cdFJlcXVlc3RVc2VyTWVkaWEsXHJcblx0UmVtb3RlQXVkaW9QbGF5ZXJcclxufSBmcm9tICdAYW5keWV0L3NpbXBsZXdlYnJ0Yyc7XHJcblxyXG5pbXBvcnQgeyBrZXksIFNXUlRDX0NPTkZJR19VUkwgfSBmcm9tICcuLi8uLi9jb25maWcnO1xyXG5pbXBvcnQgeyB0b2dnbGVDYWxsIH0gZnJvbSAnLi4vLi4vYWN0aW9ucyc7XHJcblxyXG5pbXBvcnQgQ2FsbFN0YXR1cyBmcm9tICcuL0NhbGxTdGF0dXMnO1xyXG5pbXBvcnQgT3B0aW9ucyBmcm9tICcuL09wdGlvbnMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVmlkZW9DYWxsKCkge1xyXG5cdGNvbnN0IHsgcm9vbUFjdGl2ZSwgdmlkZW9DYWxsIH0gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZSk7XHJcblx0Y29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG5cclxuXHRjb25zdCB7IGlkLCBuYW1lIH0gPSByb29tQWN0aXZlO1xyXG5cdGNvbnN0IG9uVW5sb2FkID0gKCkgPT4gZGlzcGF0Y2godG9nZ2xlQ2FsbCgpKTtcclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxOZXdXaW5kb3cgdGl0bGU9e25hbWV9IG9uVW5sb2FkPXtvblVubG9hZH0+XHJcblx0XHRcdDxsaW5rXHJcblx0XHRcdFx0aHJlZj0naHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9pY29uP2ZhbWlseT1NYXRlcmlhbCtJY29ucydcclxuXHRcdFx0XHRyZWw9J3N0eWxlc2hlZXQnXHJcblx0XHRcdD48L2xpbms+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjYWxsJz5cclxuXHRcdFx0XHQ8UHJvdmlkZXIgY29uZmlnVXJsPXtTV1JUQ19DT05GSUdfVVJMfT5cclxuXHRcdFx0XHRcdDxDb25uZWN0aW5nPlxyXG5cdFx0XHRcdFx0XHQ8Q2FsbFN0YXR1cyB2YWx1ZT0nxJBhbmcga+G6v3QgbuG7kWknIC8+XHJcblx0XHRcdFx0XHQ8L0Nvbm5lY3Rpbmc+XHJcblx0XHRcdFx0XHQ8RGlzY29ubmVjdGVkPlxyXG5cdFx0XHRcdFx0XHQ8Q2FsbFN0YXR1cyB2YWx1ZT0nS2jDtG5nIGPDsyBr4bq/dCBu4buRaScgLz5cclxuXHRcdFx0XHRcdDwvRGlzY29ubmVjdGVkPlxyXG5cdFx0XHRcdFx0PENvbm5lY3RlZD5cclxuXHRcdFx0XHRcdFx0PFJlbW90ZUF1ZGlvUGxheWVyIC8+XHJcblx0XHRcdFx0XHRcdDxSZXF1ZXN0VXNlck1lZGlhIGF1ZGlvIGF1dG8gLz5cclxuXHRcdFx0XHRcdFx0e3ZpZGVvQ2FsbC5jYW0gJiYgPFJlcXVlc3RVc2VyTWVkaWEgdmlkZW8gYXV0byAvPn1cclxuXHRcdFx0XHRcdFx0PFJvb20gcm9vbUFkZHJlc3M9e2lkfSBuYW1lPXtuYW1lfSBwYXNzd29yZD17a2V5fT5cclxuXHRcdFx0XHRcdFx0XHR7KHsgbG9jYWxNZWRpYSwgcmVtb3RlTWVkaWEgfSkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdFx0Y29uc3QgcmVtb3RlVmlkZW9zID0gcmVtb3RlTWVkaWEuZmlsdGVyKFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRtID0+IG0ua2luZCA9PT0gJ3ZpZGVvJ1xyXG5cdFx0XHRcdFx0XHRcdFx0KTtcclxuXHRcdFx0XHRcdFx0XHRcdGNvbnN0IGxvY2FsVmlkZW9zID0gbG9jYWxNZWRpYS5maWx0ZXIoXHJcblx0XHRcdFx0XHRcdFx0XHRcdG0gPT4gbS5raW5kID09PSAndmlkZW8nICYmIG0uc2hhcmVkXHJcblx0XHRcdFx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0XHRcdFx0Y29uc3QgbG9jYWxTY3JlZW5zID0gbG9jYWxWaWRlb3MuZmlsdGVyKFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRtID0+IG0uc2NyZWVuQ2FwdHVyZVxyXG5cdFx0XHRcdFx0XHRcdFx0KTtcclxuXHRcdFx0XHRcdFx0XHRcdHJldHVybiAoXHJcblx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSd2aWRlby1jaGF0Jz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8R3JpZExheW91dFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Y2xhc3NOYW1lPSd3LTEwMCdcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGl0ZW1zPXtbXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGxvY2FsVmlkZW9zWzBdLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQuLi5sb2NhbFNjcmVlbnMsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdC4uLnJlbW90ZVZpZGVvc1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XX1cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlbmRlckNlbGw9e2l0ZW0gPT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0aXRlbSAmJiA8VmlkZW8gbWVkaWE9e2l0ZW19IC8+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8T3B0aW9uc1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bG9jYWxWaWRlb3M9e2xvY2FsVmlkZW9zfVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bG9jYWxTY3JlZW49e2xvY2FsU2NyZWVuc1swXX1cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0XHRcdFx0fX1cclxuXHRcdFx0XHRcdFx0PC9Sb29tPlxyXG5cdFx0XHRcdFx0PC9Db25uZWN0ZWQ+XHJcblx0XHRcdFx0PC9Qcm92aWRlcj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQ8L05ld1dpbmRvdz5cclxuXHQpO1xyXG59XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IsIHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xyXG5pbXBvcnQgeyBmaWx0ZXJSb29tcyB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRmlsdGVyUm9vbXMoeyBwbGFjZWhvbGRlciB9KSB7XHJcblx0Y29uc3QgeyBuYW1lLCBzdGF0dXMsIGlzUHJpdmF0ZSB9ID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUucm9vbUZpbHRlcik7XHJcblx0Y29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG5cclxuXHRjb25zdCBbc2VhcmNoVGV4dCwgc2V0U2VhcmNoVGV4dF0gPSB1c2VTdGF0ZSgnJyk7XHJcblx0Y29uc3Qgb25DaGFuZ2UgPSBldmVudCA9PiB7XHJcblx0XHRjb25zdCByb29tTmFtZSA9IGV2ZW50LnRhcmdldC52YWx1ZS50b0xvd2VyQ2FzZSgpLnRyaW0oKTtcclxuXHRcdHNldFNlYXJjaFRleHQoZXZlbnQudGFyZ2V0LnZhbHVlKTtcclxuXHRcdGRpc3BhdGNoKGZpbHRlclJvb21zKHJvb21OYW1lLCBzdGF0dXMsIGlzUHJpdmF0ZSkpO1xyXG5cdH07XHJcblxyXG5cdHVzZUVmZmVjdCgoKSA9PiBzZXRTZWFyY2hUZXh0KCcnKSwgW2lzUHJpdmF0ZV0pO1xyXG5cdHJldHVybiAoXHJcblx0XHQ8ZGl2IGlkPSdyb29tLWZpbHRlcic+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdzZWFyY2gnPlxyXG5cdFx0XHRcdDxmb3JtIGNsYXNzTmFtZT0nZm9ybS1pbmxpbmUgcG9zaXRpb24tcmVsYXRpdmUnPlxyXG5cdFx0XHRcdFx0PGlucHV0XHJcblx0XHRcdFx0XHRcdHR5cGU9J3NlYXJjaCdcclxuXHRcdFx0XHRcdFx0Y2xhc3NOYW1lPSdmb3JtLWNvbnRyb2wnXHJcblx0XHRcdFx0XHRcdHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cclxuXHRcdFx0XHRcdFx0b25DaGFuZ2U9e29uQ2hhbmdlfVxyXG5cdFx0XHRcdFx0XHR2YWx1ZT17c2VhcmNoVGV4dH1cclxuXHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHQ8YnV0dG9uIHR5cGU9J2J1dHRvbicgY2xhc3NOYW1lPSdidG4gYnRuLWxpbmsgbG9vcCc+XHJcblx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMnPnNlYXJjaDwvaT5cclxuXHRcdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdDwvZm9ybT5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdsaXN0LWdyb3VwIHNvcnQnPlxyXG5cdFx0XHRcdDxidXR0b25cclxuXHRcdFx0XHRcdGNsYXNzTmFtZT17YGJ0biAke3N0YXR1cyA9PT0gMCAmJiAnYWN0aXZlIHNob3cnfWB9XHJcblx0XHRcdFx0XHRvbkNsaWNrPXsoKSA9PiBkaXNwYXRjaChmaWx0ZXJSb29tcyhuYW1lLCAwLCBpc1ByaXZhdGUpKX1cclxuXHRcdFx0XHQ+XHJcblx0XHRcdFx0XHRU4bqldCBj4bqjXHJcblx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0PGJ1dHRvblxyXG5cdFx0XHRcdFx0Y2xhc3NOYW1lPXtgYnRuICR7c3RhdHVzID09PSAxICYmICdhY3RpdmUgc2hvdyd9YH1cclxuXHRcdFx0XHRcdG9uQ2xpY2s9eygpID0+IGRpc3BhdGNoKGZpbHRlclJvb21zKG5hbWUsIDEsIGlzUHJpdmF0ZSkpfVxyXG5cdFx0XHRcdD5cclxuXHRcdFx0XHRcdHtpc1ByaXZhdGUgPyAnT25saW5lJyA6ICfEkMOjIMSR4buNYyd9XHJcblx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0PGJ1dHRvblxyXG5cdFx0XHRcdFx0Y2xhc3NOYW1lPXtgYnRuICR7c3RhdHVzID09PSAtMSAmJiAnYWN0aXZlIHNob3cnfWB9XHJcblx0XHRcdFx0XHRvbkNsaWNrPXsoKSA9PiBkaXNwYXRjaChmaWx0ZXJSb29tcyhuYW1lLCAtMSwgaXNQcml2YXRlKSl9XHJcblx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0e2lzUHJpdmF0ZSA/ICdPZmZsaW5lJyA6ICdDaMawYSDEkeG7jWMnfVxyXG5cdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IsIHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xyXG5pbXBvcnQgeyBEcm9wZG93bkJ1dHRvbiwgRHJvcGRvd24gfSBmcm9tICdyZWFjdC1ib290c3RyYXAnO1xyXG5pbXBvcnQgeyBzb3J0TWVtYmVycyB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU29ydE1lbWJlcnMoKSB7XHJcblx0Y29uc3QgdXNlclNvcnQgPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS51c2VyU29ydCk7XHJcblx0Y29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG5cclxuXHRjb25zdCBbdGl0bGUsIHNldFRpdGxlXSA9IHVzZVN0YXRlKCdT4bqvcCB44bq/cCB0aGVvJyk7XHJcblx0Y29uc3QgeyBieSwgdmFsdWUgfSA9IHVzZXJTb3J0O1xyXG5cclxuXHRyZXR1cm4gKFxyXG5cdFx0PERyb3Bkb3duQnV0dG9uIHRpdGxlPXt0aXRsZX0gc2l6ZT0nc20nIHZhcmlhbnQ9J2xpZ2h0Jz5cclxuXHRcdFx0PERyb3Bkb3duLkl0ZW1cclxuXHRcdFx0XHRhcz0nYnV0dG9uJ1xyXG5cdFx0XHRcdG9uQ2xpY2s9eygpID0+IHtcclxuXHRcdFx0XHRcdHNldFRpdGxlKCfEkGFuZyBPbmxpbmUnKTtcclxuXHRcdFx0XHRcdGRpc3BhdGNoKHNvcnRNZW1iZXJzKCdzdGF0dXMnLCAxKSk7XHJcblx0XHRcdFx0fX1cclxuXHRcdFx0PlxyXG5cdFx0XHRcdMSQYW5nIE9ubGluZVxyXG5cdFx0XHRcdHtieSA9PSAnc3RhdHVzJyAmJiB2YWx1ZSA9PSAxICYmIChcclxuXHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWwtYXV0byc+Y2hlY2s8L2k+XHJcblx0XHRcdFx0KX1cclxuXHRcdFx0PC9Ecm9wZG93bi5JdGVtPlxyXG5cdFx0XHQ8RHJvcGRvd24uSXRlbVxyXG5cdFx0XHRcdGFzPSdidXR0b24nXHJcblx0XHRcdFx0b25DbGljaz17KCkgPT4ge1xyXG5cdFx0XHRcdFx0c2V0VGl0bGUoJ8SQYW5nIE9mZmxpbmUnKTtcclxuXHRcdFx0XHRcdGRpc3BhdGNoKHNvcnRNZW1iZXJzKCdzdGF0dXMnLCAtMSkpO1xyXG5cdFx0XHRcdH19XHJcblx0XHRcdD5cclxuXHRcdFx0XHTEkGFuZyBPZmZsaW5lXHJcblx0XHRcdFx0e2J5ID09ICdzdGF0dXMnICYmIHZhbHVlID09IC0xICYmIChcclxuXHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWwtYXV0byc+Y2hlY2s8L2k+XHJcblx0XHRcdFx0KX1cclxuXHRcdFx0PC9Ecm9wZG93bi5JdGVtPlxyXG5cdFx0XHQ8RHJvcGRvd24uRGl2aWRlciAvPlxyXG5cdFx0XHQ8RHJvcGRvd24uSXRlbVxyXG5cdFx0XHRcdGFzPSdidXR0b24nXHJcblx0XHRcdFx0b25DbGljaz17KCkgPT4ge1xyXG5cdFx0XHRcdFx0c2V0VGl0bGUoJ0EgxJHhur9uIFonKTtcclxuXHRcdFx0XHRcdGRpc3BhdGNoKHNvcnRNZW1iZXJzKCduYW1lJywgMSkpO1xyXG5cdFx0XHRcdH19XHJcblx0XHRcdD5cclxuXHRcdFx0XHRBIMSR4bq/biBaXHJcblx0XHRcdFx0e2J5ID09ICduYW1lJyAmJiB2YWx1ZSA9PSAxICYmIChcclxuXHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWwtYXV0byc+Y2hlY2s8L2k+XHJcblx0XHRcdFx0KX1cclxuXHRcdFx0PC9Ecm9wZG93bi5JdGVtPlxyXG5cdFx0XHQ8RHJvcGRvd24uSXRlbVxyXG5cdFx0XHRcdGFzPSdidXR0b24nXHJcblx0XHRcdFx0b25DbGljaz17KCkgPT4ge1xyXG5cdFx0XHRcdFx0c2V0VGl0bGUoJ1ogxJHhur9uIEEnKTtcclxuXHRcdFx0XHRcdGRpc3BhdGNoKHNvcnRNZW1iZXJzKCduYW1lJywgLTEpKTtcclxuXHRcdFx0XHR9fVxyXG5cdFx0XHQ+XHJcblx0XHRcdFx0WiDEkeG6v24gQVxyXG5cdFx0XHRcdHtieSA9PSAnbmFtZScgJiYgdmFsdWUgPT0gLTEgJiYgKFxyXG5cdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBtbC1hdXRvJz5jaGVjazwvaT5cclxuXHRcdFx0XHQpfVxyXG5cdFx0XHQ8L0Ryb3Bkb3duLkl0ZW0+XHJcblx0XHQ8L0Ryb3Bkb3duQnV0dG9uPlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgRmlsdGVyUm9vbXMgfSBmcm9tICcuL0ZpbHRlclJvb21zJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgU29ydE1lbWJlcnMgfSBmcm9tICcuL1NvcnRNZW1iZXJzJztcblxuLyogZXNsaW50LWVuYWJsZSAqL1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgTW9kYWwsIEJ1dHRvblRvb2xiYXIsIEJ1dHRvbiB9IGZyb20gJ3JlYWN0LWJvb3RzdHJhcCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEaWFsb2cocHJvcHMpIHtcclxuXHRjb25zdCBbbW9kYWxTaG93LCBzZXRNb2RhbFNob3ddID0gdXNlU3RhdGUoZmFsc2UpO1xyXG5cdGNvbnN0IHsgdHlwZSwgdGl0bGUsIGljb24sIGRpc2FibGVkLCBjaGlsZHJlbiB9ID0gcHJvcHM7XHJcblxyXG5cdGNvbnN0IG9uQ2xvc2VNb2RhbCA9ICgpID0+IHNldE1vZGFsU2hvdyhmYWxzZSk7XHJcblx0Y29uc3Qgb25TaG93TW9kYWwgPSAoKSA9PiB7XHJcblx0XHRpZiAoIWRpc2FibGVkKSBzZXRNb2RhbFNob3codHJ1ZSk7XHJcblx0fTtcclxuXHJcblx0Y29uc3Qgb25TdWJtaXQgPSBldmVudCA9PiB7XHJcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0cHJvcHMub25TdWJtaXQoKTtcclxuXHRcdG9uQ2xvc2VNb2RhbCgpO1xyXG5cdH07XHJcblxyXG5cdHJldHVybiAoXHJcblx0XHQ8QnV0dG9uVG9vbGJhcj5cclxuXHRcdFx0PEJ1dHRvblxyXG5cdFx0XHRcdGNsYXNzTmFtZT17dHlwZX1cclxuXHRcdFx0XHR2YXJpYW50PSdvdXRsaW5lLXByaW1hcnknXHJcblx0XHRcdFx0b25DbGljaz17b25TaG93TW9kYWx9XHJcblx0XHRcdD5cclxuXHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zJz57aWNvbn08L2k+XHJcblx0XHRcdDwvQnV0dG9uPlxyXG5cdFx0XHQ8TW9kYWwgY2VudGVyZWQgc2hvdz17bW9kYWxTaG93fSBvbkhpZGU9e29uQ2xvc2VNb2RhbH0+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3JlcXVlc3RzJz5cclxuXHRcdFx0XHRcdDxNb2RhbC5IZWFkZXI+XHJcblx0XHRcdFx0XHRcdDxNb2RhbC5UaXRsZT5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ndGl0bGUnPlxyXG5cdFx0XHRcdFx0XHRcdFx0PGgxPnt0aXRsZX08L2gxPlxyXG5cdFx0XHRcdFx0XHRcdFx0PGJ1dHRvblxyXG5cdFx0XHRcdFx0XHRcdFx0XHR0eXBlPSdidXR0b24nXHJcblx0XHRcdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT0nYnRuJ1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRvbkNsaWNrPXtvbkNsb3NlTW9kYWx9XHJcblx0XHRcdFx0XHRcdFx0XHQ+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMnPmNsb3NlPC9pPlxyXG5cdFx0XHRcdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDwvTW9kYWwuVGl0bGU+XHJcblx0XHRcdFx0XHQ8L01vZGFsLkhlYWRlcj5cclxuXHRcdFx0XHRcdDxNb2RhbC5Cb2R5PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29udGVudCc+XHJcblx0XHRcdFx0XHRcdFx0PGZvcm0gb25TdWJtaXQ9e29uU3VibWl0fT5cclxuXHRcdFx0XHRcdFx0XHRcdHtjaGlsZHJlbn1cclxuXHRcdFx0XHRcdFx0XHRcdDxidXR0b25cclxuXHRcdFx0XHRcdFx0XHRcdFx0dHlwZT0nc3VibWl0J1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9J2J0biBidXR0b24gdy0xMDAnXHJcblx0XHRcdFx0XHRcdFx0XHQ+XHJcblx0XHRcdFx0XHRcdFx0XHRcdHt0aXRsZX1cclxuXHRcdFx0XHRcdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdDwvZm9ybT5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHQ8L01vZGFsLkJvZHk+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvTW9kYWw+XHJcblx0XHQ8L0J1dHRvblRvb2xiYXI+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cblxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlRGlzcGF0Y2ggfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5cbmltcG9ydCBEaWFsb2cgZnJvbSAnLi9EaWFsb2cnO1xuaW1wb3J0IHsgY3JlYXRlUm9vbSB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDcmVhdGVSb29tKCkge1xuXHRjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XG5cdGNvbnN0IFtyb29tSW5mbywgc2V0Um9vbUluZm9dID0gdXNlU3RhdGUoeyBuYW1lOiAnJywgZmlyc3RNZXNzYWdlOiAnJyB9KTtcblxuXHRjb25zdCBvbkNoYW5nZSA9IGV2ZW50ID0+IHtcblx0XHRjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG5cdFx0Y29uc3QgeyBuYW1lLCB2YWx1ZSB9ID0gdGFyZ2V0O1xuXHRcdHNldFJvb21JbmZvKHsgLi4ucm9vbUluZm8sIFtuYW1lXTogdmFsdWUgfSk7XG5cdH07XG5cblx0Y29uc3Qgb25TdWJtaXQgPSAoKSA9PiB7XG5cdFx0Y29uc3QgeyBuYW1lLCBmaXJzdE1lc3NhZ2UgfSA9IHJvb21JbmZvO1xuXHRcdGlmIChuYW1lLnRyaW0oKSkge1xuXHRcdFx0ZGlzcGF0Y2goY3JlYXRlUm9vbShuYW1lLCBmaXJzdE1lc3NhZ2UpKTtcblx0XHRcdHNldFJvb21JbmZvKHsgLi4ucm9vbUluZm8sIG5hbWU6ICcnLCBmaXJzdE1lc3NhZ2U6ICcnIH0pO1xuXHRcdH1cblx0fTtcblxuXHRyZXR1cm4gKFxuXHRcdDxEaWFsb2dcblx0XHRcdHR5cGU9J2NyZWF0ZSdcblx0XHRcdGljb249J2NyZWF0ZSdcblx0XHRcdHRpdGxlPSdU4bqhbyBwaMOybmcgbeG7m2knXG5cdFx0XHRvblN1Ym1pdD17b25TdWJtaXR9XG5cdFx0PlxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J2Zvcm0tZ3JvdXAnPlxuXHRcdFx0XHQ8bGFiZWw+VMOqbiBwaMOybmc6PC9sYWJlbD5cblx0XHRcdFx0PGlucHV0XG5cdFx0XHRcdFx0dHlwZT0ndGV4dCdcblx0XHRcdFx0XHRuYW1lPSduYW1lJ1xuXHRcdFx0XHRcdHZhbHVlPXtyb29tSW5mby5uYW1lfVxuXHRcdFx0XHRcdGNsYXNzTmFtZT0nZm9ybS1jb250cm9sJ1xuXHRcdFx0XHRcdHBsYWNlaG9sZGVyPSfEkOG6t3QgdMOqbiBwaMOybmcuLi4nXG5cdFx0XHRcdFx0b25DaGFuZ2U9e29uQ2hhbmdlfVxuXHRcdFx0XHRcdHJlcXVpcmVkXG5cdFx0XHRcdC8+XG5cdFx0XHQ8L2Rpdj5cblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdmb3JtLWdyb3VwJz5cblx0XHRcdFx0PGxhYmVsPlRpbiBuaOG6r246PC9sYWJlbD5cblx0XHRcdFx0PHRleHRhcmVhXG5cdFx0XHRcdFx0bmFtZT0nZmlyc3RNZXNzYWdlJ1xuXHRcdFx0XHRcdHZhbHVlPXtyb29tSW5mby5maXJzdE1lc3NhZ2V9XG5cdFx0XHRcdFx0Y2xhc3NOYW1lPSd0ZXh0LWNvbnRyb2wnXG5cdFx0XHRcdFx0cGxhY2Vob2xkZXI9J05o4bqtcCB0aW4gbmjhuq9uIMSR4bqndSB0acOqbiBj4bunYSBi4bqhbi4uLidcblx0XHRcdFx0XHRvbkNoYW5nZT17b25DaGFuZ2V9XG5cdFx0XHRcdD48L3RleHRhcmVhPlxuXHRcdFx0PC9kaXY+XG5cdFx0PC9EaWFsb2c+XG5cdCk7XG59XG5cbi8qIGVzbGludC1lbmFibGUgKi9cbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVNlbGVjdG9yLCB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IEltYWdlVXBsb2FkZXIgZnJvbSAncmVhY3QtaW1hZ2VzLXVwbG9hZCc7XHJcblxyXG5pbXBvcnQgeyBzZW5kTWVzc2FnZSB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xyXG5pbXBvcnQgRGlhbG9nIGZyb20gJy4vRGlhbG9nJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFVwbG9hZEltYWdlKCkge1xyXG5cdGNvbnN0IHJvb21BY3RpdmUgPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS5yb29tQWN0aXZlKTtcclxuXHRjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XHJcblxyXG5cdGNvbnN0IFtwaWN0dXJlcywgc2V0UGljdHVyZXNdID0gdXNlU3RhdGUoW10pO1xyXG5cdGNvbnN0IFttZXNzYWdlLCBzZXRNZXNzYWdlXSA9IHVzZVN0YXRlKCcnKTtcclxuXHJcblx0Y29uc3Qgb25Ecm9wID0gcGljdHVyZUZpbGVzID0+IHNldFBpY3R1cmVzKHBpY3R1cmVGaWxlcyk7XHJcblx0Y29uc3Qgb25DaGFuZ2UgPSBldmVudCA9PiBzZXRNZXNzYWdlKGV2ZW50LnRhcmdldC52YWx1ZSk7XHJcblxyXG5cdGNvbnN0IG9uU3VibWl0ID0gKCkgPT4ge1xyXG5cdFx0aWYgKHBpY3R1cmVzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xyXG5cclxuXHRcdGNvbnN0IHBhcnRzID0gW107XHJcblx0XHRwaWN0dXJlcy5mb3JFYWNoKHBpYyA9PiBwYXJ0cy5wdXNoKHsgZmlsZTogcGljIH0pKTtcclxuXHJcblx0XHRpZiAobWVzc2FnZS50cmltKCkpXHJcblx0XHRcdHBhcnRzLnB1c2goeyB0eXBlOiAndGV4dC9wbGFpbicsIGNvbnRlbnQ6IG1lc3NhZ2UgfSk7XHJcblxyXG5cdFx0ZGlzcGF0Y2goc2VuZE1lc3NhZ2UocGFydHMpKTtcclxuXHRcdHNldFBpY3R1cmVzKFtdKTtcclxuXHRcdHNldE1lc3NhZ2UoJycpO1xyXG5cdH07XHJcblxyXG5cdHJldHVybiAoXHJcblx0XHQ8RGlhbG9nXHJcblx0XHRcdHR5cGU9J2F0dGFjaCdcclxuXHRcdFx0dGl0bGU9J1Row6ptIOG6o25oJ1xyXG5cdFx0XHRpY29uPSdwaG90bydcclxuXHRcdFx0b25TdWJtaXQ9e29uU3VibWl0fVxyXG5cdFx0XHRkaXNhYmxlZD17IXJvb21BY3RpdmUuaWR9XHJcblx0XHQ+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdmb3JtLWdyb3VwJz5cclxuXHRcdFx0XHQ8bGFiZWw+VGluIG5o4bqvbjo8L2xhYmVsPlxyXG5cdFx0XHRcdDxJbWFnZVVwbG9hZGVyXHJcblx0XHRcdFx0XHR3aXRoSWNvbj17dHJ1ZX1cclxuXHRcdFx0XHRcdHdpdGhQcmV2aWV3PXt0cnVlfVxyXG5cdFx0XHRcdFx0YnV0dG9uVGV4dD0nQ2jhu41uIOG6o25oIHThu6sgbcOheSdcclxuXHRcdFx0XHRcdGltZ0V4dGVuc2lvbj17WycuanBnJywgJy5qcGVnJywgJy5wbmcnLCAnLmdpZiddfVxyXG5cdFx0XHRcdFx0bWF4RmlsZVNpemU9ezUyNDI4ODB9XHJcblx0XHRcdFx0XHRvbkNoYW5nZT17b25Ecm9wfVxyXG5cdFx0XHRcdC8+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nZm9ybS1ncm91cCc+XHJcblx0XHRcdFx0PGxhYmVsPlRpbiBuaOG6r246PC9sYWJlbD5cclxuXHRcdFx0XHQ8aW5wdXRcclxuXHRcdFx0XHRcdHR5cGU9J3RleHQnXHJcblx0XHRcdFx0XHRuYW1lPSduYW1lJ1xyXG5cdFx0XHRcdFx0dmFsdWU9e21lc3NhZ2V9XHJcblx0XHRcdFx0XHRjbGFzc05hbWU9J2Zvcm0tY29udHJvbCdcclxuXHRcdFx0XHRcdHBsYWNlaG9sZGVyPSdUaMOqbSB0aW4gbmjhuq9uIHbhu4Eg4bqjbmggbsOgeS4uLidcclxuXHRcdFx0XHRcdG9uQ2hhbmdlPXtvbkNoYW5nZX1cclxuXHRcdFx0XHQvPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvRGlhbG9nPlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQ3JlYXRlUm9vbSB9IGZyb20gJy4vQ3JlYXRlUm9vbSc7XHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgVXBsb2FkSW1hZ2UgfSBmcm9tICcuL1VwbG9hZEltYWdlJztcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcbmltcG9ydCBBdmF0YXIgZnJvbSAnLi4vQXZhdGFyJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENoYXRMaXN0KHsgbWF0Y2gsIGNoYXROYW1lLCBpc09ubGluZSwgcm9vbSwgdHlwZSB9KSB7XHJcblx0Y29uc3QgeyByb29tQWN0aXZlIH0gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZSk7XHJcblx0Y29uc3QgeyBpZCwgdW5yZWFkQ291bnQsIGNyZWF0ZWRBdCwgbGFzdE1lc3NhZ2VBdCwgY3VzdG9tRGF0YSB9ID0gcm9vbTtcclxuXHJcblx0Y29uc3QgaXNBY3RpdmUgPSByb29tQWN0aXZlLmlkID09PSBpZCAmJiAnYWN0aXZlJztcclxuXHRjb25zdCBpc1JlYWQgPSB1bnJlYWRDb3VudCA+IDAgJiYgJ3VucmVhZCc7XHJcblxyXG5cdGNvbnN0IHsgbGFzdE1lc3NhZ2UgfSA9IGN1c3RvbURhdGE7XHJcblx0Y29uc3QgbGFzdE1lc3NhZ2VUaW1lID0gbmV3IERhdGUoXHJcblx0XHRsYXN0TWVzc2FnZUF0ID8gbGFzdE1lc3NhZ2VBdCA6IGNyZWF0ZWRBdFxyXG5cdCkudG9Mb2NhbGVEYXRlU3RyaW5nKCd2aS1WbicsIHtcclxuXHRcdHdlZWtkYXk6ICduYXJyb3cnLFxyXG5cdFx0eWVhcjogJzItZGlnaXQnLFxyXG5cdFx0bW9udGg6ICcyLWRpZ2l0JyxcclxuXHRcdGRheTogJzItZGlnaXQnXHJcblx0fSk7XHJcblxyXG5cdGNvbnN0IHNob3dVbnJlYWRDb3VudCA9IHVucmVhZENvdW50ID0+IHtcclxuXHRcdGlmICh1bnJlYWRDb3VudCA+IDApIHtcclxuXHRcdFx0Y29uc3QgY29sb3IgPSB1bnJlYWRDb3VudCA+IDEwID8gJ3BpbmsnIDogJ3llbGxvdyc7XHJcblx0XHRcdHJldHVybiAoXHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9e2BuZXcgYmctJHtjb2xvcn1gfT5cclxuXHRcdFx0XHRcdDxzcGFuPnt1bnJlYWRDb3VudH08L3NwYW4+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxMaW5rXHJcblx0XHRcdHRvPXtgJHttYXRjaC5wYXRofS8ke2lkfWB9XHJcblx0XHRcdGNsYXNzTmFtZT17YCR7aXNSZWFkfSAke2lzQWN0aXZlfSBzaW5nbGVgfVxyXG5cdFx0PlxyXG5cdFx0XHQ8QXZhdGFyIG5hbWU9e2NoYXROYW1lfSB0eXBlPXt0eXBlfSAvPlxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nc3RhdHVzJz5cclxuXHRcdFx0XHQ8aSBjbGFzc05hbWU9e2BtYXRlcmlhbC1pY29ucyAke2lzT25saW5lfWB9PlxyXG5cdFx0XHRcdFx0ZmliZXJfbWFudWFsX3JlY29yZFxyXG5cdFx0XHRcdDwvaT5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdkYXRhJz5cclxuXHRcdFx0XHQ8aDU+e2NoYXROYW1lfTwvaDU+XHJcblx0XHRcdFx0PHNwYW4+e2xhc3RNZXNzYWdlVGltZX08L3NwYW4+XHJcblx0XHRcdFx0PHA+e2xhc3RNZXNzYWdlID8gbGFzdE1lc3NhZ2UgOiAnQ2jGsGEgY8OzIHRpbiBuaOG6r24nfTwvcD5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHRcdHtzaG93VW5yZWFkQ291bnQodW5yZWFkQ291bnQpfVxyXG5cdFx0PC9MaW5rPlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVNlbGVjdG9yIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xyXG5cclxuaW1wb3J0IHsgb25HZXRQcml2YXRlVXNlciB9IGZyb20gJy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IENoYXRMaXN0IGZyb20gJy4vQ2hhdExpc3QnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ29udGFjdHMoeyBtYXRjaCB9KSB7XHJcblx0Y29uc3QgeyBjdXJyZW50VXNlciwgcm9vbXMsIHJvb21GaWx0ZXIgfSA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlKTtcclxuXHRyZXR1cm4gKFxyXG5cdFx0PGRpdiBjbGFzc05hbWU9J2Rpc2N1c3Npb25zJz5cclxuXHRcdFx0PGgxPkRhbmggc8OhY2ggbGnDqm4gaOG7hzwvaDE+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdsaXN0LWdyb3VwJz5cclxuXHRcdFx0XHR7cm9vbXNcclxuXHRcdFx0XHRcdC5maWx0ZXIocm9vbSA9PiB7XHJcblx0XHRcdFx0XHRcdGlmICghcm9vbS5pZCkgcmV0dXJuO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gcm9vbS5pc1ByaXZhdGU7XHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0LmZpbHRlcihyb29tID0+IHtcclxuXHRcdFx0XHRcdFx0Y29uc3QgeyByb29tTmFtZSwgcm9vbVN0YXR1cyB9ID0gb25HZXRQcml2YXRlVXNlcihcclxuXHRcdFx0XHRcdFx0XHRyb29tLFxyXG5cdFx0XHRcdFx0XHRcdGN1cnJlbnRVc2VyLmlkLFxyXG5cdFx0XHRcdFx0XHRcdHRydWVcclxuXHRcdFx0XHRcdFx0KTtcclxuXHRcdFx0XHRcdFx0aWYgKHJvb21GaWx0ZXIuc3RhdHVzID09PSAwKVxyXG5cdFx0XHRcdFx0XHRcdHJldHVybiByb29tTmFtZS5pbmRleE9mKHJvb21GaWx0ZXIubmFtZSkgIT09IC0xO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gKFxyXG5cdFx0XHRcdFx0XHRcdHJvb21OYW1lLmluZGV4T2Yocm9vbUZpbHRlci5uYW1lKSAhPT0gLTEgJiZcclxuXHRcdFx0XHRcdFx0XHRyb29tU3RhdHVzID09PSByb29tRmlsdGVyLnN0YXR1c1xyXG5cdFx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHRcdC5tYXAocm9vbSA9PiB7XHJcblx0XHRcdFx0XHRcdGNvbnN0IHsgcm9vbU5hbWUsIHJvb21TdGF0dXMgfSA9IG9uR2V0UHJpdmF0ZVVzZXIoXHJcblx0XHRcdFx0XHRcdFx0cm9vbSxcclxuXHRcdFx0XHRcdFx0XHRjdXJyZW50VXNlci5pZCxcclxuXHRcdFx0XHRcdFx0XHRmYWxzZVxyXG5cdFx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gKFxyXG5cdFx0XHRcdFx0XHRcdDxDaGF0TGlzdFxyXG5cdFx0XHRcdFx0XHRcdFx0a2V5PXtyb29tLmlkfVxyXG5cdFx0XHRcdFx0XHRcdFx0bWF0Y2g9e21hdGNofVxyXG5cdFx0XHRcdFx0XHRcdFx0Y2hhdE5hbWU9e3Jvb21OYW1lfVxyXG5cdFx0XHRcdFx0XHRcdFx0aXNPbmxpbmU9e3Jvb21TdGF0dXN9XHJcblx0XHRcdFx0XHRcdFx0XHRyb29tPXtyb29tfVxyXG5cdFx0XHRcdFx0XHRcdFx0dHlwZT0ndXNlcidcclxuXHRcdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0fSl9XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcbmltcG9ydCBDaGF0TGlzdCBmcm9tICcuL0NoYXRMaXN0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFJvb21zKHsgbWF0Y2ggfSkge1xyXG5cdGNvbnN0IHsgY3VycmVudFVzZXIsIHJvb21zLCByb29tRmlsdGVyIH0gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZSk7XHJcblx0cmV0dXJuIChcclxuXHRcdDxkaXYgY2xhc3NOYW1lPSdkaXNjdXNzaW9ucyc+XHJcblx0XHRcdDxoMT5Dw6FjIHBow7JuZyBjaGF0PC9oMT5cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J2xpc3QtZ3JvdXAnPlxyXG5cdFx0XHRcdHtyb29tc1xyXG5cdFx0XHRcdFx0LmZpbHRlcihyb29tID0+IHtcclxuXHRcdFx0XHRcdFx0aWYgKCFyb29tLmlkKSByZXR1cm47XHJcblx0XHRcdFx0XHRcdHJldHVybiAhcm9vbS5pc1ByaXZhdGU7XHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0LmZpbHRlcigoeyBuYW1lLCB1bnJlYWRDb3VudCB9KSA9PiB7XHJcblx0XHRcdFx0XHRcdGNvbnN0IHJvb21OYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xyXG5cdFx0XHRcdFx0XHRjb25zdCByb29tU3RhdHVzID0gdW5yZWFkQ291bnQgPT09IDAgPyAxIDogLTE7XHJcblxyXG5cdFx0XHRcdFx0XHRpZiAocm9vbUZpbHRlci5zdGF0dXMgPT09IDApXHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHJvb21OYW1lLmluZGV4T2Yocm9vbUZpbHRlci5uYW1lKSAhPT0gLTE7XHJcblx0XHRcdFx0XHRcdHJldHVybiAoXHJcblx0XHRcdFx0XHRcdFx0cm9vbU5hbWUuaW5kZXhPZihyb29tRmlsdGVyLm5hbWUpICE9PSAtMSAmJlxyXG5cdFx0XHRcdFx0XHRcdHJvb21TdGF0dXMgPT09IHJvb21GaWx0ZXIuc3RhdHVzXHJcblx0XHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0LnNvcnQoKGEsIGIpID0+IHtcclxuXHRcdFx0XHRcdFx0Y29uc3QgbGFzdE1lc3NhZ2VBID0gbmV3IERhdGUoYS5sYXN0TWVzc2FnZUF0KTtcclxuXHRcdFx0XHRcdFx0Y29uc3QgbGFzdE1lc3NhZ2VCID0gbmV3IERhdGUoYi5sYXN0TWVzc2FnZUF0KTtcclxuXHRcdFx0XHRcdFx0cmV0dXJuIGxhc3RNZXNzYWdlQiAtIGxhc3RNZXNzYWdlQTtcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHQubWFwKHJvb20gPT4ge1xyXG5cdFx0XHRcdFx0XHRjb25zdCB7IGlkLCBuYW1lLCB1c2VySWRzIH0gPSByb29tO1xyXG5cdFx0XHRcdFx0XHRjb25zdCBpc09ubGluZSA9XHJcblx0XHRcdFx0XHRcdFx0dXNlcklkcyAmJlxyXG5cdFx0XHRcdFx0XHRcdHVzZXJJZHMuZmluZChpZCA9PiBjdXJyZW50VXNlci5pZCA9PT0gaWQpO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gKFxyXG5cdFx0XHRcdFx0XHRcdDxDaGF0TGlzdFxyXG5cdFx0XHRcdFx0XHRcdFx0a2V5PXtpZH1cclxuXHRcdFx0XHRcdFx0XHRcdG1hdGNoPXttYXRjaH1cclxuXHRcdFx0XHRcdFx0XHRcdGNoYXROYW1lPXtuYW1lfVxyXG5cdFx0XHRcdFx0XHRcdFx0aXNPbmxpbmU9e2Ake2lzT25saW5lICYmICdvbmxpbmUnfWB9XHJcblx0XHRcdFx0XHRcdFx0XHRyb29tPXtyb29tfVxyXG5cdFx0XHRcdFx0XHRcdFx0dHlwZT0ncm9vbSdcclxuXHRcdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0fSl9XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcbmltcG9ydCB7IFNwaW5uZXIgfSBmcm9tICdyZWFjdC1ib290c3RyYXAnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUm9vbVN0YXR1cyh7IHRpdGxlIH0pIHtcclxuXHRjb25zdCB7IGlzTG9hZGluZyB9ID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUpO1xyXG5cdHJldHVybiAoXHJcblx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29sLW1kLTEyJz5cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J25vLW1lc3NhZ2VzJz5cclxuXHRcdFx0XHR7IWlzTG9hZGluZyAmJiA8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zIG1kLTQ4Jz5mb3J1bTwvaT59XHJcblx0XHRcdFx0PHA+e3RpdGxlfTwvcD5cclxuXHRcdFx0XHR7aXNMb2FkaW5nICYmIDxTcGlubmVyIGFuaW1hdGlvbj0nYm9yZGVyJyB2YXJpYW50PSdwcmltYXJ5JyAvPn1cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQ8L2Rpdj5cclxuXHQpO1xyXG59XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuXHJcbmltcG9ydCB7IEZpbHRlclJvb21zIH0gZnJvbSAnLi4vQ29udHJvbHMnO1xyXG5pbXBvcnQgeyBDcmVhdGVSb29tIH0gZnJvbSAnLi4vUG9wVXAnO1xyXG5cclxuaW1wb3J0IENvbnRhY3RzIGZyb20gJy4vQ29udGFjdHMnO1xyXG5pbXBvcnQgUm9vbXMgZnJvbSAnLi9Sb29tcyc7XHJcblxyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFJvb21TdGF0dXMgfSBmcm9tICcuL1Jvb21TdGF0dXMnO1xyXG5leHBvcnQgZnVuY3Rpb24gTGVmdFNpZGVCYXIoeyBtYXRjaCB9KSB7XHJcblx0Y29uc3QgeyBpc1ByaXZhdGUgfSA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlLnJvb21GaWx0ZXIpO1xyXG5cdHJldHVybiAoXHJcblx0XHQ8ZGl2IGNsYXNzTmFtZT0nc2lkZWJhcic+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb2wtbWQtMTInPlxyXG5cdFx0XHRcdFx0PEZpbHRlclJvb21zXHJcblx0XHRcdFx0XHRcdHBsYWNlaG9sZGVyPXtcclxuXHRcdFx0XHRcdFx0XHRpc1ByaXZhdGVcclxuXHRcdFx0XHRcdFx0XHRcdD8gJ1TDrG0ga2nhur9tIGxpw6puIGjhu4cuLi4nXHJcblx0XHRcdFx0XHRcdFx0XHQ6ICdUw6xtIGtp4bq/bSBwaMOybmcgY2hhdC4uLidcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHRcdHshaXNQcml2YXRlICYmIDxDcmVhdGVSb29tIC8+fVxyXG5cdFx0XHRcdFx0e2lzUHJpdmF0ZSA/IChcclxuXHRcdFx0XHRcdFx0PENvbnRhY3RzIG1hdGNoPXttYXRjaH0gLz5cclxuXHRcdFx0XHRcdCkgOiAoXHJcblx0XHRcdFx0XHRcdDxSb29tcyBtYXRjaD17bWF0Y2h9IC8+XHJcblx0XHRcdFx0XHQpfVxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuaW1wb3J0IEF2YXRhciBmcm9tICcuLi9BdmF0YXInO1xuaW1wb3J0IHsgU29ydE1lbWJlcnMgfSBmcm9tICcuLi9Db250cm9scyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1lbWJlcnMoeyBtYXRjaCwgYWRtaW5JZCwgaXNQcml2YXRlIH0pIHtcblx0Y29uc3QgeyBjdXJyZW50VXNlciwgcm9vbXMsIHJvb21Vc2VycywgdXNlclNvcnQgfSA9IHVzZVNlbGVjdG9yKFxuXHRcdHN0YXRlID0+IHN0YXRlXG5cdCk7XG5cblx0Y29uc3QgcHJpdmF0ZVJvb21zID0gcm9vbXNcblx0XHQuZmlsdGVyKHJvb20gPT4gcm9vbS5pc1ByaXZhdGUpXG5cdFx0Lm1hcCgoeyBpZCwgY3VzdG9tRGF0YSB9KSA9PiB7XG5cdFx0XHRjb25zdCBtZW1iZXJJZHMgPSBjdXN0b21EYXRhLm1lbWJlcnMubWFwKG1lbWJlciA9PiBtZW1iZXIuaWQpO1xuXHRcdFx0cmV0dXJuIHsgaWQsIG1lbWJlcklkcyB9O1xuXHRcdH0pO1xuXG5cdGNvbnN0IG9uU2hvd01lbWJlckRhdGEgPSAoaWQsIGNyZWF0ZWREYXRlKSA9PiB7XG5cdFx0Y3JlYXRlZERhdGUgPSBgxJDGsOG7o2MgdOG6oW8gdsOgbyB0aMOhbmcgJHtjcmVhdGVkRGF0ZX1gO1xuXHRcdGlmIChpc1ByaXZhdGUpIHJldHVybiBjcmVhdGVkRGF0ZTtcblx0XHRyZXR1cm4gYWRtaW5JZCA9PT0gaWQgPyAnUXXhuqNuIHRy4buLIHZpw6puJyA6IGNyZWF0ZWREYXRlO1xuXHR9O1xuXG5cdHJldHVybiAoXG5cdFx0PGRpdiBjbGFzc05hbWU9J2NvbnRhY3RzJz5cblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdzb3J0LW1lbWJlcnMnPlxuXHRcdFx0XHQ8aDE+XG5cdFx0XHRcdFx0VGjDoG5oIHZpw6puXG5cdFx0XHRcdFx0PGhyIC8+XG5cdFx0XHRcdDwvaDE+XG5cdFx0XHRcdDxTb3J0TWVtYmVycyAvPlxuXHRcdFx0PC9kaXY+XG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nbGlzdC1ncm91cCc+XG5cdFx0XHRcdHtyb29tVXNlcnNcblx0XHRcdFx0XHQuc29ydCgoYSwgYikgPT4ge1xuXHRcdFx0XHRcdFx0Y29uc3QgeyBieSwgdmFsdWUgfSA9IHVzZXJTb3J0O1xuXHRcdFx0XHRcdFx0aWYgKGJ5ID09ICduYW1lJykge1xuXHRcdFx0XHRcdFx0XHRjb25zdCBuYW1lQSA9IGEubmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0XHRcdFx0XHRjb25zdCBuYW1lQiA9IGIubmFtZS50b0xvd2VyQ2FzZSgpO1xuXG5cdFx0XHRcdFx0XHRcdGlmIChuYW1lQSA+IG5hbWVCKSByZXR1cm4gdmFsdWU7XG5cdFx0XHRcdFx0XHRcdGlmIChuYW1lQSA8IG5hbWVCKSByZXR1cm4gLXZhbHVlO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gMDtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoYnkgPT0gJ3N0YXR1cycpIHtcblx0XHRcdFx0XHRcdFx0Y29uc3Qgc3RhdGVBID0gYS5wcmVzZW5jZS5zdGF0ZTtcblx0XHRcdFx0XHRcdFx0Y29uc3Qgc3RhdGVCID0gYi5wcmVzZW5jZS5zdGF0ZTtcblxuXHRcdFx0XHRcdFx0XHRpZiAoc3RhdGVBID4gc3RhdGVCKSByZXR1cm4gLXZhbHVlO1xuXHRcdFx0XHRcdFx0XHRpZiAoc3RhdGVBIDwgc3RhdGVCKSByZXR1cm4gdmFsdWU7XG5cdFx0XHRcdFx0XHRcdHJldHVybiAwO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pXG5cdFx0XHRcdFx0Lm1hcCgoeyBpZCwgbmFtZSwgcHJlc2VuY2UsIGNyZWF0ZWRBdCB9KSA9PiB7XG5cdFx0XHRcdFx0XHRjb25zdCBpbmRleCA9IHByaXZhdGVSb29tcy5maW5kSW5kZXgoXG5cdFx0XHRcdFx0XHRcdCh7IG1lbWJlcklkcyB9KSA9PiB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKGN1cnJlbnRVc2VyLmlkID09PSBpZClcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybiBtZW1iZXJJZHMubGVuZ3RoID09PSAxO1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiAoXG5cdFx0XHRcdFx0XHRcdFx0XHRtZW1iZXJJZHMuaW5jbHVkZXMoY3VycmVudFVzZXIuaWQpICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRtZW1iZXJJZHMuaW5jbHVkZXMoaWQpXG5cdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0Y29uc3Qgc3RhdGUgPSBwcmVzZW5jZS5zdGF0ZTtcblx0XHRcdFx0XHRcdGNvbnN0IGNyZWF0ZWREYXRlID0gbmV3IERhdGUoXG5cdFx0XHRcdFx0XHRcdGNyZWF0ZWRBdFxuXHRcdFx0XHRcdFx0KS50b0xvY2FsZURhdGVTdHJpbmcoJ3ZpLVZOJywge1xuXHRcdFx0XHRcdFx0XHR5ZWFyOiAnMi1kaWdpdCcsXG5cdFx0XHRcdFx0XHRcdG1vbnRoOiAnbnVtZXJpYydcblx0XHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0XHRyZXR1cm4gKFxuXHRcdFx0XHRcdFx0XHQ8TGlua1xuXHRcdFx0XHRcdFx0XHRcdGtleT17aWR9XG5cdFx0XHRcdFx0XHRcdFx0dG89e2Ake21hdGNoLnBhdGh9LyR7cHJpdmF0ZVJvb21zW2luZGV4XS5pZH1gfVxuXHRcdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT0nY29udGFjdCdcblx0XHRcdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0XHRcdDxBdmF0YXIgbmFtZT17bmFtZX0gdHlwZT0ndXNlcicgLz5cblx0XHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nc3RhdHVzJz5cblx0XHRcdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT17YG1hdGVyaWFsLWljb25zICR7c3RhdGV9YH0+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGZpYmVyX21hbnVhbF9yZWNvcmRcblx0XHRcdFx0XHRcdFx0XHRcdDwvaT5cblx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nZGF0YSc+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8aDU+e25hbWV9PC9oNT5cblx0XHRcdFx0XHRcdFx0XHRcdDxwPntvblNob3dNZW1iZXJEYXRhKGlkLCBjcmVhdGVkRGF0ZSl9PC9wPlxuXHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdwZXJzb24tYWRkJz5cblx0XHRcdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMnPnBlcnNvbjwvaT5cblx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHRcdFx0PC9MaW5rPlxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9KX1cblx0XHRcdDwvZGl2PlxuXHRcdDwvZGl2PlxuXHQpO1xufVxuXG4vKiBlc2xpbnQtZW5hYmxlICovXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IsIHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xyXG5pbXBvcnQgQ2Fyb3VzZWwsIHsgTW9kYWwsIE1vZGFsR2F0ZXdheSB9IGZyb20gJ3JlYWN0LWltYWdlcyc7XHJcbmltcG9ydCB7IHRvZ2dsZUNhcm91c2VsIH0gZnJvbSAnLi4vLi4vYWN0aW9ucyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbWFnZUNhcm91c2VsKCkge1xyXG5cdGNvbnN0IHsgaW1hZ2VzLCBzaG93Q2Fyb3VzZWwgfSA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlKTtcclxuXHRjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XHJcblx0Y29uc3QgdG9nZ2xlTW9kYWwgPSAoKSA9PiBkaXNwYXRjaCh0b2dnbGVDYXJvdXNlbCgpKTtcclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxNb2RhbEdhdGV3YXk+XHJcblx0XHRcdDxNb2RhbCBvbkNsb3NlPXt0b2dnbGVNb2RhbH0+XHJcblx0XHRcdFx0PENhcm91c2VsXHJcblx0XHRcdFx0XHRjdXJyZW50SW5kZXg9e3Nob3dDYXJvdXNlbC5pbWFnZUluZGV4fVxyXG5cdFx0XHRcdFx0dmlld3M9e2ltYWdlc31cclxuXHRcdFx0XHQvPlxyXG5cdFx0XHQ8L01vZGFsPlxyXG5cdFx0PC9Nb2RhbEdhdGV3YXk+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVNlbGVjdG9yLCB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IHsgQWNjb3JkaW9uLCBDYXJkLCBCdXR0b24sIEp1bWJvdHJvbiB9IGZyb20gJ3JlYWN0LWJvb3RzdHJhcCc7XHJcblxyXG5pbXBvcnQgeyB0b2dnbGVDYXJvdXNlbCB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xyXG5pbXBvcnQgSW1hZ2VDYXJvdXNlbCBmcm9tICcuL0ltYWdlQ2Fyb3VzZWwnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW1hZ2VMaXN0KCkge1xyXG5cdGNvbnN0IHsgaW1hZ2VzLCBzaG93Q2Fyb3VzZWwgfSA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlKTtcclxuXHRjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XHJcblx0Y29uc3QgW3JvdGF0ZSwgc2V0Um90YXRlXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcblx0Y29uc3Qgb25Sb3RhdGVJY29uID0gKCkgPT4gc2V0Um90YXRlKCFyb3RhdGUpO1xyXG5cdGNvbnN0IG9uU2hvd0ltYWdlcyA9ICgpID0+IHtcclxuXHRcdGlmIChpbWFnZXMubGVuZ3RoID09PSAwKVxyXG5cdFx0XHRyZXR1cm4gKFxyXG5cdFx0XHRcdDxKdW1ib3Ryb24gY2xhc3NOYW1lPSdtLTAgdGV4dC1jZW50ZXInPlxyXG5cdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBkaXNwbGF5LTQnPlxyXG5cdFx0XHRcdFx0XHRwaG90b19zaXplX3NlbGVjdF9hY3R1YWxcclxuXHRcdFx0XHRcdDwvaT5cclxuXHRcdFx0XHRcdDxwPktow7RuZyBjw7MgaMOsbmgg4bqjbmggxJHhu4MgaGnhu4NuIHRo4buLPC9wPlxyXG5cdFx0XHRcdDwvSnVtYm90cm9uPlxyXG5cdFx0XHQpO1xyXG5cdFx0cmV0dXJuIGltYWdlcy5tYXAoKHVybCwgaW5kZXgpID0+IChcclxuXHRcdFx0PGltZ1xyXG5cdFx0XHRcdGtleT17aW5kZXh9XHJcblx0XHRcdFx0Y2xhc3NOYW1lPSdpbWctdGh1bWJuYWlsJ1xyXG5cdFx0XHRcdHNyYz17dXJsLnNyY31cclxuXHRcdFx0XHRhbHQ9J2F0dGFjaG1lbnQnXHJcblx0XHRcdFx0b25DbGljaz17KCkgPT4gZGlzcGF0Y2godG9nZ2xlQ2Fyb3VzZWwoaW5kZXgsICdJbWFnZUxpc3QnKSl9XHJcblx0XHRcdC8+XHJcblx0XHQpKTtcclxuXHR9O1xyXG5cdHVzZUVmZmVjdCgoKSA9PiB7fSwgW2ltYWdlc10pO1xyXG5cclxuXHRyZXR1cm4gKFxyXG5cdFx0PEFjY29yZGlvbj5cclxuXHRcdFx0PENhcmQ+XHJcblx0XHRcdFx0PENhcmQuSGVhZGVyPlxyXG5cdFx0XHRcdFx0PEFjY29yZGlvbi5Ub2dnbGVcclxuXHRcdFx0XHRcdFx0YXM9e0J1dHRvbn1cclxuXHRcdFx0XHRcdFx0dmFyaWFudD0nZGVmYXVsdCdcclxuXHRcdFx0XHRcdFx0ZXZlbnRLZXk9JzAnXHJcblx0XHRcdFx0XHRcdG9uQ2xpY2s9e29uUm90YXRlSWNvbn1cclxuXHRcdFx0XHRcdD5cclxuXHRcdFx0XHRcdFx04bqibmggxJHDoyBjaGlhIHPhurtcclxuXHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPXtgbWF0ZXJpYWwtaWNvbnMgJHtyb3RhdGUgJiYgJ3JvdGF0ZSd9YH0+XHJcblx0XHRcdFx0XHRcdFx0a2V5Ym9hcmRfYXJyb3dfbGVmdFxyXG5cdFx0XHRcdFx0XHQ8L2k+XHJcblx0XHRcdFx0XHQ8L0FjY29yZGlvbi5Ub2dnbGU+XHJcblx0XHRcdFx0PC9DYXJkLkhlYWRlcj5cclxuXHRcdFx0XHQ8QWNjb3JkaW9uLkNvbGxhcHNlIGV2ZW50S2V5PScwJz5cclxuXHRcdFx0XHRcdDxDYXJkLkJvZHkgY2xhc3NOYW1lPSdwLTAnPlxyXG5cdFx0XHRcdFx0XHR7b25TaG93SW1hZ2VzKCl9XHJcblx0XHRcdFx0XHRcdHtzaG93Q2Fyb3VzZWwud2hlcmUgPT09ICdJbWFnZUxpc3QnICYmIChcclxuXHRcdFx0XHRcdFx0XHQ8SW1hZ2VDYXJvdXNlbCAvPlxyXG5cdFx0XHRcdFx0XHQpfVxyXG5cdFx0XHRcdFx0PC9DYXJkLkJvZHk+XHJcblx0XHRcdFx0PC9BY2NvcmRpb24uQ29sbGFwc2U+XHJcblx0XHRcdDwvQ2FyZD5cclxuXHRcdDwvQWNjb3JkaW9uPlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgSW1hZ2VMaXN0IH0gZnJvbSAnLi9JbWFnZUxpc3QnO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIEltYWdlQ2Fyb3VzZWwgfSBmcm9tICcuL0ltYWdlQ2Fyb3VzZWwnO1xyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcblxyXG5pbXBvcnQgQXZhdGFyIGZyb20gJy4uL0F2YXRhcic7XHJcbmltcG9ydCBNZW1iZXJzIGZyb20gJy4vTWVtYmVycyc7XHJcbmltcG9ydCB7IEltYWdlTGlzdCB9IGZyb20gJy4uL0ltYWdlcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSaWdodFNpZGVCYXIoeyBtYXRjaCB9KSB7XHJcblx0Y29uc3QgeyBzaG93VXNlcnNCYXIsIHJvb21BY3RpdmUgfSA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlKTtcclxuXHRjb25zdCB7IG5hbWUsIGNyZWF0ZWRCeVVzZXJJZCwgaXNQcml2YXRlIH0gPSByb29tQWN0aXZlO1xyXG5cdGNvbnN0IGF2YXRhclR5cGUgPSBpc1ByaXZhdGUgPyAndXNlcicgOiAncm9vbSc7XHJcblx0cmV0dXJuIChcclxuXHRcdDxkaXYgY2xhc3NOYW1lPXtgc2lkZWJhciAkeyFzaG93VXNlcnNCYXIgJiYgJ2Qtbm9uZSd9YH0+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb2wtbWQtMTInPlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3Jvb20taW5mbyc+XHJcblx0XHRcdFx0XHRcdDxBdmF0YXIgbmFtZT17bmFtZX0gdHlwZT17YXZhdGFyVHlwZX0gc2l6ZT0neGwnIC8+XHJcblx0XHRcdFx0XHRcdDxoND57bmFtZX08L2g0PlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHQ8aHIgLz5cclxuXHRcdFx0XHRcdDxNZW1iZXJzXHJcblx0XHRcdFx0XHRcdG1hdGNoPXttYXRjaH1cclxuXHRcdFx0XHRcdFx0YWRtaW5JZD17Y3JlYXRlZEJ5VXNlcklkfVxyXG5cdFx0XHRcdFx0XHRpc1ByaXZhdGU9e2lzUHJpdmF0ZX1cclxuXHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PGhyIC8+XHJcblx0XHRcdFx0PEltYWdlTGlzdCAvPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQXZhdGFyIGZyb20gJy4uL0F2YXRhcic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFdyYXBwZXIoeyB1c2VyVHlwZSwgdXNlck5hbWUsIHVwZGF0ZWRBdCwgY2hpbGRyZW4gfSkge1xuXHRyZXR1cm4gKFxuXHRcdDxkaXYgY2xhc3NOYW1lPXtgbWVzc2FnZSAke3VzZXJUeXBlfWB9PlxuXHRcdFx0e3VzZXJUeXBlICE9PSAnbWUnICYmIDxBdmF0YXIgbmFtZT17dXNlck5hbWV9IHR5cGU9J3VzZXInIC8+fVxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J3RleHQtbWFpbic+XG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPXtgdGV4dC1ncm91cCAke3VzZXJUeXBlfWB9PntjaGlsZHJlbn08L2Rpdj5cblx0XHRcdFx0e3VwZGF0ZWRBdCAmJiAoXG5cdFx0XHRcdFx0PHNwYW4+XG5cdFx0XHRcdFx0XHR7bmV3IERhdGUodXBkYXRlZEF0KS50b0xvY2FsZVRpbWVTdHJpbmcoJ2VuLVVTJywge1xuXHRcdFx0XHRcdFx0XHRob3VyOiAnMi1kaWdpdCcsXG5cdFx0XHRcdFx0XHRcdG1pbnV0ZTogJzItZGlnaXQnXG5cdFx0XHRcdFx0XHR9KX1cblx0XHRcdFx0XHQ8L3NwYW4+XG5cdFx0XHRcdCl9XG5cdFx0XHQ8L2Rpdj5cblx0XHQ8L2Rpdj5cblx0KTtcbn1cblxuLyogZXNsaW50LWVuYWJsZSAqL1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBSZWFjdFBsYXllciBmcm9tICdyZWFjdC1wbGF5ZXInO1xyXG5pbXBvcnQgTWljcm9saW5rQ2FyZCBmcm9tICdAbWljcm9saW5rL3JlYWN0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExpbmtQcmV2aWV3KHsgdXJsTWF0Y2hlcyB9KSB7XHJcblx0Y29uc3QgdmlkZW9TaWduYWwgPSB7IHlvdXR1YmU6ICd3YXRjaD92PScsIGZhY2Vib29rOiAndmlkZW9zJyB9O1xyXG5cdHJldHVybiB1cmxNYXRjaGVzLm1hcCgodXJsLCBpbmRleCkgPT4ge1xyXG5cdFx0aWYgKFxyXG5cdFx0XHQodXJsLmluY2x1ZGVzKCd5b3V0dWJlJykgJiYgdXJsLmluY2x1ZGVzKHZpZGVvU2lnbmFsLnlvdXR1YmUpKSB8fFxyXG5cdFx0XHQodXJsLmluY2x1ZGVzKCdmYWNlYm9vaycpICYmIHVybC5pbmNsdWRlcyh2aWRlb1NpZ25hbC5mYWNlYm9vaykpXHJcblx0XHQpXHJcblx0XHRcdHJldHVybiAoXHJcblx0XHRcdFx0PFJlYWN0UGxheWVyXHJcblx0XHRcdFx0XHRrZXk9e2luZGV4fVxyXG5cdFx0XHRcdFx0Y2xhc3NOYW1lPSdtdC0yJ1xyXG5cdFx0XHRcdFx0dXJsPXt1cmx9XHJcblx0XHRcdFx0XHR3aWR0aD0nMTAwJSdcclxuXHRcdFx0XHRcdGhlaWdodD0nMzAwcHgnXHJcblx0XHRcdFx0XHRjb250cm9sc1xyXG5cdFx0XHRcdC8+XHJcblx0XHRcdCk7XHJcblx0XHRyZXR1cm4gPE1pY3JvbGlua0NhcmQga2V5PXtpbmRleH0gY2xhc3NOYW1lPSdtdC0yJyB1cmw9e3VybH0gLz47XHJcblx0fSk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVNlbGVjdG9yIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xyXG5pbXBvcnQgTGlua1ByZXZpZXcgZnJvbSAnLi9MaW5rUHJldmlldyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb250ZW50KHsgY3VycmVudFVzZXJOYW1lLCB0ZXh0IH0pIHtcclxuXHRjb25zdCB7IHJvb21Vc2VycyB9ID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUpO1xyXG5cdGNvbnN0IGluc2VydFRleHRBdEluZGljZXMgPSAodGV4dCwgb2JqKSA9PiB7XHJcblx0XHRyZXR1cm4gdGV4dC5yZXBsYWNlKC8uL2csIChjaGFyYWN0ZXIsIGluZGV4KSA9PiB7XHJcblx0XHRcdHJldHVybiBvYmpbaW5kZXhdID8gb2JqW2luZGV4XSArIGNoYXJhY3RlciA6IGNoYXJhY3RlcjtcclxuXHRcdH0pO1xyXG5cdH07XHJcblxyXG5cdHZhciBtZXNzYWdlVGV4dCA9IHRleHQ7XHJcblx0Y29uc3QgdXJsTWF0Y2hlcyA9IHRleHQubWF0Y2goL1xcYihodHRwfGh0dHBzKT86XFwvXFwvXFxTKy9naSkgfHwgW107XHJcblx0Y29uc3QgbWVudGlvbnMgPSB0ZXh0Lm1hdGNoKC9AW2EtekEtWjAtOV0rL2cpIHx8IFtdO1xyXG5cclxuXHRjb25zdCByb29tVXNlck5hbWVzID0gcm9vbVVzZXJzLm1hcCh1c2VyID0+IGBAJHt1c2VyLm5hbWV9YCk7XHJcblx0Y29uc3QgbWVudGlvbmVkVXNlcnMgPSBtZW50aW9ucy5maWx0ZXIodXNlcm5hbWUgPT5cclxuXHRcdHJvb21Vc2VyTmFtZXMuaW5jbHVkZXModXNlcm5hbWUpXHJcblx0KTtcclxuXHJcblx0dXJsTWF0Y2hlcy5mb3JFYWNoKGxpbmsgPT4ge1xyXG5cdFx0Y29uc3Qgc3RhcnRJbmRleCA9IHRleHQuaW5kZXhPZihsaW5rKTtcclxuXHRcdGNvbnN0IGVuZEluZGV4ID0gc3RhcnRJbmRleCArIGxpbmsubGVuZ3RoO1xyXG5cclxuXHRcdG1lc3NhZ2VUZXh0ID0gaW5zZXJ0VGV4dEF0SW5kaWNlcyhtZXNzYWdlVGV4dCwge1xyXG5cdFx0XHRbc3RhcnRJbmRleF06IGA8YSBjbGFzcz1cImVtYmVkZGVkLWxpbmtcIiBocmVmPVwiJHtsaW5rfVwiIHRhcmdldD1cIl9ibGFua1wiPmAsXHJcblx0XHRcdFtlbmRJbmRleF06ICc8L2E+J1xyXG5cdFx0fSk7XHJcblx0fSk7XHJcblxyXG5cdG1lbnRpb25lZFVzZXJzLmZvckVhY2godXNlciA9PiB7XHJcblx0XHRjb25zdCBzdGFydEluZGV4ID0gbWVzc2FnZVRleHQuaW5kZXhPZih1c2VyKTtcclxuXHRcdGNvbnN0IGVuZEluZGV4ID0gc3RhcnRJbmRleCArIHVzZXIubGVuZ3RoO1xyXG5cdFx0Y29uc3QgaXNNZSA9IGN1cnJlbnRVc2VyTmFtZSA9PT0gdXNlci5zdWJzdHJpbmcoMSkgPyAnZGFuZ2VyJyA6ICdpbmZvJztcclxuXHJcblx0XHRtZXNzYWdlVGV4dCA9IGluc2VydFRleHRBdEluZGljZXMobWVzc2FnZVRleHQsIHtcclxuXHRcdFx0W3N0YXJ0SW5kZXhdOiBgPHNwYW4gY2xhc3M9XCJiYWRnZSBiYWRnZS1waWxsIGJhZGdlLSR7aXNNZX1cIj5gLFxyXG5cdFx0XHRbZW5kSW5kZXhdOiAnPC9zcGFuPidcclxuXHRcdH0pO1xyXG5cdH0pO1xyXG5cclxuXHRyZXR1cm4gKFxyXG5cdFx0PGRpdj5cclxuXHRcdFx0PHAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBtZXNzYWdlVGV4dCB9fSAvPlxyXG5cdFx0XHQ8TGlua1ByZXZpZXcgdXJsTWF0Y2hlcz17dXJsTWF0Y2hlc30gLz5cclxuXHRcdDwvZGl2PlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVNlbGVjdG9yLCB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuXHJcbmltcG9ydCB7IHRvZ2dsZUNhcm91c2VsIH0gZnJvbSAnLi4vLi4vYWN0aW9ucyc7XHJcbmltcG9ydCBDb250ZW50IGZyb20gJy4vQ29udGVudCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNZXNzYWdlKHsgcGFydHMsIHVzZXJUeXBlIH0pIHtcclxuXHRjb25zdCB7IGN1cnJlbnRVc2VyLCBpbWFnZXMgfSA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlKTtcclxuXHRjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XHJcblx0dXNlRWZmZWN0KCgpID0+IHt9LCBbaW1hZ2VzXSk7XHJcblxyXG5cdGlmIChwYXJ0cy5sZW5ndGggPT09IDApIHJldHVybjtcclxuXHRyZXR1cm4gcGFydHMubWFwKChwYXJ0LCBpbmRleCkgPT4ge1xyXG5cdFx0Y29uc3QgeyBwYXJ0VHlwZSwgcGF5bG9hZCB9ID0gcGFydDtcclxuXHJcblx0XHRpZiAocGFydFR5cGUgPT09ICdpbmxpbmUnKVxyXG5cdFx0XHRyZXR1cm4gKFxyXG5cdFx0XHRcdDxkaXYga2V5PXtpbmRleH0gY2xhc3NOYW1lPXtgdGV4dCAke3VzZXJUeXBlfWB9PlxyXG5cdFx0XHRcdFx0PENvbnRlbnRcclxuXHRcdFx0XHRcdFx0Y3VycmVudFVzZXJOYW1lPXtjdXJyZW50VXNlci5uYW1lfVxyXG5cdFx0XHRcdFx0XHR0ZXh0PXtwYXlsb2FkLmNvbnRlbnR9XHJcblx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQpO1xyXG5cclxuXHRcdGlmIChEYXRlLm5vdygpID4gRGF0ZS5wYXJzZShwYXlsb2FkLl9leHBpcmF0aW9uKSlcclxuXHRcdFx0cGF5bG9hZC5fZmV0Y2hOZXdEb3dubG9hZFVSTCgpO1xyXG5cclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxpbWdcclxuXHRcdFx0XHRrZXk9e2luZGV4fVxyXG5cdFx0XHRcdGNsYXNzTmFtZT17YHctMjUgaW1nLXRodW1ibmFpbCBcclxuICAgICAgICAgICAgICAgICAgICAke2luZGV4ICE9PSBwYXJ0cy5sZW5ndGggLSAxICYmICdtYi0zJ31cclxuICAgICAgICAgICAgICAgIGB9XHJcblx0XHRcdFx0c3JjPXtwYXlsb2FkLl9kb3dubG9hZFVSTH1cclxuXHRcdFx0XHRhbHQ9J2F0dGFjaG1lbnQnXHJcblx0XHRcdFx0b25DbGljaz17KCkgPT4gZGlzcGF0Y2godG9nZ2xlQ2Fyb3VzZWwoaW5kZXgsICdNZXNzYWdlTGlzdCcpKX1cclxuXHRcdFx0Lz5cclxuXHRcdCk7XHJcblx0fSk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVNlbGVjdG9yLCB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IGVudGVyUm9vbSB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xuXG5pbXBvcnQgV3JhcHBlciBmcm9tICcuL1dyYXBwZXInO1xuaW1wb3J0IE1lc3NhZ2UgZnJvbSAnLi9NZXNzYWdlJztcblxuaW1wb3J0IHsgUm9vbVN0YXR1cyB9IGZyb20gJy4uL0xlZnRTaWRlQmFyJztcbmltcG9ydCB7IEltYWdlQ2Fyb3VzZWwgfSBmcm9tICcuLi9JbWFnZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNZXNzYWdlTGlzdCh7IG1hdGNoIH0pIHtcblx0Y29uc3Qge1xuXHRcdGN1cnJlbnRVc2VyLFxuXHRcdHJvb21Vc2Vycyxcblx0XHR0eXBpbmdVc2Vycyxcblx0XHRtZXNzYWdlcyxcblx0XHRpc0xvYWRpbmcsXG5cdFx0anVzdExvYWRNb3JlLFxuXHRcdHNob3dDYXJvdXNlbFxuXHR9ID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUpO1xuXHRjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XG5cblx0Y29uc3QgbWVzc2FnZU5vZGUgPSB1c2VSZWYobnVsbCk7XG5cdHZhciBtZXNzYWdlRGF5ID0gMDtcblxuXHRjb25zdCB7IHJvb21JZCB9ID0gbWF0Y2gucGFyYW1zO1xuXHRjb25zdCByb29tTm90Rm91bmQgPSAhcm9vbVVzZXJzLmxlbmd0aDtcblxuXHR1c2VFZmZlY3QoKCkgPT4ge1xuXHRcdGRpc3BhdGNoKGVudGVyUm9vbShyb29tSWQpKTtcblx0fSwgW3Jvb21JZF0pO1xuXG5cdHVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0bWVzc2FnZU5vZGUuY3VycmVudC5zY3JvbGxJbnRvVmlldygpO1xuXHR9LCBbaXNMb2FkaW5nXSk7XG5cblx0dXNlRWZmZWN0KCgpID0+IHtcblx0XHRpZiAoZG9jdW1lbnQuaGFzRm9jdXMoKSAmJiByb29tSWQgJiYgIWp1c3RMb2FkTW9yZSlcblx0XHRcdG1lc3NhZ2VOb2RlLmN1cnJlbnQuc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogJ3Ntb290aCcgfSk7XG5cdH0sIFttZXNzYWdlcywgdHlwaW5nVXNlcnNdKTtcblxuXHRjb25zdCBvblNob3dNZXNzYWdlRGF5ID0gdXBkYXRlZEF0ID0+IHtcblx0XHRjb25zdCBzZW5kRGF5ID0gbmV3IERhdGUodXBkYXRlZEF0KS5zZXRIb3VycygwLCAwLCAwLCAwKTtcblx0XHRpZiAoc2VuZERheSA+IG1lc3NhZ2VEYXkpIHtcblx0XHRcdG1lc3NhZ2VEYXkgPSBzZW5kRGF5O1xuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2RhdGUnPlxuXHRcdFx0XHRcdDxociAvPlxuXHRcdFx0XHRcdDxzcGFuPlxuXHRcdFx0XHRcdFx0e21lc3NhZ2VEYXkgPT09IG5ldyBEYXRlKCkuc2V0SG91cnMoMCwgMCwgMCwgMClcblx0XHRcdFx0XHRcdFx0PyAnSMO0bSBuYXknXG5cdFx0XHRcdFx0XHRcdDogbmV3IERhdGUodXBkYXRlZEF0KS50b0xvY2FsZURhdGVTdHJpbmcoJ3ZpLVZOJywge1xuXHRcdFx0XHRcdFx0XHRcdFx0d2Vla2RheTogJ25hcnJvdycsXG5cdFx0XHRcdFx0XHRcdFx0XHR5ZWFyOiAnbnVtZXJpYycsXG5cdFx0XHRcdFx0XHRcdFx0XHRtb250aDogJzItZGlnaXQnLFxuXHRcdFx0XHRcdFx0XHRcdFx0ZGF5OiAnMi1kaWdpdCdcblx0XHRcdFx0XHRcdFx0ICB9KX1cblx0XHRcdFx0XHQ8L3NwYW4+XG5cdFx0XHRcdFx0PGhyIC8+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0KTtcblx0XHR9XG5cdH07XG5cblx0Y29uc3Qgb25TaG93TWVzc2FnZSA9ICgpID0+IHtcblx0XHRpZiAobWVzc2FnZXMubGVuZ3RoID09PSAwICYmICFpc0xvYWRpbmcgJiYgIXJvb21Ob3RGb3VuZClcblx0XHRcdHJldHVybiA8Um9vbVN0YXR1cyB0aXRsZT0nQuG6r3QgxJHhuqd1IGN14buZYyB0csOyIGNodXnhu4duIG3hu5tpLi4uJyAvPjtcblx0XHRlbHNlIGlmIChpc0xvYWRpbmcpIHJldHVybiA8Um9vbVN0YXR1cyB0aXRsZT0nxJBhbmcgdOG6o2ksIMSR4bujaSBjaMO6dCAhJyAvPjtcblx0XHRlbHNlIGlmICghaXNMb2FkaW5nICYmIHJvb21Ob3RGb3VuZClcblx0XHRcdHJldHVybiA8Um9vbVN0YXR1cyB0aXRsZT0nNDA0IE5vdCBGb3VuZCA6KCcgLz47XG5cdFx0cmV0dXJuIG1lc3NhZ2VzLm1hcCgoeyBpZCwgc2VuZGVyLCB1cGRhdGVkQXQsIHBhcnRzIH0pID0+IHtcblx0XHRcdGNvbnN0IHVzZXJUeXBlID0gc2VuZGVyLmlkID09PSBjdXJyZW50VXNlci5pZCAmJiAnbWUnO1xuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0PGRpdiBrZXk9e2lkfT5cblx0XHRcdFx0XHR7b25TaG93TWVzc2FnZURheSh1cGRhdGVkQXQpfVxuXHRcdFx0XHRcdDxXcmFwcGVyXG5cdFx0XHRcdFx0XHR1c2VyVHlwZT17dXNlclR5cGV9XG5cdFx0XHRcdFx0XHR1c2VyTmFtZT17c2VuZGVyLm5hbWV9XG5cdFx0XHRcdFx0XHR1cGRhdGVkQXQ9e3VwZGF0ZWRBdH1cblx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHQ8TWVzc2FnZSBwYXJ0cz17cGFydHN9IHVzZXJUeXBlPXt1c2VyVHlwZX0gLz5cblx0XHRcdFx0XHQ8L1dyYXBwZXI+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0KTtcblx0XHR9KTtcblx0fTtcblxuXHRjb25zdCBvblNob3dUeXBpbmdVc2VycyA9ICgpID0+IHtcblx0XHRyZXR1cm4gdHlwaW5nVXNlcnMubWFwKHVzZXIgPT4ge1xuXHRcdFx0Y29uc3QgeyBpZCwgbmFtZSB9ID0gdXNlcjtcblx0XHRcdGlmIChjdXJyZW50VXNlci5pZCA9PT0gaWQpIHJldHVybjtcblx0XHRcdHJldHVybiAoXG5cdFx0XHRcdDxXcmFwcGVyIGtleT17aWR9IHVzZXJUeXBlPSd0ZXh0IHR5cGluZycgdXNlck5hbWU9e25hbWV9PlxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSd3YXZlJz5cblx0XHRcdFx0XHRcdDxzcGFuIGNsYXNzTmFtZT0nZG90Jz48L3NwYW4+Jm5ic3A7XG5cdFx0XHRcdFx0XHQ8c3BhbiBjbGFzc05hbWU9J2RvdCc+PC9zcGFuPiZuYnNwO1xuXHRcdFx0XHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdkb3QnPjwvc3Bhbj5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PC9XcmFwcGVyPlxuXHRcdFx0KTtcblx0XHR9KTtcblx0fTtcblxuXHRyZXR1cm4gKFxuXHRcdDxkaXYgY2xhc3NOYW1lPSdjb2wtbWQtMTInPlxuXHRcdFx0e29uU2hvd01lc3NhZ2UoKX1cblx0XHRcdHt0eXBpbmdVc2Vycy5sZW5ndGggPiAwICYmIG9uU2hvd1R5cGluZ1VzZXJzKCl9XG5cdFx0XHR7c2hvd0Nhcm91c2VsLndoZXJlID09PSAnTWVzc2FnZUxpc3QnICYmIDxJbWFnZUNhcm91c2VsIC8+fVxuXHRcdFx0PGRpdiByZWY9e21lc3NhZ2VOb2RlfSAvPlxuXHRcdDwvZGl2PlxuXHQpO1xufVxuXG4vKiBlc2xpbnQtZW5hYmxlICovXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IgfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcblxyXG5pbXBvcnQgUmVhY3RUZXh0YXJlYUF1dG9jb21wbGV0ZSBmcm9tICdAd2Vic2NvcGVpby9yZWFjdC10ZXh0YXJlYS1hdXRvY29tcGxldGUnO1xyXG5pbXBvcnQgeyBlbW9qaUluZGV4IH0gZnJvbSAnZW1vamktbWFydCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUZXh0QXJlYShwcm9wcykge1xyXG5cdGNvbnN0IHsgaWQsIHVzZXJzIH0gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS5yb29tQWN0aXZlKTtcclxuXHRjb25zdCBvbkNoYW5nZSA9IGV2ZW50ID0+IHByb3BzLm9uQ2hhbmdlKGV2ZW50LnRhcmdldC52YWx1ZSk7XHJcblx0Y29uc3QgZmlsdGVyVXNlck5hbWVzID0gdG9rZW4gPT4ge1xyXG5cdFx0cmV0dXJuIHVzZXJzLmZpbHRlcih1c2VyID0+IHVzZXIubmFtZS5pbmNsdWRlcyh0b2tlbikpO1xyXG5cdH07XHJcblx0cmV0dXJuIChcclxuXHRcdDxSZWFjdFRleHRhcmVhQXV0b2NvbXBsZXRlXHJcblx0XHRcdGNsYXNzTmFtZT0nZm9ybS1jb250cm9sJ1xyXG5cdFx0XHR2YWx1ZT17cHJvcHMubWVzc2FnZX1cclxuXHRcdFx0bG9hZGluZ0NvbXBvbmVudD17KCkgPT4gPHA+TG9hZGluZy4uLjwvcD59XHJcblx0XHRcdG9uQ2hhbmdlPXtvbkNoYW5nZX1cclxuXHRcdFx0cGxhY2Vob2xkZXI9J05o4bqtcCB0aW4gbmjhuq9uLiBHw7UgQCDEkeG7gyDEkeG7gSBj4bqtcCBhaSDEkcOzJ1xyXG5cdFx0XHR0cmlnZ2VyPXt7XHJcblx0XHRcdFx0J0AnOiB7XHJcblx0XHRcdFx0XHRkYXRhUHJvdmlkZXI6IHRva2VuID0+IFsuLi5maWx0ZXJVc2VyTmFtZXModG9rZW4pXSxcclxuXHRcdFx0XHRcdGNvbXBvbmVudDogKHsgZW50aXR5OiB7IG5hbWUgfSB9KSA9PiA8ZGl2PntuYW1lfTwvZGl2PixcclxuXHRcdFx0XHRcdG91dHB1dDogaXRlbSA9PiBgQCR7aXRlbS5uYW1lfWBcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdCc6Jzoge1xyXG5cdFx0XHRcdFx0ZGF0YVByb3ZpZGVyOiB0b2tlbiA9PlxyXG5cdFx0XHRcdFx0XHRlbW9qaUluZGV4LnNlYXJjaCh0b2tlbikubWFwKG8gPT4gKHtcclxuXHRcdFx0XHRcdFx0XHRjb2xvbnM6IG8uY29sb25zLFxyXG5cdFx0XHRcdFx0XHRcdG5hdGl2ZTogby5uYXRpdmVcclxuXHRcdFx0XHRcdFx0fSkpLFxyXG5cdFx0XHRcdFx0Y29tcG9uZW50OiAoeyBlbnRpdHk6IHsgbmF0aXZlLCBjb2xvbnMgfSB9KSA9PiAoXHJcblx0XHRcdFx0XHRcdDxkaXY+e2Ake2NvbG9uc30gJHtuYXRpdmV9YH08L2Rpdj5cclxuXHRcdFx0XHRcdCksXHJcblx0XHRcdFx0XHRvdXRwdXQ6IGl0ZW0gPT4gYCR7aXRlbS5uYXRpdmV9YFxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fX1cclxuXHRcdFx0ZGlzYWJsZWQ9eyFpZH1cclxuXHRcdC8+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cblxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciwgdXNlRGlzcGF0Y2ggfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5cbmltcG9ydCB7IFBpY2tlciB9IGZyb20gJ2Vtb2ppLW1hcnQnO1xuaW1wb3J0ICdlbW9qaS1tYXJ0L2Nzcy9lbW9qaS1tYXJ0LmNzcyc7XG5cbmltcG9ydCB7XG5cdHR5cGluZ01lc3NhZ2UsXG5cdHNlbmRNZXNzYWdlLFxuXHRzZW5kTmV3cyxcblx0YWRkRW1vamksXG5cdHRvZ2dsZVBpY2tlclxufSBmcm9tICcuLi8uLi9hY3Rpb25zJztcblxuaW1wb3J0IFVwbG9hZEltYWdlIGZyb20gJy4uL1BvcFVwL1VwbG9hZEltYWdlJztcbmltcG9ydCBUZXh0QXJlYSBmcm9tICcuL1RleHRBcmVhJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTWVzc2FnZUlucHV0KCkge1xuXHRjb25zdCB7IHJvb21BY3RpdmUsIHNob3dQaWNrZXIgfSA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlKTtcblx0Y29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuXHRjb25zdCBbbWVzc2FnZSwgc2V0TWVzc2FnZV0gPSB1c2VTdGF0ZSgnJyk7XG5cblx0Y29uc3Qgb25Ub2dnbGVQaWNrZXIgPSAoKSA9PiBkaXNwYXRjaCh0b2dnbGVQaWNrZXIoKSk7XG5cdGNvbnN0IG9uQWRkRW1vamkgPSBlbW9qaSA9PiBzZXRNZXNzYWdlKGRpc3BhdGNoKGFkZEVtb2ppKGVtb2ppLCBtZXNzYWdlKSkpO1xuXG5cdGNvbnN0IGhhbmRsZVNsYXNoQ29tbWFuZCA9IG1lc3NhZ2UgPT4ge1xuXHRcdGNvbnN0IGNtZCA9IG1lc3NhZ2Uuc3BsaXQoJyAnKVswXTtcblx0XHRjb25zdCBxdWVyeSA9IG1lc3NhZ2Uuc2xpY2UoY21kLmxlbmd0aCkudHJpbSgpO1xuXG5cdFx0aWYgKGNtZCAhPT0gJy9uZXdzJykge1xuXHRcdFx0YWxlcnQoYEzhu4duaCAke2NtZH0gS2jDtG5nIGjhu6NwIGzhu4dgKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0ZGlzcGF0Y2goc2VuZE5ld3MocXVlcnkpKTtcblx0fTtcblxuXHRjb25zdCBvbkNoYW5nZSA9IHRleHQgPT4ge1xuXHRcdHNldE1lc3NhZ2UodGV4dCk7XG5cdFx0ZGlzcGF0Y2godHlwaW5nTWVzc2FnZSgpKTtcblx0fTtcblxuXHRjb25zdCBvblN1Ym1pdCA9IGV2ZW50ID0+IHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGNvbnN0IHBhcnRzID0gW107XG5cblx0XHRpZiAobWVzc2FnZS50cmltKCkpIHtcblx0XHRcdGlmIChtZXNzYWdlLnN0YXJ0c1dpdGgoJy8nKSkge1xuXHRcdFx0XHRoYW5kbGVTbGFzaENvbW1hbmQobWVzc2FnZSk7XG5cdFx0XHRcdHNldE1lc3NhZ2UoJycpO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRwYXJ0cy5wdXNoKHsgdHlwZTogJ3RleHQvcGxhaW4nLCBjb250ZW50OiBtZXNzYWdlIH0pO1xuXHRcdFx0ZGlzcGF0Y2goc2VuZE1lc3NhZ2UocGFydHMpKTtcblx0XHRcdHNldE1lc3NhZ2UoJycpO1xuXHRcdH1cblx0fTtcblxuXHR1c2VFZmZlY3QoKCkgPT4ge1xuXHRcdHNldE1lc3NhZ2UoJycpO1xuXHR9LCBbcm9vbUFjdGl2ZV0pO1xuXG5cdHJldHVybiAoXG5cdFx0PGRpdiBjbGFzc05hbWU9J2NvbnRhaW5lcic+XG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29sLW1kLTEyJz5cblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2JvdHRvbSc+XG5cdFx0XHRcdFx0PGZvcm1cblx0XHRcdFx0XHRcdGNsYXNzTmFtZT0ncG9zaXRpb24tcmVsYXRpdmUgdy0xMDAnXG5cdFx0XHRcdFx0XHRvblN1Ym1pdD17b25TdWJtaXR9XG5cdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0PFRleHRBcmVhIG1lc3NhZ2U9e21lc3NhZ2V9IG9uQ2hhbmdlPXtvbkNoYW5nZX0gLz5cblx0XHRcdFx0XHRcdDxidXR0b25cblx0XHRcdFx0XHRcdFx0dHlwZT0nYnV0dG9uJ1xuXHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9J2J0biBlbW90aWNvbnMnXG5cdFx0XHRcdFx0XHRcdG9uQ2xpY2s9e29uVG9nZ2xlUGlja2VyfVxuXHRcdFx0XHRcdFx0XHRkaXNhYmxlZD17IXJvb21BY3RpdmUuaWR9XG5cdFx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMnPmluc2VydF9lbW90aWNvbjwvaT5cblx0XHRcdFx0XHRcdDwvYnV0dG9uPlxuXHRcdFx0XHRcdFx0PGJ1dHRvbiB0eXBlPSdzdWJtaXQnIGNsYXNzTmFtZT0nYnRuIHNlbmQnPlxuXHRcdFx0XHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zJz5zZW5kPC9pPlxuXHRcdFx0XHRcdFx0PC9idXR0b24+XG5cdFx0XHRcdFx0XHR7c2hvd1BpY2tlciAmJiAoXG5cdFx0XHRcdFx0XHRcdDxQaWNrZXIgc2V0PSdlbW9qaW9uZScgb25TZWxlY3Q9e29uQWRkRW1vaml9IC8+XG5cdFx0XHRcdFx0XHQpfVxuXHRcdFx0XHRcdDwvZm9ybT5cblx0XHRcdFx0XHQ8VXBsb2FkSW1hZ2UgLz5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L2Rpdj5cblx0XHQ8L2Rpdj5cblx0KTtcbn1cblxuLyogZXNsaW50LWVuYWJsZSAqL1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVNlbGVjdG9yLCB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IFJvdXRlLCBTd2l0Y2ggfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IGNvbm5lY3QsIGxvYWRNb3JlTWVzc2FnZXMsIGdyYW50UGVybWlzc2lvbiB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xuXG5pbXBvcnQgTmF2aWdhdGlvbiBmcm9tICcuLi9OYXZpZ2F0aW9uJztcbmltcG9ydCBUb3BCYXIgZnJvbSAnLi4vVG9wQmFyJztcbmltcG9ydCBWaWRlb0NhbGwgZnJvbSAnLi4vVmlkZW9DYWxsJztcblxuaW1wb3J0IHsgTGVmdFNpZGVCYXIsIFJvb21TdGF0dXMgfSBmcm9tICcuLi9MZWZ0U2lkZUJhcic7XG5pbXBvcnQgUmlnaHRTaWRlQmFyIGZyb20gJy4uL1JpZ2h0U2lkZUJhcic7XG5cbmltcG9ydCBNZXNzYWdlTGlzdCBmcm9tICcuLi9NZXNzYWdlTGlzdCc7XG5pbXBvcnQgTWVzc2FnZUlucHV0IGZyb20gJy4uL01lc3NhZ2VJbnB1dCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENoYXQoeyBtYXRjaCB9KSB7XG5cdGNvbnN0IHtcblx0XHRhdXRoZW50aWNhdGlvbixcblx0XHRub3RpZmljYXRpb24sXG5cdFx0aXNMb2FkaW5nLFxuXHRcdHZpZGVvQ2FsbCxcblx0XHRyb29tc1xuXHR9ID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUpO1xuXHRjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XG5cdGNvbnN0IGNoYXROb2RlID0gdXNlUmVmKG51bGwpO1xuXG5cdGNvbnN0IGVuYWJsZVBlcm1pc3Npb24gPSAoKSA9PiBkaXNwYXRjaChncmFudFBlcm1pc3Npb24oKSk7XG5cdGNvbnN0IG9uU2hvd1Jvb21TdGF0dXMgPSAoKSA9PiB7XG5cdFx0aWYgKGlzTG9hZGluZykgcmV0dXJuIDxSb29tU3RhdHVzIHRpdGxlPSfEkGFuZyBr4bq/dCBu4buRaSBtw6F5IGNo4bunJyAvPjtcblx0XHRlbHNlIGlmIChyb29tcy5sZW5ndGggPiAwKVxuXHRcdFx0cmV0dXJuIDxSb29tU3RhdHVzIHRpdGxlPSdDaOG7jW4gcGjDsm5nIMSR4buDIGLhuq90IMSR4bqndSBjaGF0IG7DoG8gIScgLz47XG5cdFx0cmV0dXJuIDxSb29tU3RhdHVzIHRpdGxlPSdN4budaSBi4bqhbiB04bqhbyBwaMOybmcgY2hhdCBt4bubaSAhJyAvPjtcblx0fTtcblx0Y29uc3Qgb25TY3JvbGwgPSBldmVudCA9PiB7XG5cdFx0aWYgKGV2ZW50LnRhcmdldC5zY3JvbGxUb3AgPT09IDApIGRpc3BhdGNoKGxvYWRNb3JlTWVzc2FnZXMoKSk7XG5cdH07XG5cblx0dXNlRWZmZWN0KCgpID0+IHtcblx0XHRkaXNwYXRjaChjb25uZWN0KGF1dGhlbnRpY2F0aW9uLnVzZXJJZCkpO1xuXHR9LCBbXSk7XG5cblx0dXNlRWZmZWN0KCgpID0+IHtcblx0XHRjaGF0Tm9kZS5jdXJyZW50LnNjcm9sbEludG9WaWV3KCk7XG5cdH0sIFtpc0xvYWRpbmddKTtcblxuXHRyZXR1cm4gKFxuXHRcdDxkaXYgY2xhc3NOYW1lPSdhcHAnPlxuXHRcdFx0e25vdGlmaWNhdGlvbiAmJiAoXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdub3RpZmljYXRpb24tdG9hc3QnPlxuXHRcdFx0XHRcdFF1YW5DaGF0IGPhuqduIGLhuqFuIGNobyBwaMOpcCDEkeG7gyZuYnNwO1xuXHRcdFx0XHRcdDxzcGFuIG9uQ2xpY2s9e2VuYWJsZVBlcm1pc3Npb259Pmhp4buDbiB0aOG7iyB0aMO0bmcgYsOhbzwvc3Bhbj5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQpfVxuXHRcdFx0PE5hdmlnYXRpb24gLz5cblx0XHRcdDxMZWZ0U2lkZUJhciBtYXRjaD17bWF0Y2h9IC8+XG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nbWFpbic+XG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjaGF0JyByZWY9e2NoYXROb2RlfT5cblx0XHRcdFx0XHQ8VG9wQmFyIC8+XG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2NvbnRlbnQnIG9uU2Nyb2xsPXtvblNjcm9sbH0+XG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29udGFpbmVyJz5cblx0XHRcdFx0XHRcdFx0PFN3aXRjaD5cblx0XHRcdFx0XHRcdFx0XHQ8Um91dGUgZXhhY3QgcGF0aD17bWF0Y2gucGF0aH0+XG5cdFx0XHRcdFx0XHRcdFx0XHR7b25TaG93Um9vbVN0YXR1cygpfVxuXHRcdFx0XHRcdFx0XHRcdDwvUm91dGU+XG5cdFx0XHRcdFx0XHRcdFx0e3Jvb21zLm1hcChyb29tID0+IHtcblx0XHRcdFx0XHRcdFx0XHRcdGlmICghcm9vbSkgcmV0dXJuO1xuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIChcblx0XHRcdFx0XHRcdFx0XHRcdFx0PFJvdXRlXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0a2V5PXtyb29tLmlkfVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHBhdGg9e2Ake21hdGNoLnBhdGh9Lzpyb29tSWRgfVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGNvbXBvbmVudD17TWVzc2FnZUxpc3R9XG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8+XG5cdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdH0pfVxuXHRcdFx0XHRcdFx0XHRcdDxSb3V0ZT57b25TaG93Um9vbVN0YXR1cygpfTwvUm91dGU+XG5cdFx0XHRcdFx0XHRcdDwvU3dpdGNoPlxuXHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PE1lc3NhZ2VJbnB1dCAvPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0e3ZpZGVvQ2FsbC5zaG93ICYmIDxWaWRlb0NhbGwgLz59XG5cdFx0XHQ8L2Rpdj5cblx0XHRcdDxSaWdodFNpZGVCYXIgbWF0Y2g9e21hdGNofSAvPlxuXHRcdDwvZGl2PlxuXHQpO1xufVxuXG4vKiBlc2xpbnQtZW5hYmxlICovXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVNlbGVjdG9yIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHsgSGFzaFJvdXRlciwgUm91dGUsIFN3aXRjaCwgUmVkaXJlY3QgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuaW1wb3J0IHsgU2lnbkluLCBTaWduVXAgfSBmcm9tICcuLi9BdXRoJztcbmltcG9ydCBOb3RGb3VuZCBmcm9tICcuLi9Ob3RGb3VuZCc7XG5pbXBvcnQgQ2hhdCBmcm9tICcuLi9DaGF0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKCkge1xuXHRjb25zdCB7IGN1cnJlbnRTY3JlZW4gfSA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlLmF1dGhlbnRpY2F0aW9uKTtcblx0cmV0dXJuIChcblx0XHQ8SGFzaFJvdXRlcj5cblx0XHRcdDxTd2l0Y2g+XG5cdFx0XHRcdDxSZWRpcmVjdCBleGFjdCBmcm9tPScvJyB0bz0nL3Jvb20nIC8+XG5cdFx0XHRcdDxSb3V0ZVxuXHRcdFx0XHRcdHBhdGg9Jy9yb29tJ1xuXHRcdFx0XHRcdGNvbXBvbmVudD17Y3VycmVudFNjcmVlbiA9PT0gJ1NpZ25JbicgPyBTaWduSW4gOiBDaGF0fVxuXHRcdFx0XHQvPlxuXHRcdFx0XHQ8Um91dGUgcGF0aD0nL3NpZ24tdXAnIGNvbXBvbmVudD17U2lnblVwfSAvPlxuXHRcdFx0XHQ8Um91dGUgY29tcG9uZW50PXtOb3RGb3VuZH0gLz5cblx0XHRcdDwvU3dpdGNoPlxuXHRcdDwvSGFzaFJvdXRlcj5cblx0KTtcbn1cblxuLyogZXNsaW50LWVuYWJsZSAqL1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcblxuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgc3RvcmUgZnJvbSAnLi9yZWR1Y2Vycyc7XG5pbXBvcnQgQXBwIGZyb20gJy4vY29tcG9uZW50cy9BcHAnO1xuXG5pbXBvcnQgJ2Jvb3RzdHJhcC9kaXN0L2Nzcy9ib290c3RyYXAubWluLmNzcyc7XG5pbXBvcnQgJ2Jvb3RzdHJhcC9kaXN0L2pzL2Jvb3RzdHJhcC5idW5kbGUubWluJztcbmltcG9ydCAnanF1ZXJ5JztcblxuaW1wb3J0ICdtYXRlcmlhbC1kZXNpZ24taWNvbnMvaWNvbmZvbnQvbWF0ZXJpYWwtaWNvbnMuY3NzJztcbmltcG9ydCAnLi9zY3NzL3N0eWxlLnNjc3MnO1xuXG5SZWFjdERPTS5yZW5kZXIoXG5cdDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxuXHRcdDxBcHAgLz5cblx0PC9Qcm92aWRlcj4sXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290Jylcbik7XG5cbi8qIGVzbGludC1lbmFibGUgKi9cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///770\n')}});