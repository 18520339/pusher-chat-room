!function(F){function c(c){for(var t,U,B=c[0],l=c[1],s=c[2],d=0,x=[];d<B.length;d++)U=B[d],Object.prototype.hasOwnProperty.call(n,U)&&n[U]&&x.push(n[U][0]),n[U]=0;for(t in l)Object.prototype.hasOwnProperty.call(l,t)&&(F[t]=l[t]);for(a&&a(c);x.length;)x.shift()();return e.push.apply(e,s||[]),Q()}function Q(){for(var F,c=0;c<e.length;c++){for(var Q=e[c],t=!0,B=1;B<Q.length;B++){var l=Q[B];0!==n[l]&&(t=!1)}t&&(e.splice(c--,1),F=U(U.s=Q[0]))}return F}var t={},n={0:0},e=[];function U(c){if(t[c])return t[c].exports;var Q=t[c]={i:c,l:!1,exports:{}};return F[c].call(Q.exports,Q,Q.exports,U),Q.l=!0,Q.exports}U.m=F,U.c=t,U.d=function(F,c,Q){U.o(F,c)||Object.defineProperty(F,c,{enumerable:!0,get:Q})},U.r=function(F){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(F,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(F,"__esModule",{value:!0})},U.t=function(F,c){if(1&c&&(F=U(F)),8&c)return F;if(4&c&&"object"==typeof F&&F&&F.__esModule)return F;var Q=Object.create(null);if(U.r(Q),Object.defineProperty(Q,"default",{enumerable:!0,value:F}),2&c&&"string"!=typeof F)for(var t in F)U.d(Q,t,function(c){return F[c]}.bind(null,t));return Q},U.n=function(F){var c=F&&F.__esModule?function(){return F.default}:function(){return F};return U.d(c,"a",c),c},U.o=function(F,c){return Object.prototype.hasOwnProperty.call(F,c)},U.p="";var B=window.webpackJsonp=window.webpackJsonp||[],l=B.push.bind(B);B.push=c,B=B.slice();for(var s=0;s<B.length;s++)c(B[s]);var a=l;e.push([770,1]),Q()}({369:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/NzBiMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzNjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///369\n")},371:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/YzJjMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzNzEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///371\n")},391:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZnMgKGlnbm9yZWQpP2RiNDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMzkxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///391\n")},400:function(module,exports){eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 400;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2FjaGVhYmxlLXJlcXVlc3Qvbm9kZV9tb2R1bGVzL2tleXYvc3JjIHN5bmM/NDc2OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLFdBQVc7QUFDbEQ7QUFDQTtBQUNBIiwiZmlsZSI6IjQwMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHdlYnBhY2tFbXB0eUNvbnRleHQocmVxKSB7XG5cdHZhciBlID0gbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJ1wiKTtcblx0ZS5jb2RlID0gJ01PRFVMRV9OT1RfRk9VTkQnO1xuXHR0aHJvdyBlO1xufVxud2VicGFja0VtcHR5Q29udGV4dC5rZXlzID0gZnVuY3Rpb24oKSB7IHJldHVybiBbXTsgfTtcbndlYnBhY2tFbXB0eUNvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tFbXB0eUNvbnRleHQ7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tFbXB0eUNvbnRleHQ7XG53ZWJwYWNrRW1wdHlDb250ZXh0LmlkID0gNDAwOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///400\n")},407:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVjb21wcmVzcy1yZXNwb25zZSAoaWdub3JlZCk/NTA2MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI0MDcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///407\n")},408:function(module,exports){eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 408;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ290L3NvdXJjZSBzeW5jPzcwYjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxXQUFXO0FBQ2xEO0FBQ0E7QUFDQSIsImZpbGUiOiI0MDguanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB3ZWJwYWNrRW1wdHlDb250ZXh0KHJlcSkge1xuXHR2YXIgZSA9IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIidcIik7XG5cdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0dGhyb3cgZTtcbn1cbndlYnBhY2tFbXB0eUNvbnRleHQua2V5cyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gW107IH07XG53ZWJwYWNrRW1wdHlDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrRW1wdHlDb250ZXh0O1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrRW1wdHlDb250ZXh0O1xud2VicGFja0VtcHR5Q29udGV4dC5pZCA9IDQwODsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///408\n")},444:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYnVmZmVyIChpZ25vcmVkKT85MTYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjQ0NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///444\n")},445:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY3J5cHRvIChpZ25vcmVkKT8xNmU0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjQ0NS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///445\n")},527:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY3J5cHRvIChpZ25vcmVkKT9mNTI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjUyNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///527\n")},725:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vb3MgKGlnbm9yZWQpP2ZhNTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNzI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///725\n")},766:function(module,exports,__webpack_require__){eval("var api = __webpack_require__(767);\n            var content = __webpack_require__(768);\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2Nzcy9zdHlsZS5zY3NzPzJlNGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLEdBQTJFO0FBQzdGLDBCQUEwQixtQkFBTyxDQUFDLEdBQXFHOztBQUV2STs7QUFFQTtBQUNBLDBCQUEwQixRQUFTO0FBQ25DOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7Ozs7QUFJQSIsImZpbGUiOiI3NjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cbnZhciBleHBvcnRlZCA9IGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB7fTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZWQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///766\n")},768:function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(769);\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Maven+Pro:500&display=swap&subset=vietnamese);"]);\n// Module\nexports.push([module.i, ".sidebar .contacts h1,.sidebar .discussions h1{font-weight:800;font-size:24px;color:#212529;margin-bottom:0;padding-bottom:18px}.sidebar .contacts .contact .avatar-md,.sidebar .discussions .single .avatar-md,.main .chat .top .avatar-md{margin-right:20px;cursor:pointer}.sidebar .contacts .contact .data,.sidebar .discussions .single .data,.main .chat .top .data{display:flex;display:-ms-flexbox;justify-content:space-between;-ms-flex-align:flex-start;align-items:flex-start;margin-right:auto;flex-wrap:wrap;width:100%;overflow:hidden}.sidebar .contacts .contact .data h5,.sidebar .discussions .single .data h5,.main .chat .top .data h5{font-weight:700;font-size:16px;color:#212529;margin-bottom:5px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:60%}.sidebar .contacts .contact .data span,.sidebar .discussions .single .data span,.main .chat .top .data span{font-weight:400;font-size:14px;white-space:nowrap}.sidebar .contacts .contact .data p,.sidebar .discussions .single .data p,.main .chat .top .data p{font-weight:400;font-size:16px;line-height:1.4;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%}.sidebar .contacts .contact,.sidebar .discussions .single{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:20px 0;border-bottom:2px solid #fbfbfb}.sidebar .contacts .contact:last-of-type,.sidebar .discussions .single:last-of-type{border-bottom:2px solid transparent !important}.requests .content .form-group label{font-weight:700;font-size:14px;color:#212529;margin-bottom:10px;text-transform:uppercase}@keyframes wave{0%,60%,100%{-webkit-transform:initial;-ms-transform:initial;transform:initial}30%{transform:translateY(-5px)}}@keyframes pulse{0%{box-shadow:0 0 0 0 rgba(0,0,0,0.1)}100%{box-shadow:0 0 0 50px transparent}}@keyframes call-end{0%{box-shadow:0 0 0 0 rgba(0,0,0,0.1)}100%{box-shadow:0 0 0 20px transparent}}@keyframes float{100%{-webkit-transform:translateY(20px);-ms-transform:translateY(20px);transform:translateY(20px)}}.aside{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;height:100vh;width:100%;min-width:550px;max-width:550px;background:linear-gradient(145deg, #8ca7ff 0, #8b54f9 50%, #6610f2 100%)}.aside .preference{width:100%;max-width:340px;margin:0 auto;text-align:center}.aside .preference h2{font-weight:800;font-size:46px;color:#fff;margin-bottom:23px}.aside .preference p{font-weight:400;font-size:16px;color:#fff;line-height:1.7;margin-bottom:30px}.aside .preference .button{background-color:#fff;color:#2196f3;max-width:300px;box-shadow:none !important}.avatar-xl{height:60px;width:100%;min-width:60px;max-width:60px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-lg{height:50px;width:100%;min-width:50px;max-width:50px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-md{height:45px;width:100%;min-width:45px;max-width:45px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-sm{height:30px;width:100%;min-width:30px;max-width:30px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-xxl{width:200px;height:200px;border-radius:100%}.tooltip{font-weight:600;font-size:15px}.tooltip.show{opacity:1}.tooltip-inner{background-color:#212529;color:#fff;padding:5px 12px;border-radius:6px}.call{background:linear-gradient(145deg, #8ca7ff 0, #8b54f9 50%, #6610f2 100%)}.call video{width:100%;align-self:center}.call .video-chat{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:stretch;align-items:stretch;height:100%}.call .options{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;margin-bottom:37px;position:absolute;bottom:0}.call .options .option{color:#fff;line-height:0;padding:0 20px}.call .options .option.call-end{padding:15px;background:#e05b5d;border-radius:100%;animation:call-end 2s infinite;color:#fff;line-height:0;margin:0 20px}.call .options .option:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1);-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear;opacity:0.9}.call .back{padding:18px;background:rgba(0,0,0,0.05);border-radius:100%;color:#fff;line-height:0;-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear}.call .back:hover{-webkit-transform:translateY(10px) translateZ(0);-ms-transform:translateY(10px) translateZ(0);transform:translateY(10px) translateZ(0)}.call .content{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;height:100%;text-align:center}.call .content .avatar-xxl{margin-bottom:56px;animation:pulse 2s infinite;cursor:pointer}.call .content .participant{margin-bottom:56px}.call .content .participant span{font-weight:500;color:#fff;display:block;text-align:center}.call .content .options{position:unset;margin-bottom:60px}.call::-webkit-scrollbar{display:none}.btn,.btn.active:not(:disabled):not(.disabled),.btn:not(:disabled):not(.disabled):active,.btn:active,.btn:focus,.btn:hover{border:none;box-shadow:none;outline:0}.btn{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s}.btn:disabled{opacity:1}.button{width:100%;padding:16px 25px;background-color:#2196f3;font-weight:500;color:#fff;border-radius:6px;-webkit-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;-moz-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important}.button:hover{color:#fff;opacity:0.9}.show>.btn.dropdown-toggle{border:none;-webkit-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;-moz-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important}.create.btn:not(:disabled):not(.disabled):active{box-shadow:0 0 30px 5px rgba(0,0,0,0.04)}.form-control{width:100% !important;padding:25px 15px;background-color:#f5f5f5;font-weight:500;font-size:16px;color:#bdbac2 !important;border:none;border-radius:6px;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none}.form-control:focus{background-color:#f5f5f5;color:none !important;box-shadow:none}.form-control::placeholder{font-weight:500;font-size:16px;color:#bdbac2}.form-control[readonly]{background-color:#f5f5f5}.dropdown-menu{border:none;border-radius:6px;-webkit-box-shadow:0 0 20px rgba(0,0,0,0.04);-moz-box-shadow:0 0 20px rgba(0,0,0,0.04);box-shadow:0 0 20px rgba(0,0,0,0.04);min-width:14rem;padding:10px;margin-top:10px}.dropdown-menu hr{margin:10px;border-top:2px solid #fbfbfb}.dropdown-menu .material-icons{margin-right:10px}.dropdown-item{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:10px;font-size:15px;color:#bdbac2;-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;border-radius:6px;cursor:pointer}.dropdown-item:focus{background-color:0 0;color:#bdbac2;border:none;border-radius:6px;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;outline:0}.dropdown-item:hover{background-color:#f5f5f5;color:#bdbac2;border-radius:6px}.dropdown-item:active,.dropdown-item.active{background-color:#2196f3 !important;color:#fff !important}.switch{height:18px;width:100%;min-width:42px;max-width:42px;display:inline-block;position:relative;margin-bottom:0}.switch input{width:0;height:0;opacity:0}.slider{position:absolute;top:0;left:0;right:0;bottom:0;-webkit-transition:.4s;-moz-transition:.4s;transition:.4s;background-color:#ccc;cursor:pointer}.slider:before{position:absolute;left:3px;bottom:3px;width:12px;height:12px;-webkit-transition:.4s;-moz-transition:.4s;transition:.4s;background-color:#fff;content:\'\'}.slider.round{border-radius:34px}.slider.round:before{border-radius:50%}input:checked+.slider{background-color:#2196f3 !important}input:checked+.slider:before{transform:translateX(24px)}.main{width:100%;height:100vh;margin:0}.main .chat{-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);display:flex;display:-ms-flexbox;justify-content:space-between;flex-direction:column;height:100%}.main .chat .content{padding:20px 0 0;overflow-x:hidden;overflow-y:scroll;display:flex;height:calc(100vh - 218px)}.main .chat .content .message{display:flex;display:-ms-flexbox;-ms-flex-align:flex-end;align-items:flex-end;margin-bottom:20px}.main .chat .content .message .text-main .text{padding:15px;background:#fff;border-radius:6px;border-radius:15px;-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);display:inline-block;max-width:450px}.main .chat .content .message .text-main .text .embedded-link{text-decoration:underline}.main .chat .content .message .text-main .text .embedded-link:hover{color:inherit;text-decoration:none}.main .chat .content .message .text-main .text .microlink_card .microlink_card__content{width:0}.main .chat .content .message .text-main .text .microlink_card:hover{color:initial}.main .chat .content .message .text-main .text .attachment{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center}.main .chat .content .message .text-main .text .attachment .file h5{font-weight:400;font-size:16px;color:#2196f3;line-height:1.4;margin-bottom:5px}.main .chat .content .message .text-main .text .attachment .file a:hover{text-decoration:underline}.main .chat .content .message .text-main .text .attachment .attach{width:42px;height:42px;padding:12px;margin-right:15px}.main .chat .content .message .text-main .text.typing{padding:8px 12px}.main .chat .content .message .text-main .text.me{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;background-color:#2196f3}.main .chat .content .message .text-main .text.me.image{background-color:#f5f5f5}.main .chat .content .message .text-main .text.me .attachment .attach{background-color:#fff;color:#2196f3}.main .chat .content .message .text-main .text.me .attachment .file h5,.main .chat .content .message .text-main .text.me .attachment .file a:hover{color:#fff}.main .chat .content .message .text-main .text.me .attachment .file span{color:#fff;text-align:left}.main .chat .content .message .text-main .text.me>div>p{color:#fff}.main .chat .content .message .text-main .text>div>p{font-weight:400;font-size:16px;color:#a0a0a0;line-height:1.4;word-break:break-all}.main .chat .content .message .text-main>span{color:#a0a0a0}.main .chat .content .message:last-child{margin-bottom:50px}.main .chat .content .message.me{justify-content:flex-end}.main .chat .content .message.me:last-child{margin-bottom:43px}.main .chat .content .message.me span{text-align:right}.main .chat .content .message .avatar-md{margin-right:15px}.main .chat .content .message .text-group{display:flex;display:-ms-flexbox;-ms-flex-align:flex-start;align-items:flex-start;flex-direction:column;width:100%;margin-bottom:10px}.main .chat .content .message .text-group>a{display:contents}.main .chat .content .message .text-group.me{align-items:flex-end}.main .chat .content .message span{font-weight:400;font-size:14px;display:block}.main .chat .content .message span>.material-icons{font-weight:600;font-size:14px;margin-right:5px;position:relative;top:2px}.main .chat .content .wave .dot{width:6px;height:6px;background:#bdbac2;border-radius:100%;animation:wave 1.3s linear infinite;display:inline-block;margin-right:1px}.main .chat .content .wave .dot:last-of-type{margin-right:0}.main .chat .content .wave .dot:nth-child(2){animation-delay:-1.1s}.main .chat .content .wave .dot:nth-child(3){animation-delay:-0.9s}.main .chat .content>div{margin-top:auto;margin-bottom:auto}.main .chat .content .date{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:0 120px 30px}.main .chat .content .date hr{width:100%;margin:0;border-top:1px solid #212529}.main .chat .content .date span{display:block;padding:0 20px;color:#212529;white-space:nowrap}.main .chat .content .no-messages{width:100%;max-width:400px;margin:47px auto 45px;text-align:center;display:block;color:#212529}.main .chat .content .no-messages .options{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center}.main .chat .content .no-messages .options .button{width:56px;height:56px;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04) !important;-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04) !important;box-shadow:0 5px 10px 4px rgba(0,0,0,0.04) !important}.main .chat .content .no-messages .options .button:hover{-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05);-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear}.main .chat .content .no-messages .options .button .material-icons{margin-bottom:0}.main .chat .content .no-messages .options .button:nth-child(2){background:#dc3545}.main .chat .content .no-messages .options .button+.button{margin-left:20px}.main .chat .content .no-messages.request{max-width:420px;margin:50px auto}.main .chat .content .no-messages .material-icons{margin-bottom:20px;font-weight:600}.main .chat .content .no-messages .avatar-xl{margin-bottom:32px}.main .chat .content .no-messages h5{font-weight:400;font-size:18px;line-height:1.7;margin-bottom:5px;display:block}.main .chat .content .no-messages h5>span{font-size:18px;line-height:1.7}.main .chat .content .no-messages p{font-weight:400;font-size:18px;margin-bottom:10px}.main .chat .btn{padding:0;line-height:0}.main .chat .btn.disabled{opacity:1}.main .chat .btn.disabled:hover{color:inherit !important;opacity:1}.main .chat .attach{background-color:#2196f3;color:#fff;border-radius:100%}.main .chat .attach:hover{color:#fff;opacity:0.8}.main .chat .top{-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);padding:20px 5px;background:#fff}.main .chat .top .inside{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center}.main .chat .top .inside .data h5{width:100%}.main .chat .top .inside .status{position:absolute;left:4px;right:0;width:20px;height:20px;border:5px solid #fff;border-radius:100%;margin-top:0;margin-right:10px}.main .chat .top .inside .status .online{color:#2196f3}.main .chat .top .inside .status .offline{color:#ccc}.main .chat .top .inside .status .material-icons{position:absolute;left:-3px;bottom:-3px;font-size:16px}.main .chat .top .inside .btn{color:#2196f3;line-height:0;margin-left:30px;padding:0}.main .chat .top .inside .btn:hover{background:#e8e8e8}.main .chat .top .inside .dropdown-menu-right{right:0 !important;bottom:inherit !important}.main .chat .top .inside .dropdown .btn{margin-right:0}.main .chat .bottom{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:30px 0;border-top:2.5px solid #fff}.main .chat .bottom .rta{position:relative;width:100%}.main .chat .bottom .rta__autocomplete{position:absolute;top:unset !important;left:7% !important;bottom:77%;border:1px solid #bdbac2;border-radius:5px;max-height:250px;background-color:#fff;overflow:auto}.main .chat .bottom .rta__autocomplete ul{display:flex;display:-ms-flexbox;flex-direction:column;padding:0;margin:0}.main .chat .bottom .rta__autocomplete ul li{padding:3px 20px;color:#2196f3;cursor:pointer}.main .chat .bottom .rta__autocomplete ul li:hover{background-color:#2196f3;color:#fff}.main .chat .bottom label{margin-bottom:0}.main .chat .bottom label input{display:none}.main .chat .bottom .form-control{border-radius:50px;-webkit-box-shadow:0px 0px 24px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 24px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 24px 0px rgba(0,0,0,0.2);padding:16px 58px;height:56px;resize:none;font-weight:400;background:white}.main .chat .bottom .form-control:disabled{background-color:#f5f5f5}.main .chat .bottom .form-control::placeholder{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.main .chat .bottom .emoji-mart{position:absolute;left:-2%;bottom:80%}.main .chat .bottom .btn{color:#2196f3;line-height:0;padding:0}.main .chat .bottom .btn.emoticons{position:absolute;top:0;left:0;bottom:0;padding:0 15px 0 20px}.main .chat .bottom .btn.emoticons:hover{background:#f5f5f5;border-radius:50% 0% 0% 50%}.main .chat .bottom .btn.send{position:absolute;top:0;right:0;bottom:0;padding:0 20px 0 15px}.main .chat .bottom .btn.send:hover{background:#f5f5f5;border-radius:0% 50% 50% 0%}.main .chat .bottom .btn.attach{width:56px;height:56px;padding:16px;margin-left:20px;color:#fff;box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.main .chat .bottom .btn.attach:hover{color:#fff}.main .chat .bottom .btn.attach.btn.disabled:hover{color:#fff !important}.main .start{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;width:100%}.main .start .content{width:100%;text-align:center}.main .start .content h1{font-weight:800;font-size:46px;color:#212529;margin-bottom:40px}.main .start .content p{font-weight:400;font-size:16px;margin-bottom:20px}.main .start .content .third-party{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;margin-bottom:38px}.main .start .content .third-party .item{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;padding:15px;margin-right:20px;width:60px;height:60px;border-radius:100%;-webkit-box-shadow:0 0 20px rgba(0,0,0,0.04);-moz-box-shadow:0 0 20px rgba(0,0,0,0.04);box-shadow:0 0 20px rgba(0,0,0,0.04);-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s}.main .start .content .third-party .item:hover{-webkit-transform:translateY(-5px) translateZ(0);-ms-transform:translateY(-5px) translateZ(0);transform:translateY(-5px) translateZ(0);opacity:0.9}.main .start .content .third-party .item:last-of-type{margin-right:0}.main .start .content .third-party .item .material-icons{font-size:30px;color:#fff}.main .start .content .third-party .item img{width:25px;height:25px}.main .start .content form{width:100%;max-width:366px;margin:0 auto}.main .start .content .form-group{position:relative;margin-bottom:15px}.main .start .content .form-group .form-control{height:56px;padding:0 20px 0 58px;font-weight:400;border:2px solid transparent}.main .start .content .form-group .form-control:focus{border:2px solid #2196f3 !important}.main .start .content .form-group .form-control::placeholder{font-weight:400}.main .start .content .form-group .btn.icon{position:absolute;top:0;left:0;bottom:0;color:#bdbac2;line-height:0;padding:0 10px 0 20px}.main .start .content .callout span{font-size:16px}.main .start .content .callout span>a{color:#2196f3}.main .start .content .callout span>a:hover{text-decoration:underline}.navigation{-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.1);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.1);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.1);background:#fff}.navigation .inside .menu .btn{padding:0;color:inherit}.navigation .inside .menu .btn:last-child{margin-bottom:30px}.navigation .inside .menu .material-icons{display:block;font-size:45px;margin-bottom:40px}.navigation .inside .menu .power:hover{color:#dc3545}.navigation .inside .menu .power .material-icons{font-weight:600;font-size:45px;display:block;margin-bottom:0}.navigation .inside .menu .avatar-xl:hover{border:3px solid #2196f3}.navigation .inside .menu .mode:hover{color:#2196f3}.navigation .inside .menu>a.active{color:#2196f3}.requests{display:flex;display:-ms-flexbox;flex-direction:column;border-radius:6px;-webkit-box-shadow:0 0 20px rgba(0,0,0,0.04);-moz-box-shadow:0 0 20px rgba(0,0,0,0.04);box-shadow:0 0 20px rgba(0,0,0,0.04);position:relative;width:100%;background:#fff;pointer-events:auto}.requests .modal-title{width:100%}.requests .modal-title .title{display:flex;display:-ms-flexbox;justify-content:space-between;-ms-flex-align:center;align-items:center;padding:15px 20px;background:#fdfdfd}.requests .modal-title .title h1{font-weight:800;font-size:22px;color:#212529;margin-bottom:0}.requests .modal-title .title .material-icons{font-weight:800}.requests .modal-title .title .close:hover{color:#212529 !important}.requests .content{padding:18px 20px 20px}.requests .content .form-group{margin-bottom:30px}.requests .content .form-group:last-of-type{margin-bottom:33px}.requests .content .form-group .form-control{padding:0 18px;height:56px;font-weight:400;border:2px solid transparent}.requests .content .form-group .form-control:focus{border:2px solid #2196f3 !important}.requests .content .form-group .form-control::placeholder{font-weight:400}.requests .content .text-control{width:100%;height:130px;padding:14px 17px;background:#f5f5f5;font-weight:400;font-size:16px;color:#bdbac2 !important;border:2px solid transparent;border-radius:6px !important}.requests .content .text-control:focus{border:2px solid transparent;border-radius:6px;outline:0}.requests .content .text-control::placeholder{color:#bdbac2}.requests .content .members{position:absolute;top:28%;left:9%;width:82%;height:62px;display:flex;overflow:scroll;overflow-y:hidden}.requests .content .members .user{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;margin-right:7px;padding:15px;background:#fdfdfd;border-radius:6px;margin-bottom:30px;z-index:2}.requests .content .members .user .avatar-sm{margin-right:10px;box-shadow:0 0 10px 1px rgba(0,0,0,0.04)}.requests .content .members .user h5{font-weight:600;font-size:15px;color:#212529;line-height:1.7;margin-bottom:0;margin-right:6px;white-space:nowrap}.requests .content .members .user .btn .material-icons{font-weight:600;font-size:16px}.requests .content .button{padding:16px 25px;line-height:1.5}.requests .btn{padding:0;line-height:0}.create{position:absolute;top:30px;right:20px;bottom:0;width:50px;height:50px;border-radius:100%;-webkit-box-shadow:0 0 30px 5px rgba(0,0,0,0.04);-moz-box-shadow:0 0 30px 5px rgba(0,0,0,0.04);box-shadow:0 0 30px 5px rgba(0,0,0,0.04);background:#fff;display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;padding:0;-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;float:right;cursor:pointer}.create:hover{-webkit-transform:translateY(-5px) translateZ(0);-ms-transform:translateY(-5px) translateZ(0);transform:translateY(-5px) translateZ(0)}.create .material-icons{font-weight:normal !important;font-size:22px;color:#bdbac2;margin-bottom:0 !important}.create.btn:not(:disabled):not(.disabled).active{box-shadow:0 0 30px 5px rgba(0,0,0,0.04)}.fileContainer{background-color:#f5f5f5;color:#212529}.fileContainer .uploadPictureContainer{width:46%;margin:2%}.not-found{height:100vh;background:white}.not-found svg{position:absolute;top:50%;left:50%;margin-top:-250px;margin-left:-400px}.not-found-content{position:absolute;top:50%;left:50%;margin-top:-100px;margin-left:50px;width:380px;height:200px;font-weight:300;color:#212529;font-family:Roboto}.not-found-content h1{font-size:60px;line-height:46px;margin-bottom:40px}.not-found .buttons-con .action-link-wrap{margin-top:40px}.not-found .buttons-con .action-link-wrap a{padding:8px 25px;background:#20c997;border-radius:4px;font-weight:bold;font-size:14px;color:#fff;margin-right:10px;-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear;text-decoration:none;cursor:pointer}.not-found .buttons-con .action-link-wrap a:hover{background-color:#a0a0a0;color:#fff}.not-found #Polygon-1{animation:float 1s infinite ease-in-out alternate;animation-delay:0s}.not-found #Polygon-2{animation:float 1s infinite ease-in-out alternate;animation-delay:.2s}.not-found #Polygon-3{animation:float 1s infinite ease-in-out alternate;animation-delay:.4s}.not-found #Polygon-4{animation:float 1s infinite ease-in-out alternate;animation-delay:.6s}.not-found #Polygon-5{animation:float 1s infinite ease-in-out alternate;animation-delay:.8s}@media (max-width: 1200px){.aside{width:100%;min-width:auto;max-width:auto}}@media (min-width: 992px){.app{display:flex;display:-ms-flexbox;-ms-flex-align:flex-start;align-items:flex-start}.sign-in,.sign-up{height:100vh !important;margin:0 !important;background:#fdfdfd}.navigation{position:sticky;top:0;z-index:1020;overflow-x:hidden;overflow-y:auto;width:100%;min-width:100px;max-width:100px;z-index:1021}.navigation .inside{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;flex-direction:column;padding:30px 0 0;height:100vh}.navigation .inside .menu{display:flex;display:-ms-flexbox;flex-direction:column;flex-basis:auto;flex-grow:1;flex-shrink:0;text-align:center}.navigation .inside .menu .f-grow1{flex-grow:1}.navigation .inside .menu .avatar-xl{margin-bottom:50px}.navigation::-webkit-scrollbar{display:none}.sidebar{position:sticky;top:0;z-index:1020;overflow-x:hidden;overflow-y:scroll;width:100%;height:95vh;max-width:25%;padding:30px 0;margin:auto 15px}.sidebar::-webkit-scrollbar{width:5px}.sidebar::-webkit-scrollbar-thumb{background:#f5f5f5}.main{height:95vh;margin:auto 15px}.main .start{height:100vh}.main .start .content .callout{display:none}.main .start .content .form-parent{display:flex}.main .start .content .form-parent .form-group{margin-right:15px}.main .start .content .form-parent .form-group:last-child{margin-right:0}.main .start .content form.signup{max-width:466px}.main .call .content .inside{max-height:calc(100vh - 0)}.main .call .content .inside .panel{padding:30px 0}}@media (max-width: 991px){body{padding-bottom:54px;background-image:none !important}.aside{display:none}.chat{height:100vh !important}.navigation{position:fixed;left:0;right:0;bottom:0;z-index:1030;box-shadow:0 0 20px 0 rgba(0,0,0,0.04)}.navigation .inside{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:flex-end;align-items:flex-end;padding:12px 15px;flex-wrap:wrap}.navigation .inside .menu{flex-wrap:unset !important;align-items:flex-end;width:100%}.navigation .inside .menu .avatar-xl{display:none}.navigation .inside .menu .mode{margin:auto}.navigation .inside .menu .power{margin-bottom:0 !important}.navigation .inside .menu .power .material-icons{font-size:35px}.navigation .inside .menu a{margin-right:auto}.navigation .inside .menu a:first-of-type{margin-left:0}.navigation .inside .menu a:last-of-type{margin-right:0}.navigation .inside .menu .material-icons{font-size:30px;margin-bottom:0}.sidebar{padding:30px 0 0;overflow-x:hidden;overflow-y:auto;height:100vh}.sidebar::-webkit-scrollbar{display:none}.main .start{padding:73px 0 77px}.main .start .content .button{margin-bottom:20px}.main .start .content .callout{display:block}.main .chat .content{height:600px}.main .call .content{padding:60px 0;height:100%}}@media (min-width: 768px){.container{max-width:100%}}@media (max-width: 768px){.main .chat .content{height:100%}.main .chat .bottom{padding:15px 0;margin-bottom:55px}}@media (min-width: 576px){.container{max-width:100%}}@media (max-width: 468px){.container{padding-left:5px;padding-right:5px}.requests .title{padding:30px 20px}.requests .content{padding:34px 20px 40px}.requests .content .user{left:29px}.main .start .content h1{font-size:36px}.main .call .content .options .option{padding:0 15px}.not-found svg{position:absolute;top:50%;left:50%;margin-top:-250px;margin-left:-190px}.not-found-content{position:absolute;top:50%;left:50%;margin-top:-100px;margin-left:-190px;text-align:center}}@media (max-width: 350px){.main .call .content .options .option{padding:0 12px}.main .call .content .options .option.call-end{margin:0 15px}}.sidebar{border-radius:30px;-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);background:#fff}.sidebar .room-info{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;flex-direction:column;margin-bottom:20px}.sidebar .room-info .avatar-xl{height:auto;width:100%;min-width:100px;max-width:100px;margin-bottom:20px;cursor:pointer}.sidebar .room-info h4{color:#212529}.sidebar .contacts .contact.active .material-icons{color:#2196f3}.sidebar .contacts .contact .status{position:absolute;left:4px;right:0;width:20px;height:20px;border:5px solid #fff;border-radius:100%}.sidebar .contacts .contact .status .online{color:#2196f3}.sidebar .contacts .contact .status .offline{color:#ccc}.sidebar .contacts .contact .status .material-icons{position:absolute;left:-3px;bottom:-3px;font-size:16px}.sidebar .contacts .contact.active,.sidebar .contacts .contact:hover{border-bottom:2px solid #2196f3}.sidebar .contacts a:hover{color:inherit}.sidebar .contacts .sort-members{display:flex;display:-ms-flexbox;justify-content:space-between;-ms-flex-align:flex-start;align-items:flex-start}.sidebar .contacts .sort-members h1{padding-bottom:0}.sidebar .accordion button{width:100%;text-align:left}.sidebar .accordion button .material-icons{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;float:right}.sidebar .accordion button .material-icons.rotate{-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg)}.sidebar .discussions .single.active .material-icons{color:#2196f3}.sidebar .discussions .single .status{position:absolute;left:4px;right:0;width:20px;height:20px;border:5px solid #fff;border-radius:100%}.sidebar .discussions .single .status .online{color:#2196f3}.sidebar .discussions .single .status .offline{color:#ccc}.sidebar .discussions .single .status .material-icons{position:absolute;left:-3px;bottom:-3px;font-size:16px}.sidebar .discussions .single.active,.sidebar .discussions .single:hover{border-bottom:2px solid #2196f3}.sidebar .discussions a:hover{color:inherit}.sidebar .discussions .single.active p,.sidebar .discussions .single.active span,.sidebar .discussions .single.unread p,.sidebar .discussions .single.unread span{font-weight:500 !important;color:#212529}.sidebar .discussions .single .new{position:absolute;left:39px;right:0;width:30px;height:30px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:5px 0 10px 0 rgba(0,0,0,0.04);-moz-box-shadow:5px 0 10px 0 rgba(0,0,0,0.04);box-shadow:5px 0 10px 0 rgba(0,0,0,0.04);margin-top:-23px;background:#f0d24b;display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center}.sidebar .discussions .single .new span{font-weight:500;font-size:12px;color:#fff !important}.sidebar .search{margin-bottom:30px}.sidebar .search .form-control{padding:0 15px 0 54px;height:56px}.sidebar .search .loop{position:absolute;top:0;left:0;bottom:0;padding:0 15px;margin-bottom:0 !important;line-height:0}.sidebar .search .loop .material-icons{font-weight:600;font-size:25px;color:#bdbac2}.sidebar .search .loop .material-icons.filter-list{font-weight:400}.sidebar .sort{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:baseline;align-items:baseline;flex-direction:row;margin-bottom:40px;text-align:center}.sidebar .sort .btn{font-weight:500;font-size:15px;color:inherit;padding:8px 20px;white-space:nowrap;border-radius:100px}.sidebar .sort .btn.active{padding:8px 20px;background:#f5f5f5;border-radius:100px;color:#2196f3}body{background-color:#fdfdfd;color:#bdbac2;display:initial;font-family:\'Maven Pro\', sans-serif;font-size:15px;background:url(\\"https://img.wallpapersafari.com/desktop/1920/1080/15/47/bld5Un.jpg\\") no-repeat center;background-size:cover}a{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;text-decoration:none;color:inherit}a:hover{text-decoration:none;color:#2196f3}img{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s}p{font-weight:500;line-height:1.7;margin-bottom:0}.app{overflow:auto}.bg-blue{background:#2196f3 !important}.bg-indigo{background:#6610f2 !important}.bg-purple{background:#6f42c1 !important}.bg-red{background:#dc3545 !important}.bg-pink{background:#e83e8c !important}.bg-orange{background:#fd7e14 !important}.bg-gray{background:#bdbac2 !important}.bg-green{background:#28a745 !important}.bg-teal{background:#20c997 !important}.bg-yellow{background:#ffc107 !important}.material-icons.md-18{font-size:18px}.material-icons.md-24{font-size:24px}.material-icons.md-30{font-size:30px}.material-icons.md-36{font-size:36px}.material-icons.md-42{font-size:42px}.material-icons.md-48{font-size:48px}.notification-toast{position:absolute;top:0;left:0;right:0;background-color:#8b54f9;color:#fff;padding:10px;text-align:center;z-index:1021}.notification-toast span{text-decoration:underline;cursor:pointer}.img-thumbnail{width:33.33333%;cursor:pointer}.modal-dialog{max-width:450px}.modal-backdrop{opacity:0 !important}.start{padding-bottom:0}\\n", ""]);\n// Exports\nmodule.exports = exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2Nzcy9zdHlsZS5zY3NzP2E5ZjYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQ0FBa0MsbUJBQU8sQ0FBQyxHQUFtRDtBQUM3RjtBQUNBLGNBQWMsUUFBUyxxR0FBcUc7QUFDNUg7QUFDQSxjQUFjLFFBQVMsa0RBQWtELGdCQUFnQixlQUFlLGNBQWMsZ0JBQWdCLG9CQUFvQiw0R0FBNEcsa0JBQWtCLGVBQWUsNkZBQTZGLGFBQWEsb0JBQW9CLDhCQUE4QiwwQkFBMEIsdUJBQXVCLGtCQUFrQixlQUFlLFdBQVcsZ0JBQWdCLHNHQUFzRyxnQkFBZ0IsZUFBZSxjQUFjLGtCQUFrQixnQkFBZ0IsdUJBQXVCLG1CQUFtQixVQUFVLDRHQUE0RyxnQkFBZ0IsZUFBZSxtQkFBbUIsbUdBQW1HLGdCQUFnQixlQUFlLGdCQUFnQixnQkFBZ0IsdUJBQXVCLG1CQUFtQixXQUFXLDBEQUEwRCxhQUFhLG9CQUFvQixzQkFBc0IsbUJBQW1CLGVBQWUsZ0NBQWdDLG9GQUFvRiwrQ0FBK0MscUNBQXFDLGdCQUFnQixlQUFlLGNBQWMsbUJBQW1CLHlCQUF5QixnQkFBZ0IsWUFBWSwwQkFBMEIsc0JBQXNCLGtCQUFrQixJQUFJLDRCQUE0QixpQkFBaUIsR0FBRyxtQ0FBbUMsS0FBSyxtQ0FBbUMsb0JBQW9CLEdBQUcsbUNBQW1DLEtBQUssbUNBQW1DLGlCQUFpQixLQUFLLG1DQUFtQywrQkFBK0IsNEJBQTRCLE9BQU8sYUFBYSxvQkFBb0IsdUJBQXVCLHNCQUFzQixtQkFBbUIsYUFBYSxXQUFXLGdCQUFnQixnQkFBZ0IseUVBQXlFLG1CQUFtQixXQUFXLGdCQUFnQixjQUFjLGtCQUFrQixzQkFBc0IsZ0JBQWdCLGVBQWUsV0FBVyxtQkFBbUIscUJBQXFCLGdCQUFnQixlQUFlLFdBQVcsZ0JBQWdCLG1CQUFtQiwyQkFBMkIsc0JBQXNCLGNBQWMsZ0JBQWdCLDJCQUEyQixXQUFXLFlBQVksV0FBVyxlQUFlLGVBQWUsc0JBQXNCLG1C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b0IscUJBQXFCLGNBQWMsUUFBUSxxQkFBcUIsY0FBYyxJQUFJLDRCQUE0Qix5QkFBeUIsb0JBQW9CLEVBQUUsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsS0FBSyxjQUFjLFNBQVMsOEJBQThCLFdBQVcsOEJBQThCLFdBQVcsOEJBQThCLFFBQVEsOEJBQThCLFNBQVMsOEJBQThCLFdBQVcsOEJBQThCLFNBQVMsOEJBQThCLFVBQVUsOEJBQThCLFNBQVMsOEJBQThCLFdBQVcsOEJBQThCLHNCQUFzQixlQUFlLHNCQUFzQixlQUFlLHNCQUFzQixlQUFlLHNCQUFzQixlQUFlLHNCQUFzQixlQUFlLHNCQUFzQixlQUFlLG9CQUFvQixrQkFBa0IsTUFBTSxPQUFPLFFBQVEseUJBQXlCLFdBQVcsYUFBYSxrQkFBa0IsYUFBYSx5QkFBeUIsMEJBQTBCLGVBQWUsZUFBZSxnQkFBZ0IsZUFBZSxjQUFjLGdCQUFnQixnQkFBZ0IscUJBQXFCLE9BQU8saUJBQWlCO0FBQzMzZ0M7QUFDQSIsImZpbGUiOiI3NjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIik7XG5leHBvcnRzID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKGZhbHNlKTtcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1NYXZlbitQcm86NTAwJmRpc3BsYXk9c3dhcCZzdWJzZXQ9dmlldG5hbWVzZSk7XCJdKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnNpZGViYXIgLmNvbnRhY3RzIGgxLC5zaWRlYmFyIC5kaXNjdXNzaW9ucyBoMXtmb250LXdlaWdodDo4MDA7Zm9udC1zaXplOjI0cHg7Y29sb3I6IzIxMjUyOTttYXJnaW4tYm90dG9tOjA7cGFkZGluZy1ib3R0b206MThweH0uc2lkZWJhciAuY29udGFjdHMgLmNvbnRhY3QgLmF2YXRhci1tZCwuc2lkZWJhciAuZGlzY3Vzc2lvbnMgLnNpbmdsZSAuYXZhdGFyLW1kLC5tYWluIC5jaGF0IC50b3AgLmF2YXRhci1tZHttYXJnaW4tcmlnaHQ6MjBweDtjdXJzb3I6cG9pbnRlcn0uc2lkZWJhciAuY29udGFjdHMgLmNvbnRhY3QgLmRhdGEsLnNpZGViYXIgLmRpc2N1c3Npb25zIC5zaW5nbGUgLmRhdGEsLm1haW4gLmNoYXQgLnRvcCAuZGF0YXtkaXNwbGF5OmZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjstbXMtZmxleC1hbGlnbjpmbGV4LXN0YXJ0O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7bWFyZ2luLXJpZ2h0OmF1dG87ZmxleC13cmFwOndyYXA7d2lkdGg6MTAwJTtvdmVyZmxvdzpoaWRkZW59LnNpZGViYXIgLmNvbnRhY3RzIC5jb250YWN0IC5kYXRhIGg1LC5zaWRlYmFyIC5kaXNjdXNzaW9ucyAuc2luZ2xlIC5kYXRhIGg1LC5tYWluIC5jaGF0IC50b3AgLmRhdGEgaDV7Zm9udC13ZWlnaHQ6NzAwO2ZvbnQtc2l6ZToxNnB4O2NvbG9yOiMyMTI1Mjk7bWFyZ2luLWJvdHRvbTo1cHg7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7d2hpdGUtc3BhY2U6bm93cmFwO3dpZHRoOjYwJX0uc2lkZWJhciAuY29udGFjdHMgLmNvbnRhY3QgLmRhdGEgc3Bhbiwuc2lkZWJhciAuZGlzY3Vzc2lvbnMgLnNpbmdsZSAuZGF0YSBzcGFuLC5tYWluIC5jaGF0IC50b3AgLmRhdGEgc3Bhbntmb250LXdlaWdodDo0MDA7Zm9udC1zaXplOjE0cHg7d2hpdGUtc3BhY2U6bm93cmFwfS5zaWRlYmFyIC5jb250YWN0cyAuY29udGFjdCAuZGF0YSBwLC5zaWRlYmFyIC5kaXNjdXNzaW9ucyAuc2luZ2xlIC5kYXRhIHAsLm1haW4gLmNoYXQgLnRvcCAuZGF0YSBwe2ZvbnQtd2VpZ2h0OjQwMDtmb250LXNpemU6MTZweDtsaW5lLWhlaWdodDoxLjQ7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7d2hpdGUtc3BhY2U6bm93cmFwO3dpZHRoOjEwMCV9LnNpZGViYXIgLmNvbnRhY3RzIC5jb250YWN0LC5zaWRlYmFyIC5kaXNjdXNzaW9ucyAuc2luZ2xle2Rpc3BsYXk6ZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZzoyMHB4IDA7Ym9yZGVyLWJvdHRvbToycHggc29saWQgI2ZiZmJmYn0uc2lkZWJhciAuY29udGFjdHMgLmNvbnRhY3Q6bGFzdC1vZi10eXBlLC5zaWRlYmFyIC5kaXNjdXNzaW9ucyAuc2luZ2xlOmxhc3Qtb2YtdHlwZXtib3JkZXItYm90dG9tOjJweCBzb2xpZCB0cmFuc3BhcmVudCAhaW1wb3J0YW50fS5yZXF1ZXN0cyAuY29udGVudCAuZm9ybS1ncm91cCBsYWJlbHtmb250LXdlaWdodDo3MDA7Zm9udC1zaXplOjE0cHg7Y29sb3I6IzIxMjUyOTttYXJnaW4tYm90dG9tOjEwcHg7dGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlfUBrZXlmcmFtZXMgd2F2ZXswJSw2MCUsMTAwJXstd2Via2l0LXRyYW5zZm9ybTppbml0aWFsOy1tcy10cmFuc2Zvcm06aW5pdGlhbDt0cmFuc2Zvcm06aW5pdGlhbH0zMCV7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTVweCl9fUBrZXlmcmFtZXMgcHVsc2V7MCV7Ym94LXNoYWRvdzowIDAgMCAwIHJnYmEoMCwwLDAsMC4xKX0xMDAle2JveC1zaGFkb3c6MCAwIDAgNTBweCB0cmFuc3BhcmVudH19QGtleWZyYW1lcyBjYWxsLWVuZHswJXtib3gtc2hhZG93OjAgMCAwIDAgcmdiYSgwLDAsMCwwLjEpfTEwMCV7Ym94LXNoYWRvdzowIDAgMCAyMHB4IHRyYW5zcGFyZW50fX1Aa2V5ZnJhbWVzIGZsb2F0ezEwMCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWSgyMHB4KTstbXMtdHJhbnNmb3JtOnRyYW5zbGF0ZVkoMjBweCk7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoMjBweCl9fS5hc2lkZXtkaXNwbGF5OmZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7aGVpZ2h0OjEwMHZoO3dpZHRoOjEwMCU7bWluLXdpZHRoOjU1MHB4O21heC13aWR0aDo1NTBweDtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxNDVkZWcsICM4Y2E3ZmYgMCwgIzhiNTRmOSA1MCUsICM2NjEwZjIgMTAwJSl9LmFzaWRlIC5wcmVmZXJlbmNle3dpZHRoOjEwMCU7bWF4LXdpZHRoOjM0MHB4O21hcmdpbjowIGF1dG87dGV4dC1hbGlnbjpjZW50ZXJ9LmFzaWRlIC5wcmVmZXJlbmNlIGgye2ZvbnQtd2VpZ2h0OjgwMDtmb250LXNpemU6NDZweDtjb2xvcjojZmZmO21hcmdpbi1ib3R0b206MjNweH0uYXNpZGUgLnByZWZlcmVuY2UgcHtmb250LXdlaWdodDo0MDA7Zm9udC1zaXplOjE2cHg7Y29sb3I6I2ZmZjtsaW5lLWhlaWdodDoxLjc7bWFyZ2luLWJvdHRvbTozMHB4fS5hc2lkZSAucHJlZmVyZW5jZSAuYnV0dG9ue2JhY2tncm91bmQtY29sb3I6I2ZmZjtjb2xvcjojMjE5NmYzO21heC13aWR0aDozMDBweDtib3gtc2hhZG93Om5vbmUgIWltcG9ydGFudH0uYXZhdGFyLXhse2hlaWdodDo2MHB4O3dpZHRoOjEwMCU7bWluLXdpZHRoOjYwcHg7bWF4LXdpZHRoOjYwcHg7Ym9yZGVyOjJweCBzb2xpZCAjZmZmO2JvcmRlci1yYWRpdXM6MTAwJTstd2Via2l0LWJveC1zaGFkb3c6MCA1cHggMTBweCA0cHggcmdiYSgwLDAsMCwwLjA0KTstbW96LWJveC1zaGFkb3c6MCA1cHggMTBweCA0cHggcmdiYSgwLDAsMCwwLjA0KTtib3gtc2hhZG93OjAgNXB4IDEwcHggNHB4IHJnYmEoMCwwLDAsMC4wNCl9LmF2YXRhci1sZ3toZWlnaHQ6NTBweDt3aWR0aDoxMDAlO21pbi13aWR0aDo1MHB4O21heC13aWR0aDo1MHB4O2JvcmRlcjoycHggc29saWQgI2ZmZjtib3JkZXItcmFkaXVzOjEwMCU7LXdlYmtpdC1ib3gtc2hhZG93OjAgNXB4IDEwcHggNHB4IHJnYmEoMCwwLDAsMC4wNCk7LW1vei1ib3gtc2hhZG93OjAgNXB4IDEwcHggNHB4IHJnYmEoMCwwLDAsMC4wNCk7Ym94LXNoYWRvdzowIDVweCAxMHB4IDRweCByZ2JhKDAsMCwwLDAuMDQpfS5hdmF0YXItbWR7aGVpZ2h0OjQ1cHg7d2lkdGg6MTAwJTttaW4td2lkdGg6NDVweDttYXgtd2lkdGg6NDVweDtib3JkZXI6MnB4IHNvbGlkICNmZmY7Ym9yZGVyLXJhZGl1czoxMDAlOy13ZWJraXQtYm94LXNoYWRvdzowIDVweCAxMHB4IDRweCByZ2JhKDAsMCwwLDAuMDQpOy1tb3otYm94LXNoYWRvdzowIDVweCAxMHB4IDRweCByZ2JhKDAsMCwwLDAuMDQpO2JveC1zaGFkb3c6MCA1cHggMTBweCA0cHggcmdiYSgwLDAsMCwwLjA0KX0uYXZhdGFyLXNte2hlaWdodDozMHB4O3dpZHRoOjEwMCU7bWluLXdpZHRoOjMwcHg7bWF4LXdpZHRoOjMwcHg7Ym9yZGVyOjJweCBzb2xpZCAjZmZmO2JvcmRlci1yYWRpdXM6MTAwJTstd2Via2l0LWJveC1zaGFkb3c6MCA1cHggMTBweCA0cHggcmdiYSgwLDAsMCwwLjA0KTstbW96LWJveC1zaGFkb3c6MCA1cHggMTBweCA0cHggcmdiYSgwLDAsMCwwLjA0KTtib3gtc2hhZG93OjAgNXB4IDEwcHggNHB4IHJnYmEoMCwwLDAsMC4wNCl9LmF2YXRhci14eGx7d2lkdGg6MjAwcHg7aGVpZ2h0OjIwMHB4O2JvcmRlci1yYWRpdXM6MTAwJX0udG9vbHRpcHtmb250LXdlaWdodDo2MDA7Zm9udC1zaXplOjE1cHh9LnRvb2x0aXAuc2hvd3tvcGFjaXR5OjF9LnRvb2x0aXAtaW5uZXJ7YmFja2dyb3VuZC1jb2xvcjojMjEyNTI5O2NvbG9yOiNmZmY7cGFkZGluZzo1cHggMTJweDtib3JkZXItcmFkaXVzOjZweH0uY2FsbHtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxNDVkZWcsICM4Y2E3ZmYgMCwgIzhiNTRmOSA1MCUsICM2NjEwZjIgMTAwJSl9LmNhbGwgdmlkZW97d2lkdGg6MTAwJTthbGlnbi1zZWxmOmNlbnRlcn0uY2FsbCAudmlkZW8tY2hhdHtkaXNwbGF5OmZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LWFsaWduOnN0cmV0Y2g7YWxpZ24taXRlbXM6c3RyZXRjaDtoZWlnaHQ6MTAwJX0uY2FsbCAub3B0aW9uc3tkaXNwbGF5OmZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7bWFyZ2luLWJvdHRvbTozN3B4O3Bvc2l0aW9uOmFic29sdXRlO2JvdHRvbTowfS5jYWxsIC5vcHRpb25zIC5vcHRpb257Y29sb3I6I2ZmZjtsaW5lLWhlaWdodDowO3BhZGRpbmc6MCAyMHB4fS5jYWxsIC5vcHRpb25zIC5vcHRpb24uY2FsbC1lbmR7cGFkZGluZzoxNXB4O2JhY2tncm91bmQ6I2UwNWI1ZDtib3JkZXItcmFkaXVzOjEwMCU7YW5pbWF0aW9uOmNhbGwtZW5kIDJzIGluZmluaXRlO2NvbG9yOiNmZmY7bGluZS1oZWlnaHQ6MDttYXJnaW46MCAyMHB4fS5jYWxsIC5vcHRpb25zIC5vcHRpb246aG92ZXJ7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMS4xKTstbXMtdHJhbnNmb3JtOnNjYWxlKDEuMSk7dHJhbnNmb3JtOnNjYWxlKDEuMSk7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAwLjNzIGxpbmVhcjstbW96LXRyYW5zaXRpb246YWxsIDAuM3MgbGluZWFyO3RyYW5zaXRpb246YWxsIDAuM3MgbGluZWFyO29wYWNpdHk6MC45fS5jYWxsIC5iYWNre3BhZGRpbmc6MThweDtiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC4wNSk7Ym9yZGVyLXJhZGl1czoxMDAlO2NvbG9yOiNmZmY7bGluZS1oZWlnaHQ6MDstd2Via2l0LXRyYW5zaXRpb246YWxsIDAuM3MgbGluZWFyOy1tb3otdHJhbnNpdGlvbjphbGwgMC4zcyBsaW5lYXI7dHJhbnNpdGlvbjphbGwgMC4zcyBsaW5lYXJ9LmNhbGwgLmJhY2s6aG92ZXJ7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWSgxMHB4KSB0cmFuc2xhdGVaKDApOy1tcy10cmFuc2Zvcm06dHJhbnNsYXRlWSgxMHB4KSB0cmFuc2xhdGVaKDApO3RyYW5zZm9ybTp0cmFuc2xhdGVZKDEwcHgpIHRyYW5zbGF0ZVooMCl9LmNhbGwgLmNvbnRlbnR7ZGlzcGxheTpmbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7anVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO2hlaWdodDoxMDAlO3RleHQtYWxpZ246Y2VudGVyfS5jYWxsIC5jb250ZW50IC5hdmF0YXIteHhse21hcmdpbi1ib3R0b206NTZweDthbmltYXRpb246cHVsc2UgMnMgaW5maW5pdGU7Y3Vyc29yOnBvaW50ZXJ9LmNhbGwgLmNvbnRlbnQgLnBhcnRpY2lwYW50e21hcmdpbi1ib3R0b206NTZweH0uY2FsbCAuY29udGVudCAucGFydGljaXBhbnQgc3Bhbntmb250LXdlaWdodDo1MDA7Y29sb3I6I2ZmZjtkaXNwbGF5OmJsb2NrO3RleHQtYWxpZ246Y2VudGVyfS5jYWxsIC5jb250ZW50IC5vcHRpb25ze3Bvc2l0aW9uOnVuc2V0O21hcmdpbi1ib3R0b206NjBweH0uY2FsbDo6LXdlYmtpdC1zY3JvbGxiYXJ7ZGlzcGxheTpub25lfS5idG4sLmJ0bi5hY3RpdmU6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCksLmJ0bjpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLmJ0bjphY3RpdmUsLmJ0bjpmb2N1cywuYnRuOmhvdmVye2JvcmRlcjpub25lO2JveC1zaGFkb3c6bm9uZTtvdXRsaW5lOjB9LmJ0bnstd2Via2l0LXRyYW5zaXRpb246YWxsIDAuM3M7LW1vei10cmFuc2l0aW9uOmFsbCAwLjNzO3RyYW5zaXRpb246YWxsIDAuM3N9LmJ0bjpkaXNhYmxlZHtvcGFjaXR5OjF9LmJ1dHRvbnt3aWR0aDoxMDAlO3BhZGRpbmc6MTZweCAyNXB4O2JhY2tncm91bmQtY29sb3I6IzIxOTZmMztmb250LXdlaWdodDo1MDA7Y29sb3I6I2ZmZjtib3JkZXItcmFkaXVzOjZweDstd2Via2l0LWJveC1zaGFkb3c6MCAwIDMwcHggNXB4IHJnYmEoMCwwLDAsMC4wNCkgIWltcG9ydGFudDstbW96LWJveC1zaGFkb3c6MCAwIDMwcHggNXB4IHJnYmEoMCwwLDAsMC4wNCkgIWltcG9ydGFudDtib3gtc2hhZG93OjAgMCAzMHB4IDVweCByZ2JhKDAsMCwwLDAuMDQpICFpbXBvcnRhbnR9LmJ1dHRvbjpob3Zlcntjb2xvcjojZmZmO29wYWNpdHk6MC45fS5zaG93Pi5idG4uZHJvcGRvd24tdG9nZ2xle2JvcmRlcjpub25lOy13ZWJraXQtYm94LXNoYWRvdzowIDAgMzBweCA1cHggcmdiYSgwLDAsMCwwLjA0KSAhaW1wb3J0YW50Oy1tb3otYm94LXNoYWRvdzowIDAgMzBweCA1cHggcmdiYSgwLDAsMCwwLjA0KSAhaW1wb3J0YW50O2JveC1zaGFkb3c6MCAwIDMwcHggNXB4IHJnYmEoMCwwLDAsMC4wNCkgIWltcG9ydGFudH0uY3JlYXRlLmJ0bjpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmV7Ym94LXNoYWRvdzowIDAgMzBweCA1cHggcmdiYSgwLDAsMCwwLjA0KX0uZm9ybS1jb250cm9se3dpZHRoOjEwMCUgIWltcG9ydGFudDtwYWRkaW5nOjI1cHggMTVweDtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Zm9udC13ZWlnaHQ6NTAwO2ZvbnQtc2l6ZToxNnB4O2NvbG9yOiNiZGJhYzIgIWltcG9ydGFudDtib3JkZXI6bm9uZTtib3JkZXItcmFkaXVzOjZweDstd2Via2l0LWJveC1zaGFkb3c6bm9uZTstbW96LWJveC1zaGFkb3c6bm9uZTtib3gtc2hhZG93Om5vbmV9LmZvcm0tY29udHJvbDpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Y29sb3I6bm9uZSAhaW1wb3J0YW50O2JveC1zaGFkb3c6bm9uZX0uZm9ybS1jb250cm9sOjpwbGFjZWhvbGRlcntmb250LXdlaWdodDo1MDA7Zm9udC1zaXplOjE2cHg7Y29sb3I6I2JkYmFjMn0uZm9ybS1jb250cm9sW3JlYWRvbmx5XXtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjV9LmRyb3Bkb3duLW1lbnV7Ym9yZGVyOm5vbmU7Ym9yZGVyLXJhZGl1czo2cHg7LXdlYmtpdC1ib3gtc2hhZG93OjAgMCAyMHB4IHJnYmEoMCwwLDAsMC4wNCk7LW1vei1ib3gtc2hhZG93OjAgMCAyMHB4IHJnYmEoMCwwLDAsMC4wNCk7Ym94LXNoYWRvdzowIDAgMjBweCByZ2JhKDAsMCwwLDAuMDQpO21pbi13aWR0aDoxNHJlbTtwYWRkaW5nOjEwcHg7bWFyZ2luLXRvcDoxMHB4fS5kcm9wZG93bi1tZW51IGhye21hcmdpbjoxMHB4O2JvcmRlci10b3A6MnB4IHNvbGlkICNmYmZiZmJ9LmRyb3Bkb3duLW1lbnUgLm1hdGVyaWFsLWljb25ze21hcmdpbi1yaWdodDoxMHB4fS5kcm9wZG93bi1pdGVte2Rpc3BsYXk6ZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZzoxMHB4O2ZvbnQtc2l6ZToxNXB4O2NvbG9yOiNiZGJhYzI7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAwLjNzOy1tb3otdHJhbnNpdGlvbjphbGwgMC4zczt0cmFuc2l0aW9uOmFsbCAwLjNzO2JvcmRlci1yYWRpdXM6NnB4O2N1cnNvcjpwb2ludGVyfS5kcm9wZG93bi1pdGVtOmZvY3Vze2JhY2tncm91bmQtY29sb3I6MCAwO2NvbG9yOiNiZGJhYzI7Ym9yZGVyOm5vbmU7Ym9yZGVyLXJhZGl1czo2cHg7LXdlYmtpdC1ib3gtc2hhZG93Om5vbmU7LW1vei1ib3gtc2hhZG93Om5vbmU7Ym94LXNoYWRvdzpub25lO291dGxpbmU6MH0uZHJvcGRvd24taXRlbTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjU7Y29sb3I6I2JkYmFjMjtib3JkZXItcmFkaXVzOjZweH0uZHJvcGRvd24taXRlbTphY3RpdmUsLmRyb3Bkb3duLWl0ZW0uYWN0aXZle2JhY2tncm91bmQtY29sb3I6IzIxOTZmMyAhaW1wb3J0YW50O2NvbG9yOiNmZmYgIWltcG9ydGFudH0uc3dpdGNoe2hlaWdodDoxOHB4O3dpZHRoOjEwMCU7bWluLXdpZHRoOjQycHg7bWF4LXdpZHRoOjQycHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLWJvdHRvbTowfS5zd2l0Y2ggaW5wdXR7d2lkdGg6MDtoZWlnaHQ6MDtvcGFjaXR5OjB9LnNsaWRlcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7cmlnaHQ6MDtib3R0b206MDstd2Via2l0LXRyYW5zaXRpb246LjRzOy1tb3otdHJhbnNpdGlvbjouNHM7dHJhbnNpdGlvbjouNHM7YmFja2dyb3VuZC1jb2xvcjojY2NjO2N1cnNvcjpwb2ludGVyfS5zbGlkZXI6YmVmb3Jle3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6M3B4O2JvdHRvbTozcHg7d2lkdGg6MTJweDtoZWlnaHQ6MTJweDstd2Via2l0LXRyYW5zaXRpb246LjRzOy1tb3otdHJhbnNpdGlvbjouNHM7dHJhbnNpdGlvbjouNHM7YmFja2dyb3VuZC1jb2xvcjojZmZmO2NvbnRlbnQ6Jyd9LnNsaWRlci5yb3VuZHtib3JkZXItcmFkaXVzOjM0cHh9LnNsaWRlci5yb3VuZDpiZWZvcmV7Ym9yZGVyLXJhZGl1czo1MCV9aW5wdXQ6Y2hlY2tlZCsuc2xpZGVye2JhY2tncm91bmQtY29sb3I6IzIxOTZmMyAhaW1wb3J0YW50fWlucHV0OmNoZWNrZWQrLnNsaWRlcjpiZWZvcmV7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMjRweCl9Lm1haW57d2lkdGg6MTAwJTtoZWlnaHQ6MTAwdmg7bWFyZ2luOjB9Lm1haW4gLmNoYXR7LXdlYmtpdC1ib3gtc2hhZG93OjBweCAwcHggMjBweCAwcHggcmdiYSgwLDAsMCwwLjIpOy1tb3otYm94LXNoYWRvdzowcHggMHB4IDIwcHggMHB4IHJnYmEoMCwwLDAsMC4yKTtib3gtc2hhZG93OjBweCAwcHggMjBweCAwcHggcmdiYSgwLDAsMCwwLjIpO2Rpc3BsYXk6ZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtoZWlnaHQ6MTAwJX0ubWFpbiAuY2hhdCAuY29udGVudHtwYWRkaW5nOjIwcHggMCAwO292ZXJmbG93LXg6aGlkZGVuO292ZXJmbG93LXk6c2Nyb2xsO2Rpc3BsYXk6ZmxleDtoZWlnaHQ6Y2FsYygxMDB2aCAtIDIxOHB4KX0ubWFpbiAuY2hhdCAuY29udGVudCAubWVzc2FnZXtkaXNwbGF5OmZsZXg7ZGlzcGxheTotbXMtZmxleGJveDstbXMtZmxleC1hbGlnbjpmbGV4LWVuZDthbGlnbi1pdGVtczpmbGV4LWVuZDttYXJnaW4tYm90dG9tOjIwcHh9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm1lc3NhZ2UgLnRleHQtbWFpbiAudGV4dHtwYWRkaW5nOjE1cHg7YmFja2dyb3VuZDojZmZmO2JvcmRlci1yYWRpdXM6NnB4O2JvcmRlci1yYWRpdXM6MTVweDstd2Via2l0LWJveC1zaGFkb3c6MHB4IDBweCAyMHB4IDBweCByZ2JhKDAsMCwwLDAuMik7LW1vei1ib3gtc2hhZG93OjBweCAwcHggMjBweCAwcHggcmdiYSgwLDAsMCwwLjIpO2JveC1zaGFkb3c6MHB4IDBweCAyMHB4IDBweCByZ2JhKDAsMCwwLDAuMik7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWF4LXdpZHRoOjQ1MHB4fS5tYWluIC5jaGF0IC5jb250ZW50IC5tZXNzYWdlIC50ZXh0LW1haW4gLnRleHQgLmVtYmVkZGVkLWxpbmt7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX0ubWFpbiAuY2hhdCAuY29udGVudCAubWVzc2FnZSAudGV4dC1tYWluIC50ZXh0IC5lbWJlZGRlZC1saW5rOmhvdmVye2NvbG9yOmluaGVyaXQ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm1lc3NhZ2UgLnRleHQtbWFpbiAudGV4dCAubWljcm9saW5rX2NhcmQgLm1pY3JvbGlua19jYXJkX19jb250ZW50e3dpZHRoOjB9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm1lc3NhZ2UgLnRleHQtbWFpbiAudGV4dCAubWljcm9saW5rX2NhcmQ6aG92ZXJ7Y29sb3I6aW5pdGlhbH0ubWFpbiAuY2hhdCAuY29udGVudCAubWVzc2FnZSAudGV4dC1tYWluIC50ZXh0IC5hdHRhY2htZW50e2Rpc3BsYXk6ZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm1lc3NhZ2UgLnRleHQtbWFpbiAudGV4dCAuYXR0YWNobWVudCAuZmlsZSBoNXtmb250LXdlaWdodDo0MDA7Zm9udC1zaXplOjE2cHg7Y29sb3I6IzIxOTZmMztsaW5lLWhlaWdodDoxLjQ7bWFyZ2luLWJvdHRvbTo1cHh9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm1lc3NhZ2UgLnRleHQtbWFpbiAudGV4dCAuYXR0YWNobWVudCAuZmlsZSBhOmhvdmVye3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm1lc3NhZ2UgLnRleHQtbWFpbiAudGV4dCAuYXR0YWNobWVudCAuYXR0YWNoe3dpZHRoOjQycHg7aGVpZ2h0OjQycHg7cGFkZGluZzoxMnB4O21hcmdpbi1yaWdodDoxNXB4fS5tYWluIC5jaGF0IC5jb250ZW50IC5tZXNzYWdlIC50ZXh0LW1haW4gLnRleHQudHlwaW5ne3BhZGRpbmc6OHB4IDEycHh9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm1lc3NhZ2UgLnRleHQtbWFpbiAudGV4dC5tZXstd2Via2l0LXRyYW5zaXRpb246YWxsIDAuM3M7LW1vei10cmFuc2l0aW9uOmFsbCAwLjNzO3RyYW5zaXRpb246YWxsIDAuM3M7YmFja2dyb3VuZC1jb2xvcjojMjE5NmYzfS5tYWluIC5jaGF0IC5jb250ZW50IC5tZXNzYWdlIC50ZXh0LW1haW4gLnRleHQubWUuaW1hZ2V7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1fS5tYWluIC5jaGF0IC5jb250ZW50IC5tZXNzYWdlIC50ZXh0LW1haW4gLnRleHQubWUgLmF0dGFjaG1lbnQgLmF0dGFjaHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Y29sb3I6IzIxOTZmM30ubWFpbiAuY2hhdCAuY29udGVudCAubWVzc2FnZSAudGV4dC1tYWluIC50ZXh0Lm1lIC5hdHRhY2htZW50IC5maWxlIGg1LC5tYWluIC5jaGF0IC5jb250ZW50IC5tZXNzYWdlIC50ZXh0LW1haW4gLnRleHQubWUgLmF0dGFjaG1lbnQgLmZpbGUgYTpob3Zlcntjb2xvcjojZmZmfS5tYWluIC5jaGF0IC5jb250ZW50IC5tZXNzYWdlIC50ZXh0LW1haW4gLnRleHQubWUgLmF0dGFjaG1lbnQgLmZpbGUgc3Bhbntjb2xvcjojZmZmO3RleHQtYWxpZ246bGVmdH0ubWFpbiAuY2hhdCAuY29udGVudCAubWVzc2FnZSAudGV4dC1tYWluIC50ZXh0Lm1lPmRpdj5we2NvbG9yOiNmZmZ9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm1lc3NhZ2UgLnRleHQtbWFpbiAudGV4dD5kaXY+cHtmb250LXdlaWdodDo0MDA7Zm9udC1zaXplOjE2cHg7Y29sb3I6I2EwYTBhMDtsaW5lLWhlaWdodDoxLjQ7d29yZC1icmVhazpicmVhay1hbGx9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm1lc3NhZ2UgLnRleHQtbWFpbj5zcGFue2NvbG9yOiNhMGEwYTB9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm1lc3NhZ2U6bGFzdC1jaGlsZHttYXJnaW4tYm90dG9tOjUwcHh9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm1lc3NhZ2UubWV7anVzdGlmeS1jb250ZW50OmZsZXgtZW5kfS5tYWluIC5jaGF0IC5jb250ZW50IC5tZXNzYWdlLm1lOmxhc3QtY2hpbGR7bWFyZ2luLWJvdHRvbTo0M3B4fS5tYWluIC5jaGF0IC5jb250ZW50IC5tZXNzYWdlLm1lIHNwYW57dGV4dC1hbGlnbjpyaWdodH0ubWFpbiAuY2hhdCAuY29udGVudCAubWVzc2FnZSAuYXZhdGFyLW1ke21hcmdpbi1yaWdodDoxNXB4fS5tYWluIC5jaGF0IC5jb250ZW50IC5tZXNzYWdlIC50ZXh0LWdyb3Vwe2Rpc3BsYXk6ZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94Oy1tcy1mbGV4LWFsaWduOmZsZXgtc3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47d2lkdGg6MTAwJTttYXJnaW4tYm90dG9tOjEwcHh9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm1lc3NhZ2UgLnRleHQtZ3JvdXA+YXtkaXNwbGF5OmNvbnRlbnRzfS5tYWluIC5jaGF0IC5jb250ZW50IC5tZXNzYWdlIC50ZXh0LWdyb3VwLm1le2FsaWduLWl0ZW1zOmZsZXgtZW5kfS5tYWluIC5jaGF0IC5jb250ZW50IC5tZXNzYWdlIHNwYW57Zm9udC13ZWlnaHQ6NDAwO2ZvbnQtc2l6ZToxNHB4O2Rpc3BsYXk6YmxvY2t9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm1lc3NhZ2Ugc3Bhbj4ubWF0ZXJpYWwtaWNvbnN7Zm9udC13ZWlnaHQ6NjAwO2ZvbnQtc2l6ZToxNHB4O21hcmdpbi1yaWdodDo1cHg7cG9zaXRpb246cmVsYXRpdmU7dG9wOjJweH0ubWFpbiAuY2hhdCAuY29udGVudCAud2F2ZSAuZG90e3dpZHRoOjZweDtoZWlnaHQ6NnB4O2JhY2tncm91bmQ6I2JkYmFjMjtib3JkZXItcmFkaXVzOjEwMCU7YW5pbWF0aW9uOndhdmUgMS4zcyBsaW5lYXIgaW5maW5pdGU7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLXJpZ2h0OjFweH0ubWFpbiAuY2hhdCAuY29udGVudCAud2F2ZSAuZG90Omxhc3Qtb2YtdHlwZXttYXJnaW4tcmlnaHQ6MH0ubWFpbiAuY2hhdCAuY29udGVudCAud2F2ZSAuZG90Om50aC1jaGlsZCgyKXthbmltYXRpb24tZGVsYXk6LTEuMXN9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLndhdmUgLmRvdDpudGgtY2hpbGQoMyl7YW5pbWF0aW9uLWRlbGF5Oi0wLjlzfS5tYWluIC5jaGF0IC5jb250ZW50PmRpdnttYXJnaW4tdG9wOmF1dG87bWFyZ2luLWJvdHRvbTphdXRvfS5tYWluIC5jaGF0IC5jb250ZW50IC5kYXRle2Rpc3BsYXk6ZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZzowIDEyMHB4IDMwcHh9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLmRhdGUgaHJ7d2lkdGg6MTAwJTttYXJnaW46MDtib3JkZXItdG9wOjFweCBzb2xpZCAjMjEyNTI5fS5tYWluIC5jaGF0IC5jb250ZW50IC5kYXRlIHNwYW57ZGlzcGxheTpibG9jaztwYWRkaW5nOjAgMjBweDtjb2xvcjojMjEyNTI5O3doaXRlLXNwYWNlOm5vd3JhcH0ubWFpbiAuY2hhdCAuY29udGVudCAubm8tbWVzc2FnZXN7d2lkdGg6MTAwJTttYXgtd2lkdGg6NDAwcHg7bWFyZ2luOjQ3cHggYXV0byA0NXB4O3RleHQtYWxpZ246Y2VudGVyO2Rpc3BsYXk6YmxvY2s7Y29sb3I6IzIxMjUyOX0ubWFpbiAuY2hhdCAuY29udGVudCAubm8tbWVzc2FnZXMgLm9wdGlvbnN7ZGlzcGxheTpmbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7anVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfS5tYWluIC5jaGF0IC5jb250ZW50IC5uby1tZXNzYWdlcyAub3B0aW9ucyAuYnV0dG9ue3dpZHRoOjU2cHg7aGVpZ2h0OjU2cHg7Ym9yZGVyLXJhZGl1czoxMDAlOy13ZWJraXQtYm94LXNoYWRvdzowIDVweCAxMHB4IDRweCByZ2JhKDAsMCwwLDAuMDQpICFpbXBvcnRhbnQ7LW1vei1ib3gtc2hhZG93OjAgNXB4IDEwcHggNHB4IHJnYmEoMCwwLDAsMC4wNCkgIWltcG9ydGFudDtib3gtc2hhZG93OjAgNXB4IDEwcHggNHB4IHJnYmEoMCwwLDAsMC4wNCkgIWltcG9ydGFudH0ubWFpbiAuY2hhdCAuY29udGVudCAubm8tbWVzc2FnZXMgLm9wdGlvbnMgLmJ1dHRvbjpob3Zlcnstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxLjA1KTstbXMtdHJhbnNmb3JtOnNjYWxlKDEuMDUpO3RyYW5zZm9ybTpzY2FsZSgxLjA1KTstd2Via2l0LXRyYW5zaXRpb246YWxsIDAuM3MgbGluZWFyOy1tb3otdHJhbnNpdGlvbjphbGwgMC4zcyBsaW5lYXI7dHJhbnNpdGlvbjphbGwgMC4zcyBsaW5lYXJ9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm5vLW1lc3NhZ2VzIC5vcHRpb25zIC5idXR0b24gLm1hdGVyaWFsLWljb25ze21hcmdpbi1ib3R0b206MH0ubWFpbiAuY2hhdCAuY29udGVudCAubm8tbWVzc2FnZXMgLm9wdGlvbnMgLmJ1dHRvbjpudGgtY2hpbGQoMil7YmFja2dyb3VuZDojZGMzNTQ1fS5tYWluIC5jaGF0IC5jb250ZW50IC5uby1tZXNzYWdlcyAub3B0aW9ucyAuYnV0dG9uKy5idXR0b257bWFyZ2luLWxlZnQ6MjBweH0ubWFpbiAuY2hhdCAuY29udGVudCAubm8tbWVzc2FnZXMucmVxdWVzdHttYXgtd2lkdGg6NDIwcHg7bWFyZ2luOjUwcHggYXV0b30ubWFpbiAuY2hhdCAuY29udGVudCAubm8tbWVzc2FnZXMgLm1hdGVyaWFsLWljb25ze21hcmdpbi1ib3R0b206MjBweDtmb250LXdlaWdodDo2MDB9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm5vLW1lc3NhZ2VzIC5hdmF0YXIteGx7bWFyZ2luLWJvdHRvbTozMnB4fS5tYWluIC5jaGF0IC5jb250ZW50IC5uby1tZXNzYWdlcyBoNXtmb250LXdlaWdodDo0MDA7Zm9udC1zaXplOjE4cHg7bGluZS1oZWlnaHQ6MS43O21hcmdpbi1ib3R0b206NXB4O2Rpc3BsYXk6YmxvY2t9Lm1haW4gLmNoYXQgLmNvbnRlbnQgLm5vLW1lc3NhZ2VzIGg1PnNwYW57Zm9udC1zaXplOjE4cHg7bGluZS1oZWlnaHQ6MS43fS5tYWluIC5jaGF0IC5jb250ZW50IC5uby1tZXNzYWdlcyBwe2ZvbnQtd2VpZ2h0OjQwMDtmb250LXNpemU6MThweDttYXJnaW4tYm90dG9tOjEwcHh9Lm1haW4gLmNoYXQgLmJ0bntwYWRkaW5nOjA7bGluZS1oZWlnaHQ6MH0ubWFpbiAuY2hhdCAuYnRuLmRpc2FibGVke29wYWNpdHk6MX0ubWFpbiAuY2hhdCAuYnRuLmRpc2FibGVkOmhvdmVye2NvbG9yOmluaGVyaXQgIWltcG9ydGFudDtvcGFjaXR5OjF9Lm1haW4gLmNoYXQgLmF0dGFjaHtiYWNrZ3JvdW5kLWNvbG9yOiMyMTk2ZjM7Y29sb3I6I2ZmZjtib3JkZXItcmFkaXVzOjEwMCV9Lm1haW4gLmNoYXQgLmF0dGFjaDpob3Zlcntjb2xvcjojZmZmO29wYWNpdHk6MC44fS5tYWluIC5jaGF0IC50b3B7LXdlYmtpdC1ib3gtc2hhZG93OjBweCAwcHggMjBweCAwcHggcmdiYSgwLDAsMCwwLjIpOy1tb3otYm94LXNoYWRvdzowcHggMHB4IDIwcHggMHB4IHJnYmEoMCwwLDAsMC4yKTtib3gtc2hhZG93OjBweCAwcHggMjBweCAwcHggcmdiYSgwLDAsMCwwLjIpO3BhZGRpbmc6MjBweCA1cHg7YmFja2dyb3VuZDojZmZmfS5tYWluIC5jaGF0IC50b3AgLmluc2lkZXtkaXNwbGF5OmZsZXg7ZGlzcGxheTotbXMtZmxleGJveDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfS5tYWluIC5jaGF0IC50b3AgLmluc2lkZSAuZGF0YSBoNXt3aWR0aDoxMDAlfS5tYWluIC5jaGF0IC50b3AgLmluc2lkZSAuc3RhdHVze3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6NHB4O3JpZ2h0OjA7d2lkdGg6MjBweDtoZWlnaHQ6MjBweDtib3JkZXI6NXB4IHNvbGlkICNmZmY7Ym9yZGVyLXJhZGl1czoxMDAlO21hcmdpbi10b3A6MDttYXJnaW4tcmlnaHQ6MTBweH0ubWFpbiAuY2hhdCAudG9wIC5pbnNpZGUgLnN0YXR1cyAub25saW5le2NvbG9yOiMyMTk2ZjN9Lm1haW4gLmNoYXQgLnRvcCAuaW5zaWRlIC5zdGF0dXMgLm9mZmxpbmV7Y29sb3I6I2NjY30ubWFpbiAuY2hhdCAudG9wIC5pbnNpZGUgLnN0YXR1cyAubWF0ZXJpYWwtaWNvbnN7cG9zaXRpb246YWJzb2x1dGU7bGVmdDotM3B4O2JvdHRvbTotM3B4O2ZvbnQtc2l6ZToxNnB4fS5tYWluIC5jaGF0IC50b3AgLmluc2lkZSAuYnRue2NvbG9yOiMyMTk2ZjM7bGluZS1oZWlnaHQ6MDttYXJnaW4tbGVmdDozMHB4O3BhZGRpbmc6MH0ubWFpbiAuY2hhdCAudG9wIC5pbnNpZGUgLmJ0bjpob3ZlcntiYWNrZ3JvdW5kOiNlOGU4ZTh9Lm1haW4gLmNoYXQgLnRvcCAuaW5zaWRlIC5kcm9wZG93bi1tZW51LXJpZ2h0e3JpZ2h0OjAgIWltcG9ydGFudDtib3R0b206aW5oZXJpdCAhaW1wb3J0YW50fS5tYWluIC5jaGF0IC50b3AgLmluc2lkZSAuZHJvcGRvd24gLmJ0bnttYXJnaW4tcmlnaHQ6MH0ubWFpbiAuY2hhdCAuYm90dG9te2Rpc3BsYXk6ZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94Oy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZzozMHB4IDA7Ym9yZGVyLXRvcDoyLjVweCBzb2xpZCAjZmZmfS5tYWluIC5jaGF0IC5ib3R0b20gLnJ0YXtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlfS5tYWluIC5jaGF0IC5ib3R0b20gLnJ0YV9fYXV0b2NvbXBsZXRle3Bvc2l0aW9uOmFic29sdXRlO3RvcDp1bnNldCAhaW1wb3J0YW50O2xlZnQ6NyUgIWltcG9ydGFudDtib3R0b206NzclO2JvcmRlcjoxcHggc29saWQgI2JkYmFjMjtib3JkZXItcmFkaXVzOjVweDttYXgtaGVpZ2h0OjI1MHB4O2JhY2tncm91bmQtY29sb3I6I2ZmZjtvdmVyZmxvdzphdXRvfS5tYWluIC5jaGF0IC5ib3R0b20gLnJ0YV9fYXV0b2NvbXBsZXRlIHVse2Rpc3BsYXk6ZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtwYWRkaW5nOjA7bWFyZ2luOjB9Lm1haW4gLmNoYXQgLmJvdHRvbSAucnRhX19hdXRvY29tcGxldGUgdWwgbGl7cGFkZGluZzozcHggMjBweDtjb2xvcjojMjE5NmYzO2N1cnNvcjpwb2ludGVyfS5tYWluIC5jaGF0IC5ib3R0b20gLnJ0YV9fYXV0b2NvbXBsZXRlIHVsIGxpOmhvdmVye2JhY2tncm91bmQtY29sb3I6IzIxOTZmMztjb2xvcjojZmZmfS5tYWluIC5jaGF0IC5ib3R0b20gbGFiZWx7bWFyZ2luLWJvdHRvbTowfS5tYWluIC5jaGF0IC5ib3R0b20gbGFiZWwgaW5wdXR7ZGlzcGxheTpub25lfS5tYWluIC5jaGF0IC5ib3R0b20gLmZvcm0tY29udHJvbHtib3JkZXItcmFkaXVzOjUwcHg7LXdlYmtpdC1ib3gtc2hhZG93OjBweCAwcHggMjRweCAwcHggcmdiYSgwLDAsMCwwLjIpOy1tb3otYm94LXNoYWRvdzowcHggMHB4IDI0cHggMHB4IHJnYmEoMCwwLDAsMC4yKTtib3gtc2hhZG93OjBweCAwcHggMjRweCAwcHggcmdiYSgwLDAsMCwwLjIpO3BhZGRpbmc6MTZweCA1OHB4O2hlaWdodDo1NnB4O3Jlc2l6ZTpub25lO2ZvbnQtd2VpZ2h0OjQwMDtiYWNrZ3JvdW5kOndoaXRlfS5tYWluIC5jaGF0IC5ib3R0b20gLmZvcm0tY29udHJvbDpkaXNhYmxlZHtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjV9Lm1haW4gLmNoYXQgLmJvdHRvbSAuZm9ybS1jb250cm9sOjpwbGFjZWhvbGRlcntvdmVyZmxvdzpoaWRkZW47dGV4dC1vdmVyZmxvdzplbGxpcHNpczt3aGl0ZS1zcGFjZTpub3dyYXB9Lm1haW4gLmNoYXQgLmJvdHRvbSAuZW1vamktbWFydHtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0yJTtib3R0b206ODAlfS5tYWluIC5jaGF0IC5ib3R0b20gLmJ0bntjb2xvcjojMjE5NmYzO2xpbmUtaGVpZ2h0OjA7cGFkZGluZzowfS5tYWluIC5jaGF0IC5ib3R0b20gLmJ0bi5lbW90aWNvbnN7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7bGVmdDowO2JvdHRvbTowO3BhZGRpbmc6MCAxNXB4IDAgMjBweH0ubWFpbiAuY2hhdCAuYm90dG9tIC5idG4uZW1vdGljb25zOmhvdmVye2JhY2tncm91bmQ6I2Y1ZjVmNTtib3JkZXItcmFkaXVzOjUwJSAwJSAwJSA1MCV9Lm1haW4gLmNoYXQgLmJvdHRvbSAuYnRuLnNlbmR7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDtib3R0b206MDtwYWRkaW5nOjAgMjBweCAwIDE1cHh9Lm1haW4gLmNoYXQgLmJvdHRvbSAuYnRuLnNlbmQ6aG92ZXJ7YmFja2dyb3VuZDojZjVmNWY1O2JvcmRlci1yYWRpdXM6MCUgNTAlIDUwJSAwJX0ubWFpbiAuY2hhdCAuYm90dG9tIC5idG4uYXR0YWNoe3dpZHRoOjU2cHg7aGVpZ2h0OjU2cHg7cGFkZGluZzoxNnB4O21hcmdpbi1sZWZ0OjIwcHg7Y29sb3I6I2ZmZjtib3gtc2hhZG93OjAgNXB4IDEwcHggNHB4IHJnYmEoMCwwLDAsMC4wNCl9Lm1haW4gLmNoYXQgLmJvdHRvbSAuYnRuLmF0dGFjaDpob3Zlcntjb2xvcjojZmZmfS5tYWluIC5jaGF0IC5ib3R0b20gLmJ0bi5hdHRhY2guYnRuLmRpc2FibGVkOmhvdmVye2NvbG9yOiNmZmYgIWltcG9ydGFudH0ubWFpbiAuc3RhcnR7ZGlzcGxheTpmbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7anVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3dpZHRoOjEwMCV9Lm1haW4gLnN0YXJ0IC5jb250ZW50e3dpZHRoOjEwMCU7dGV4dC1hbGlnbjpjZW50ZXJ9Lm1haW4gLnN0YXJ0IC5jb250ZW50IGgxe2ZvbnQtd2VpZ2h0OjgwMDtmb250LXNpemU6NDZweDtjb2xvcjojMjEyNTI5O21hcmdpbi1ib3R0b206NDBweH0ubWFpbiAuc3RhcnQgLmNvbnRlbnQgcHtmb250LXdlaWdodDo0MDA7Zm9udC1zaXplOjE2cHg7bWFyZ2luLWJvdHRvbToyMHB4fS5tYWluIC5zdGFydCAuY29udGVudCAudGhpcmQtcGFydHl7ZGlzcGxheTpmbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7anVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO21hcmdpbi1ib3R0b206MzhweH0ubWFpbiAuc3RhcnQgLmNvbnRlbnQgLnRoaXJkLXBhcnR5IC5pdGVte2Rpc3BsYXk6ZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2p1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nOjE1cHg7bWFyZ2luLXJpZ2h0OjIwcHg7d2lkdGg6NjBweDtoZWlnaHQ6NjBweDtib3JkZXItcmFkaXVzOjEwMCU7LXdlYmtpdC1ib3gtc2hhZG93OjAgMCAyMHB4IHJnYmEoMCwwLDAsMC4wNCk7LW1vei1ib3gtc2hhZG93OjAgMCAyMHB4IHJnYmEoMCwwLDAsMC4wNCk7Ym94LXNoYWRvdzowIDAgMjBweCByZ2JhKDAsMCwwLDAuMDQpOy13ZWJraXQtdHJhbnNpdGlvbjphbGwgMC4zczstbW96LXRyYW5zaXRpb246YWxsIDAuM3M7dHJhbnNpdGlvbjphbGwgMC4zc30ubWFpbiAuc3RhcnQgLmNvbnRlbnQgLnRoaXJkLXBhcnR5IC5pdGVtOmhvdmVyey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTVweCkgdHJhbnNsYXRlWigwKTstbXMtdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTVweCkgdHJhbnNsYXRlWigwKTt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtNXB4KSB0cmFuc2xhdGVaKDApO29wYWNpdHk6MC45fS5tYWluIC5zdGFydCAuY29udGVudCAudGhpcmQtcGFydHkgLml0ZW06bGFzdC1vZi10eXBle21hcmdpbi1yaWdodDowfS5tYWluIC5zdGFydCAuY29udGVudCAudGhpcmQtcGFydHkgLml0ZW0gLm1hdGVyaWFsLWljb25ze2ZvbnQtc2l6ZTozMHB4O2NvbG9yOiNmZmZ9Lm1haW4gLnN0YXJ0IC5jb250ZW50IC50aGlyZC1wYXJ0eSAuaXRlbSBpbWd7d2lkdGg6MjVweDtoZWlnaHQ6MjVweH0ubWFpbiAuc3RhcnQgLmNvbnRlbnQgZm9ybXt3aWR0aDoxMDAlO21heC13aWR0aDozNjZweDttYXJnaW46MCBhdXRvfS5tYWluIC5zdGFydCAuY29udGVudCAuZm9ybS1ncm91cHtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tYm90dG9tOjE1cHh9Lm1haW4gLnN0YXJ0IC5jb250ZW50IC5mb3JtLWdyb3VwIC5mb3JtLWNvbnRyb2x7aGVpZ2h0OjU2cHg7cGFkZGluZzowIDIwcHggMCA1OHB4O2ZvbnQtd2VpZ2h0OjQwMDtib3JkZXI6MnB4IHNvbGlkIHRyYW5zcGFyZW50fS5tYWluIC5zdGFydCAuY29udGVudCAuZm9ybS1ncm91cCAuZm9ybS1jb250cm9sOmZvY3Vze2JvcmRlcjoycHggc29saWQgIzIxOTZmMyAhaW1wb3J0YW50fS5tYWluIC5zdGFydCAuY29udGVudCAuZm9ybS1ncm91cCAuZm9ybS1jb250cm9sOjpwbGFjZWhvbGRlcntmb250LXdlaWdodDo0MDB9Lm1haW4gLnN0YXJ0IC5jb250ZW50IC5mb3JtLWdyb3VwIC5idG4uaWNvbntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7Ym90dG9tOjA7Y29sb3I6I2JkYmFjMjtsaW5lLWhlaWdodDowO3BhZGRpbmc6MCAxMHB4IDAgMjBweH0ubWFpbiAuc3RhcnQgLmNvbnRlbnQgLmNhbGxvdXQgc3Bhbntmb250LXNpemU6MTZweH0ubWFpbiAuc3RhcnQgLmNvbnRlbnQgLmNhbGxvdXQgc3Bhbj5he2NvbG9yOiMyMTk2ZjN9Lm1haW4gLnN0YXJ0IC5jb250ZW50IC5jYWxsb3V0IHNwYW4+YTpob3Zlcnt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfS5uYXZpZ2F0aW9uey13ZWJraXQtYm94LXNoYWRvdzowcHggMHB4IDIwcHggMHB4IHJnYmEoMCwwLDAsMC4xKTstbW96LWJveC1zaGFkb3c6MHB4IDBweCAyMHB4IDBweCByZ2JhKDAsMCwwLDAuMSk7Ym94LXNoYWRvdzowcHggMHB4IDIwcHggMHB4IHJnYmEoMCwwLDAsMC4xKTtiYWNrZ3JvdW5kOiNmZmZ9Lm5hdmlnYXRpb24gLmluc2lkZSAubWVudSAuYnRue3BhZGRpbmc6MDtjb2xvcjppbmhlcml0fS5uYXZpZ2F0aW9uIC5pbnNpZGUgLm1lbnUgLmJ0bjpsYXN0LWNoaWxke21hcmdpbi1ib3R0b206MzBweH0ubmF2aWdhdGlvbiAuaW5zaWRlIC5tZW51IC5tYXRlcmlhbC1pY29uc3tkaXNwbGF5OmJsb2NrO2ZvbnQtc2l6ZTo0NXB4O21hcmdpbi1ib3R0b206NDBweH0ubmF2aWdhdGlvbiAuaW5zaWRlIC5tZW51IC5wb3dlcjpob3Zlcntjb2xvcjojZGMzNTQ1fS5uYXZpZ2F0aW9uIC5pbnNpZGUgLm1lbnUgLnBvd2VyIC5tYXRlcmlhbC1pY29uc3tmb250LXdlaWdodDo2MDA7Zm9udC1zaXplOjQ1cHg7ZGlzcGxheTpibG9jazttYXJnaW4tYm90dG9tOjB9Lm5hdmlnYXRpb24gLmluc2lkZSAubWVudSAuYXZhdGFyLXhsOmhvdmVye2JvcmRlcjozcHggc29saWQgIzIxOTZmM30ubmF2aWdhdGlvbiAuaW5zaWRlIC5tZW51IC5tb2RlOmhvdmVye2NvbG9yOiMyMTk2ZjN9Lm5hdmlnYXRpb24gLmluc2lkZSAubWVudT5hLmFjdGl2ZXtjb2xvcjojMjE5NmYzfS5yZXF1ZXN0c3tkaXNwbGF5OmZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47Ym9yZGVyLXJhZGl1czo2cHg7LXdlYmtpdC1ib3gtc2hhZG93OjAgMCAyMHB4IHJnYmEoMCwwLDAsMC4wNCk7LW1vei1ib3gtc2hhZG93OjAgMCAyMHB4IHJnYmEoMCwwLDAsMC4wNCk7Ym94LXNoYWRvdzowIDAgMjBweCByZ2JhKDAsMCwwLDAuMDQpO3Bvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7YmFja2dyb3VuZDojZmZmO3BvaW50ZXItZXZlbnRzOmF1dG99LnJlcXVlc3RzIC5tb2RhbC10aXRsZXt3aWR0aDoxMDAlfS5yZXF1ZXN0cyAubW9kYWwtdGl0bGUgLnRpdGxle2Rpc3BsYXk6ZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7cGFkZGluZzoxNXB4IDIwcHg7YmFja2dyb3VuZDojZmRmZGZkfS5yZXF1ZXN0cyAubW9kYWwtdGl0bGUgLnRpdGxlIGgxe2ZvbnQtd2VpZ2h0OjgwMDtmb250LXNpemU6MjJweDtjb2xvcjojMjEyNTI5O21hcmdpbi1ib3R0b206MH0ucmVxdWVzdHMgLm1vZGFsLXRpdGxlIC50aXRsZSAubWF0ZXJpYWwtaWNvbnN7Zm9udC13ZWlnaHQ6ODAwfS5yZXF1ZXN0cyAubW9kYWwtdGl0bGUgLnRpdGxlIC5jbG9zZTpob3Zlcntjb2xvcjojMjEyNTI5ICFpbXBvcnRhbnR9LnJlcXVlc3RzIC5jb250ZW50e3BhZGRpbmc6MThweCAyMHB4IDIwcHh9LnJlcXVlc3RzIC5jb250ZW50IC5mb3JtLWdyb3Vwe21hcmdpbi1ib3R0b206MzBweH0ucmVxdWVzdHMgLmNvbnRlbnQgLmZvcm0tZ3JvdXA6bGFzdC1vZi10eXBle21hcmdpbi1ib3R0b206MzNweH0ucmVxdWVzdHMgLmNvbnRlbnQgLmZvcm0tZ3JvdXAgLmZvcm0tY29udHJvbHtwYWRkaW5nOjAgMThweDtoZWlnaHQ6NTZweDtmb250LXdlaWdodDo0MDA7Ym9yZGVyOjJweCBzb2xpZCB0cmFuc3BhcmVudH0ucmVxdWVzdHMgLmNvbnRlbnQgLmZvcm0tZ3JvdXAgLmZvcm0tY29udHJvbDpmb2N1c3tib3JkZXI6MnB4IHNvbGlkICMyMTk2ZjMgIWltcG9ydGFudH0ucmVxdWVzdHMgLmNvbnRlbnQgLmZvcm0tZ3JvdXAgLmZvcm0tY29udHJvbDo6cGxhY2Vob2xkZXJ7Zm9udC13ZWlnaHQ6NDAwfS5yZXF1ZXN0cyAuY29udGVudCAudGV4dC1jb250cm9se3dpZHRoOjEwMCU7aGVpZ2h0OjEzMHB4O3BhZGRpbmc6MTRweCAxN3B4O2JhY2tncm91bmQ6I2Y1ZjVmNTtmb250LXdlaWdodDo0MDA7Zm9udC1zaXplOjE2cHg7Y29sb3I6I2JkYmFjMiAhaW1wb3J0YW50O2JvcmRlcjoycHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJhZGl1czo2cHggIWltcG9ydGFudH0ucmVxdWVzdHMgLmNvbnRlbnQgLnRleHQtY29udHJvbDpmb2N1c3tib3JkZXI6MnB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci1yYWRpdXM6NnB4O291dGxpbmU6MH0ucmVxdWVzdHMgLmNvbnRlbnQgLnRleHQtY29udHJvbDo6cGxhY2Vob2xkZXJ7Y29sb3I6I2JkYmFjMn0ucmVxdWVzdHMgLmNvbnRlbnQgLm1lbWJlcnN7cG9zaXRpb246YWJzb2x1dGU7dG9wOjI4JTtsZWZ0OjklO3dpZHRoOjgyJTtoZWlnaHQ6NjJweDtkaXNwbGF5OmZsZXg7b3ZlcmZsb3c6c2Nyb2xsO292ZXJmbG93LXk6aGlkZGVufS5yZXF1ZXN0cyAuY29udGVudCAubWVtYmVycyAudXNlcntkaXNwbGF5OmZsZXg7ZGlzcGxheTotbXMtZmxleGJveDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO21hcmdpbi1yaWdodDo3cHg7cGFkZGluZzoxNXB4O2JhY2tncm91bmQ6I2ZkZmRmZDtib3JkZXItcmFkaXVzOjZweDttYXJnaW4tYm90dG9tOjMwcHg7ei1pbmRleDoyfS5yZXF1ZXN0cyAuY29udGVudCAubWVtYmVycyAudXNlciAuYXZhdGFyLXNte21hcmdpbi1yaWdodDoxMHB4O2JveC1zaGFkb3c6MCAwIDEwcHggMXB4IHJnYmEoMCwwLDAsMC4wNCl9LnJlcXVlc3RzIC5jb250ZW50IC5tZW1iZXJzIC51c2VyIGg1e2ZvbnQtd2VpZ2h0OjYwMDtmb250LXNpemU6MTVweDtjb2xvcjojMjEyNTI5O2xpbmUtaGVpZ2h0OjEuNzttYXJnaW4tYm90dG9tOjA7bWFyZ2luLXJpZ2h0OjZweDt3aGl0ZS1zcGFjZTpub3dyYXB9LnJlcXVlc3RzIC5jb250ZW50IC5tZW1iZXJzIC51c2VyIC5idG4gLm1hdGVyaWFsLWljb25ze2ZvbnQtd2VpZ2h0OjYwMDtmb250LXNpemU6MTZweH0ucmVxdWVzdHMgLmNvbnRlbnQgLmJ1dHRvbntwYWRkaW5nOjE2cHggMjVweDtsaW5lLWhlaWdodDoxLjV9LnJlcXVlc3RzIC5idG57cGFkZGluZzowO2xpbmUtaGVpZ2h0OjB9LmNyZWF0ZXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MzBweDtyaWdodDoyMHB4O2JvdHRvbTowO3dpZHRoOjUwcHg7aGVpZ2h0OjUwcHg7Ym9yZGVyLXJhZGl1czoxMDAlOy13ZWJraXQtYm94LXNoYWRvdzowIDAgMzBweCA1cHggcmdiYSgwLDAsMCwwLjA0KTstbW96LWJveC1zaGFkb3c6MCAwIDMwcHggNXB4IHJnYmEoMCwwLDAsMC4wNCk7Ym94LXNoYWRvdzowIDAgMzBweCA1cHggcmdiYSgwLDAsMCwwLjA0KTtiYWNrZ3JvdW5kOiNmZmY7ZGlzcGxheTpmbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7anVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmc6MDstd2Via2l0LXRyYW5zaXRpb246YWxsIDAuM3M7LW1vei10cmFuc2l0aW9uOmFsbCAwLjNzO3RyYW5zaXRpb246YWxsIDAuM3M7ZmxvYXQ6cmlnaHQ7Y3Vyc29yOnBvaW50ZXJ9LmNyZWF0ZTpob3Zlcnstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGVZKC01cHgpIHRyYW5zbGF0ZVooMCk7LW1zLXRyYW5zZm9ybTp0cmFuc2xhdGVZKC01cHgpIHRyYW5zbGF0ZVooMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTVweCkgdHJhbnNsYXRlWigwKX0uY3JlYXRlIC5tYXRlcmlhbC1pY29uc3tmb250LXdlaWdodDpub3JtYWwgIWltcG9ydGFudDtmb250LXNpemU6MjJweDtjb2xvcjojYmRiYWMyO21hcmdpbi1ib3R0b206MCAhaW1wb3J0YW50fS5jcmVhdGUuYnRuOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZXtib3gtc2hhZG93OjAgMCAzMHB4IDVweCByZ2JhKDAsMCwwLDAuMDQpfS5maWxlQ29udGFpbmVye2JhY2tncm91bmQtY29sb3I6I2Y1ZjVmNTtjb2xvcjojMjEyNTI5fS5maWxlQ29udGFpbmVyIC51cGxvYWRQaWN0dXJlQ29udGFpbmVye3dpZHRoOjQ2JTttYXJnaW46MiV9Lm5vdC1mb3VuZHtoZWlnaHQ6MTAwdmg7YmFja2dyb3VuZDp3aGl0ZX0ubm90LWZvdW5kIHN2Z3twb3NpdGlvbjphYnNvbHV0ZTt0b3A6NTAlO2xlZnQ6NTAlO21hcmdpbi10b3A6LTI1MHB4O21hcmdpbi1sZWZ0Oi00MDBweH0ubm90LWZvdW5kLWNvbnRlbnR7cG9zaXRpb246YWJzb2x1dGU7dG9wOjUwJTtsZWZ0OjUwJTttYXJnaW4tdG9wOi0xMDBweDttYXJnaW4tbGVmdDo1MHB4O3dpZHRoOjM4MHB4O2hlaWdodDoyMDBweDtmb250LXdlaWdodDozMDA7Y29sb3I6IzIxMjUyOTtmb250LWZhbWlseTpSb2JvdG99Lm5vdC1mb3VuZC1jb250ZW50IGgxe2ZvbnQtc2l6ZTo2MHB4O2xpbmUtaGVpZ2h0OjQ2cHg7bWFyZ2luLWJvdHRvbTo0MHB4fS5ub3QtZm91bmQgLmJ1dHRvbnMtY29uIC5hY3Rpb24tbGluay13cmFwe21hcmdpbi10b3A6NDBweH0ubm90LWZvdW5kIC5idXR0b25zLWNvbiAuYWN0aW9uLWxpbmstd3JhcCBhe3BhZGRpbmc6OHB4IDI1cHg7YmFja2dyb3VuZDojMjBjOTk3O2JvcmRlci1yYWRpdXM6NHB4O2ZvbnQtd2VpZ2h0OmJvbGQ7Zm9udC1zaXplOjE0cHg7Y29sb3I6I2ZmZjttYXJnaW4tcmlnaHQ6MTBweDstd2Via2l0LXRyYW5zaXRpb246YWxsIDAuM3MgbGluZWFyOy1tb3otdHJhbnNpdGlvbjphbGwgMC4zcyBsaW5lYXI7dHJhbnNpdGlvbjphbGwgMC4zcyBsaW5lYXI7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Y3Vyc29yOnBvaW50ZXJ9Lm5vdC1mb3VuZCAuYnV0dG9ucy1jb24gLmFjdGlvbi1saW5rLXdyYXAgYTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNhMGEwYTA7Y29sb3I6I2ZmZn0ubm90LWZvdW5kICNQb2x5Z29uLTF7YW5pbWF0aW9uOmZsb2F0IDFzIGluZmluaXRlIGVhc2UtaW4tb3V0IGFsdGVybmF0ZTthbmltYXRpb24tZGVsYXk6MHN9Lm5vdC1mb3VuZCAjUG9seWdvbi0ye2FuaW1hdGlvbjpmbG9hdCAxcyBpbmZpbml0ZSBlYXNlLWluLW91dCBhbHRlcm5hdGU7YW5pbWF0aW9uLWRlbGF5Oi4yc30ubm90LWZvdW5kICNQb2x5Z29uLTN7YW5pbWF0aW9uOmZsb2F0IDFzIGluZmluaXRlIGVhc2UtaW4tb3V0IGFsdGVybmF0ZTthbmltYXRpb24tZGVsYXk6LjRzfS5ub3QtZm91bmQgI1BvbHlnb24tNHthbmltYXRpb246ZmxvYXQgMXMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO2FuaW1hdGlvbi1kZWxheTouNnN9Lm5vdC1mb3VuZCAjUG9seWdvbi01e2FuaW1hdGlvbjpmbG9hdCAxcyBpbmZpbml0ZSBlYXNlLWluLW91dCBhbHRlcm5hdGU7YW5pbWF0aW9uLWRlbGF5Oi44c31AbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KXsuYXNpZGV7d2lkdGg6MTAwJTttaW4td2lkdGg6YXV0bzttYXgtd2lkdGg6YXV0b319QG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KXsuYXBwe2Rpc3BsYXk6ZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94Oy1tcy1mbGV4LWFsaWduOmZsZXgtc3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydH0uc2lnbi1pbiwuc2lnbi11cHtoZWlnaHQ6MTAwdmggIWltcG9ydGFudDttYXJnaW46MCAhaW1wb3J0YW50O2JhY2tncm91bmQ6I2ZkZmRmZH0ubmF2aWdhdGlvbntwb3NpdGlvbjpzdGlja3k7dG9wOjA7ei1pbmRleDoxMDIwO292ZXJmbG93LXg6aGlkZGVuO292ZXJmbG93LXk6YXV0bzt3aWR0aDoxMDAlO21pbi13aWR0aDoxMDBweDttYXgtd2lkdGg6MTAwcHg7ei1pbmRleDoxMDIxfS5uYXZpZ2F0aW9uIC5pbnNpZGV7ZGlzcGxheTpmbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47cGFkZGluZzozMHB4IDAgMDtoZWlnaHQ6MTAwdmh9Lm5hdmlnYXRpb24gLmluc2lkZSAubWVudXtkaXNwbGF5OmZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1iYXNpczphdXRvO2ZsZXgtZ3JvdzoxO2ZsZXgtc2hyaW5rOjA7dGV4dC1hbGlnbjpjZW50ZXJ9Lm5hdmlnYXRpb24gLmluc2lkZSAubWVudSAuZi1ncm93MXtmbGV4LWdyb3c6MX0ubmF2aWdhdGlvbiAuaW5zaWRlIC5tZW51IC5hdmF0YXIteGx7bWFyZ2luLWJvdHRvbTo1MHB4fS5uYXZpZ2F0aW9uOjotd2Via2l0LXNjcm9sbGJhcntkaXNwbGF5Om5vbmV9LnNpZGViYXJ7cG9zaXRpb246c3RpY2t5O3RvcDowO3otaW5kZXg6MTAyMDtvdmVyZmxvdy14OmhpZGRlbjtvdmVyZmxvdy15OnNjcm9sbDt3aWR0aDoxMDAlO2hlaWdodDo5NXZoO21heC13aWR0aDoyNSU7cGFkZGluZzozMHB4IDA7bWFyZ2luOmF1dG8gMTVweH0uc2lkZWJhcjo6LXdlYmtpdC1zY3JvbGxiYXJ7d2lkdGg6NXB4fS5zaWRlYmFyOjotd2Via2l0LXNjcm9sbGJhci10aHVtYntiYWNrZ3JvdW5kOiNmNWY1ZjV9Lm1haW57aGVpZ2h0Ojk1dmg7bWFyZ2luOmF1dG8gMTVweH0ubWFpbiAuc3RhcnR7aGVpZ2h0OjEwMHZofS5tYWluIC5zdGFydCAuY29udGVudCAuY2FsbG91dHtkaXNwbGF5Om5vbmV9Lm1haW4gLnN0YXJ0IC5jb250ZW50IC5mb3JtLXBhcmVudHtkaXNwbGF5OmZsZXh9Lm1haW4gLnN0YXJ0IC5jb250ZW50IC5mb3JtLXBhcmVudCAuZm9ybS1ncm91cHttYXJnaW4tcmlnaHQ6MTVweH0ubWFpbiAuc3RhcnQgLmNvbnRlbnQgLmZvcm0tcGFyZW50IC5mb3JtLWdyb3VwOmxhc3QtY2hpbGR7bWFyZ2luLXJpZ2h0OjB9Lm1haW4gLnN0YXJ0IC5jb250ZW50IGZvcm0uc2lnbnVwe21heC13aWR0aDo0NjZweH0ubWFpbiAuY2FsbCAuY29udGVudCAuaW5zaWRle21heC1oZWlnaHQ6Y2FsYygxMDB2aCAtIDApfS5tYWluIC5jYWxsIC5jb250ZW50IC5pbnNpZGUgLnBhbmVse3BhZGRpbmc6MzBweCAwfX1AbWVkaWEgKG1heC13aWR0aDogOTkxcHgpe2JvZHl7cGFkZGluZy1ib3R0b206NTRweDtiYWNrZ3JvdW5kLWltYWdlOm5vbmUgIWltcG9ydGFudH0uYXNpZGV7ZGlzcGxheTpub25lfS5jaGF0e2hlaWdodDoxMDB2aCAhaW1wb3J0YW50fS5uYXZpZ2F0aW9ue3Bvc2l0aW9uOmZpeGVkO2xlZnQ6MDtyaWdodDowO2JvdHRvbTowO3otaW5kZXg6MTAzMDtib3gtc2hhZG93OjAgMCAyMHB4IDAgcmdiYSgwLDAsMCwwLjA0KX0ubmF2aWdhdGlvbiAuaW5zaWRle2Rpc3BsYXk6ZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2p1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtYWxpZ246ZmxleC1lbmQ7YWxpZ24taXRlbXM6ZmxleC1lbmQ7cGFkZGluZzoxMnB4IDE1cHg7ZmxleC13cmFwOndyYXB9Lm5hdmlnYXRpb24gLmluc2lkZSAubWVudXtmbGV4LXdyYXA6dW5zZXQgIWltcG9ydGFudDthbGlnbi1pdGVtczpmbGV4LWVuZDt3aWR0aDoxMDAlfS5uYXZpZ2F0aW9uIC5pbnNpZGUgLm1lbnUgLmF2YXRhci14bHtkaXNwbGF5Om5vbmV9Lm5hdmlnYXRpb24gLmluc2lkZSAubWVudSAubW9kZXttYXJnaW46YXV0b30ubmF2aWdhdGlvbiAuaW5zaWRlIC5tZW51IC5wb3dlcnttYXJnaW4tYm90dG9tOjAgIWltcG9ydGFudH0ubmF2aWdhdGlvbiAuaW5zaWRlIC5tZW51IC5wb3dlciAubWF0ZXJpYWwtaWNvbnN7Zm9udC1zaXplOjM1cHh9Lm5hdmlnYXRpb24gLmluc2lkZSAubWVudSBhe21hcmdpbi1yaWdodDphdXRvfS5uYXZpZ2F0aW9uIC5pbnNpZGUgLm1lbnUgYTpmaXJzdC1vZi10eXBle21hcmdpbi1sZWZ0OjB9Lm5hdmlnYXRpb24gLmluc2lkZSAubWVudSBhOmxhc3Qtb2YtdHlwZXttYXJnaW4tcmlnaHQ6MH0ubmF2aWdhdGlvbiAuaW5zaWRlIC5tZW51IC5tYXRlcmlhbC1pY29uc3tmb250LXNpemU6MzBweDttYXJnaW4tYm90dG9tOjB9LnNpZGViYXJ7cGFkZGluZzozMHB4IDAgMDtvdmVyZmxvdy14OmhpZGRlbjtvdmVyZmxvdy15OmF1dG87aGVpZ2h0OjEwMHZofS5zaWRlYmFyOjotd2Via2l0LXNjcm9sbGJhcntkaXNwbGF5Om5vbmV9Lm1haW4gLnN0YXJ0e3BhZGRpbmc6NzNweCAwIDc3cHh9Lm1haW4gLnN0YXJ0IC5jb250ZW50IC5idXR0b257bWFyZ2luLWJvdHRvbToyMHB4fS5tYWluIC5zdGFydCAuY29udGVudCAuY2FsbG91dHtkaXNwbGF5OmJsb2NrfS5tYWluIC5jaGF0IC5jb250ZW50e2hlaWdodDo2MDBweH0ubWFpbiAuY2FsbCAuY29udGVudHtwYWRkaW5nOjYwcHggMDtoZWlnaHQ6MTAwJX19QG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KXsuY29udGFpbmVye21heC13aWR0aDoxMDAlfX1AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpey5tYWluIC5jaGF0IC5jb250ZW50e2hlaWdodDoxMDAlfS5tYWluIC5jaGF0IC5ib3R0b217cGFkZGluZzoxNXB4IDA7bWFyZ2luLWJvdHRvbTo1NXB4fX1AbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpey5jb250YWluZXJ7bWF4LXdpZHRoOjEwMCV9fUBtZWRpYSAobWF4LXdpZHRoOiA0NjhweCl7LmNvbnRhaW5lcntwYWRkaW5nLWxlZnQ6NXB4O3BhZGRpbmctcmlnaHQ6NXB4fS5yZXF1ZXN0cyAudGl0bGV7cGFkZGluZzozMHB4IDIwcHh9LnJlcXVlc3RzIC5jb250ZW50e3BhZGRpbmc6MzRweCAyMHB4IDQwcHh9LnJlcXVlc3RzIC5jb250ZW50IC51c2Vye2xlZnQ6MjlweH0ubWFpbiAuc3RhcnQgLmNvbnRlbnQgaDF7Zm9udC1zaXplOjM2cHh9Lm1haW4gLmNhbGwgLmNvbnRlbnQgLm9wdGlvbnMgLm9wdGlvbntwYWRkaW5nOjAgMTVweH0ubm90LWZvdW5kIHN2Z3twb3NpdGlvbjphYnNvbHV0ZTt0b3A6NTAlO2xlZnQ6NTAlO21hcmdpbi10b3A6LTI1MHB4O21hcmdpbi1sZWZ0Oi0xOTBweH0ubm90LWZvdW5kLWNvbnRlbnR7cG9zaXRpb246YWJzb2x1dGU7dG9wOjUwJTtsZWZ0OjUwJTttYXJnaW4tdG9wOi0xMDBweDttYXJnaW4tbGVmdDotMTkwcHg7dGV4dC1hbGlnbjpjZW50ZXJ9fUBtZWRpYSAobWF4LXdpZHRoOiAzNTBweCl7Lm1haW4gLmNhbGwgLmNvbnRlbnQgLm9wdGlvbnMgLm9wdGlvbntwYWRkaW5nOjAgMTJweH0ubWFpbiAuY2FsbCAuY29udGVudCAub3B0aW9ucyAub3B0aW9uLmNhbGwtZW5ke21hcmdpbjowIDE1cHh9fS5zaWRlYmFye2JvcmRlci1yYWRpdXM6MzBweDstd2Via2l0LWJveC1zaGFkb3c6MHB4IDBweCAyMHB4IDBweCByZ2JhKDAsMCwwLDAuMik7LW1vei1ib3gtc2hhZG93OjBweCAwcHggMjBweCAwcHggcmdiYSgwLDAsMCwwLjIpO2JveC1zaGFkb3c6MHB4IDBweCAyMHB4IDBweCByZ2JhKDAsMCwwLDAuMik7YmFja2dyb3VuZDojZmZmfS5zaWRlYmFyIC5yb29tLWluZm97ZGlzcGxheTpmbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47bWFyZ2luLWJvdHRvbToyMHB4fS5zaWRlYmFyIC5yb29tLWluZm8gLmF2YXRhci14bHtoZWlnaHQ6YXV0bzt3aWR0aDoxMDAlO21pbi13aWR0aDoxMDBweDttYXgtd2lkdGg6MTAwcHg7bWFyZ2luLWJvdHRvbToyMHB4O2N1cnNvcjpwb2ludGVyfS5zaWRlYmFyIC5yb29tLWluZm8gaDR7Y29sb3I6IzIxMjUyOX0uc2lkZWJhciAuY29udGFjdHMgLmNvbnRhY3QuYWN0aXZlIC5tYXRlcmlhbC1pY29uc3tjb2xvcjojMjE5NmYzfS5zaWRlYmFyIC5jb250YWN0cyAuY29udGFjdCAuc3RhdHVze3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6NHB4O3JpZ2h0OjA7d2lkdGg6MjBweDtoZWlnaHQ6MjBweDtib3JkZXI6NXB4IHNvbGlkICNmZmY7Ym9yZGVyLXJhZGl1czoxMDAlfS5zaWRlYmFyIC5jb250YWN0cyAuY29udGFjdCAuc3RhdHVzIC5vbmxpbmV7Y29sb3I6IzIxOTZmM30uc2lkZWJhciAuY29udGFjdHMgLmNvbnRhY3QgLnN0YXR1cyAub2ZmbGluZXtjb2xvcjojY2NjfS5zaWRlYmFyIC5jb250YWN0cyAuY29udGFjdCAuc3RhdHVzIC5tYXRlcmlhbC1pY29uc3twb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0zcHg7Ym90dG9tOi0zcHg7Zm9udC1zaXplOjE2cHh9LnNpZGViYXIgLmNvbnRhY3RzIC5jb250YWN0LmFjdGl2ZSwuc2lkZWJhciAuY29udGFjdHMgLmNvbnRhY3Q6aG92ZXJ7Ym9yZGVyLWJvdHRvbToycHggc29saWQgIzIxOTZmM30uc2lkZWJhciAuY29udGFjdHMgYTpob3Zlcntjb2xvcjppbmhlcml0fS5zaWRlYmFyIC5jb250YWN0cyAuc29ydC1tZW1iZXJze2Rpc3BsYXk6ZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOy1tcy1mbGV4LWFsaWduOmZsZXgtc3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydH0uc2lkZWJhciAuY29udGFjdHMgLnNvcnQtbWVtYmVycyBoMXtwYWRkaW5nLWJvdHRvbTowfS5zaWRlYmFyIC5hY2NvcmRpb24gYnV0dG9ue3dpZHRoOjEwMCU7dGV4dC1hbGlnbjpsZWZ0fS5zaWRlYmFyIC5hY2NvcmRpb24gYnV0dG9uIC5tYXRlcmlhbC1pY29uc3std2Via2l0LXRyYW5zaXRpb246YWxsIDAuM3M7LW1vei10cmFuc2l0aW9uOmFsbCAwLjNzO3RyYW5zaXRpb246YWxsIDAuM3M7ZmxvYXQ6cmlnaHR9LnNpZGViYXIgLmFjY29yZGlvbiBidXR0b24gLm1hdGVyaWFsLWljb25zLnJvdGF0ZXstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoLTkwZGVnKTstbXMtdHJhbnNmb3JtOnJvdGF0ZSgtOTBkZWcpO3RyYW5zZm9ybTpyb3RhdGUoLTkwZGVnKX0uc2lkZWJhciAuZGlzY3Vzc2lvbnMgLnNpbmdsZS5hY3RpdmUgLm1hdGVyaWFsLWljb25ze2NvbG9yOiMyMTk2ZjN9LnNpZGViYXIgLmRpc2N1c3Npb25zIC5zaW5nbGUgLnN0YXR1c3twb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjRweDtyaWdodDowO3dpZHRoOjIwcHg7aGVpZ2h0OjIwcHg7Ym9yZGVyOjVweCBzb2xpZCAjZmZmO2JvcmRlci1yYWRpdXM6MTAwJX0uc2lkZWJhciAuZGlzY3Vzc2lvbnMgLnNpbmdsZSAuc3RhdHVzIC5vbmxpbmV7Y29sb3I6IzIxOTZmM30uc2lkZWJhciAuZGlzY3Vzc2lvbnMgLnNpbmdsZSAuc3RhdHVzIC5vZmZsaW5le2NvbG9yOiNjY2N9LnNpZGViYXIgLmRpc2N1c3Npb25zIC5zaW5nbGUgLnN0YXR1cyAubWF0ZXJpYWwtaWNvbnN7cG9zaXRpb246YWJzb2x1dGU7bGVmdDotM3B4O2JvdHRvbTotM3B4O2ZvbnQtc2l6ZToxNnB4fS5zaWRlYmFyIC5kaXNjdXNzaW9ucyAuc2luZ2xlLmFjdGl2ZSwuc2lkZWJhciAuZGlzY3Vzc2lvbnMgLnNpbmdsZTpob3Zlcntib3JkZXItYm90dG9tOjJweCBzb2xpZCAjMjE5NmYzfS5zaWRlYmFyIC5kaXNjdXNzaW9ucyBhOmhvdmVye2NvbG9yOmluaGVyaXR9LnNpZGViYXIgLmRpc2N1c3Npb25zIC5zaW5nbGUuYWN0aXZlIHAsLnNpZGViYXIgLmRpc2N1c3Npb25zIC5zaW5nbGUuYWN0aXZlIHNwYW4sLnNpZGViYXIgLmRpc2N1c3Npb25zIC5zaW5nbGUudW5yZWFkIHAsLnNpZGViYXIgLmRpc2N1c3Npb25zIC5zaW5nbGUudW5yZWFkIHNwYW57Zm9udC13ZWlnaHQ6NTAwICFpbXBvcnRhbnQ7Y29sb3I6IzIxMjUyOX0uc2lkZWJhciAuZGlzY3Vzc2lvbnMgLnNpbmdsZSAubmV3e3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MzlweDtyaWdodDowO3dpZHRoOjMwcHg7aGVpZ2h0OjMwcHg7Ym9yZGVyOjJweCBzb2xpZCAjZmZmO2JvcmRlci1yYWRpdXM6MTAwJTstd2Via2l0LWJveC1zaGFkb3c6NXB4IDAgMTBweCAwIHJnYmEoMCwwLDAsMC4wNCk7LW1vei1ib3gtc2hhZG93OjVweCAwIDEwcHggMCByZ2JhKDAsMCwwLDAuMDQpO2JveC1zaGFkb3c6NXB4IDAgMTBweCAwIHJnYmEoMCwwLDAsMC4wNCk7bWFyZ2luLXRvcDotMjNweDtiYWNrZ3JvdW5kOiNmMGQyNGI7ZGlzcGxheTpmbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7anVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfS5zaWRlYmFyIC5kaXNjdXNzaW9ucyAuc2luZ2xlIC5uZXcgc3Bhbntmb250LXdlaWdodDo1MDA7Zm9udC1zaXplOjEycHg7Y29sb3I6I2ZmZiAhaW1wb3J0YW50fS5zaWRlYmFyIC5zZWFyY2h7bWFyZ2luLWJvdHRvbTozMHB4fS5zaWRlYmFyIC5zZWFyY2ggLmZvcm0tY29udHJvbHtwYWRkaW5nOjAgMTVweCAwIDU0cHg7aGVpZ2h0OjU2cHh9LnNpZGViYXIgLnNlYXJjaCAubG9vcHtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7Ym90dG9tOjA7cGFkZGluZzowIDE1cHg7bWFyZ2luLWJvdHRvbTowICFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6MH0uc2lkZWJhciAuc2VhcmNoIC5sb29wIC5tYXRlcmlhbC1pY29uc3tmb250LXdlaWdodDo2MDA7Zm9udC1zaXplOjI1cHg7Y29sb3I6I2JkYmFjMn0uc2lkZWJhciAuc2VhcmNoIC5sb29wIC5tYXRlcmlhbC1pY29ucy5maWx0ZXItbGlzdHtmb250LXdlaWdodDo0MDB9LnNpZGViYXIgLnNvcnR7ZGlzcGxheTpmbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7anVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1hbGlnbjpiYXNlbGluZTthbGlnbi1pdGVtczpiYXNlbGluZTtmbGV4LWRpcmVjdGlvbjpyb3c7bWFyZ2luLWJvdHRvbTo0MHB4O3RleHQtYWxpZ246Y2VudGVyfS5zaWRlYmFyIC5zb3J0IC5idG57Zm9udC13ZWlnaHQ6NTAwO2ZvbnQtc2l6ZToxNXB4O2NvbG9yOmluaGVyaXQ7cGFkZGluZzo4cHggMjBweDt3aGl0ZS1zcGFjZTpub3dyYXA7Ym9yZGVyLXJhZGl1czoxMDBweH0uc2lkZWJhciAuc29ydCAuYnRuLmFjdGl2ZXtwYWRkaW5nOjhweCAyMHB4O2JhY2tncm91bmQ6I2Y1ZjVmNTtib3JkZXItcmFkaXVzOjEwMHB4O2NvbG9yOiMyMTk2ZjN9Ym9keXtiYWNrZ3JvdW5kLWNvbG9yOiNmZGZkZmQ7Y29sb3I6I2JkYmFjMjtkaXNwbGF5OmluaXRpYWw7Zm9udC1mYW1pbHk6J01hdmVuIFBybycsIHNhbnMtc2VyaWY7Zm9udC1zaXplOjE1cHg7YmFja2dyb3VuZDp1cmwoXFxcImh0dHBzOi8vaW1nLndhbGxwYXBlcnNhZmFyaS5jb20vZGVza3RvcC8xOTIwLzEwODAvMTUvNDcvYmxkNVVuLmpwZ1xcXCIpIG5vLXJlcGVhdCBjZW50ZXI7YmFja2dyb3VuZC1zaXplOmNvdmVyfWF7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAwLjNzOy1tb3otdHJhbnNpdGlvbjphbGwgMC4zczt0cmFuc2l0aW9uOmFsbCAwLjNzO3RleHQtZGVjb3JhdGlvbjpub25lO2NvbG9yOmluaGVyaXR9YTpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZTtjb2xvcjojMjE5NmYzfWltZ3std2Via2l0LXRyYW5zaXRpb246YWxsIDAuM3M7LW1vei10cmFuc2l0aW9uOmFsbCAwLjNzO3RyYW5zaXRpb246YWxsIDAuM3N9cHtmb250LXdlaWdodDo1MDA7bGluZS1oZWlnaHQ6MS43O21hcmdpbi1ib3R0b206MH0uYXBwe292ZXJmbG93OmF1dG99LmJnLWJsdWV7YmFja2dyb3VuZDojMjE5NmYzICFpbXBvcnRhbnR9LmJnLWluZGlnb3tiYWNrZ3JvdW5kOiM2NjEwZjIgIWltcG9ydGFudH0uYmctcHVycGxle2JhY2tncm91bmQ6IzZmNDJjMSAhaW1wb3J0YW50fS5iZy1yZWR7YmFja2dyb3VuZDojZGMzNTQ1ICFpbXBvcnRhbnR9LmJnLXBpbmt7YmFja2dyb3VuZDojZTgzZThjICFpbXBvcnRhbnR9LmJnLW9yYW5nZXtiYWNrZ3JvdW5kOiNmZDdlMTQgIWltcG9ydGFudH0uYmctZ3JheXtiYWNrZ3JvdW5kOiNiZGJhYzIgIWltcG9ydGFudH0uYmctZ3JlZW57YmFja2dyb3VuZDojMjhhNzQ1ICFpbXBvcnRhbnR9LmJnLXRlYWx7YmFja2dyb3VuZDojMjBjOTk3ICFpbXBvcnRhbnR9LmJnLXllbGxvd3tiYWNrZ3JvdW5kOiNmZmMxMDcgIWltcG9ydGFudH0ubWF0ZXJpYWwtaWNvbnMubWQtMTh7Zm9udC1zaXplOjE4cHh9Lm1hdGVyaWFsLWljb25zLm1kLTI0e2ZvbnQtc2l6ZToyNHB4fS5tYXRlcmlhbC1pY29ucy5tZC0zMHtmb250LXNpemU6MzBweH0ubWF0ZXJpYWwtaWNvbnMubWQtMzZ7Zm9udC1zaXplOjM2cHh9Lm1hdGVyaWFsLWljb25zLm1kLTQye2ZvbnQtc2l6ZTo0MnB4fS5tYXRlcmlhbC1pY29ucy5tZC00OHtmb250LXNpemU6NDhweH0ubm90aWZpY2F0aW9uLXRvYXN0e3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDtyaWdodDowO2JhY2tncm91bmQtY29sb3I6IzhiNTRmOTtjb2xvcjojZmZmO3BhZGRpbmc6MTBweDt0ZXh0LWFsaWduOmNlbnRlcjt6LWluZGV4OjEwMjF9Lm5vdGlmaWNhdGlvbi10b2FzdCBzcGFue3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7Y3Vyc29yOnBvaW50ZXJ9LmltZy10aHVtYm5haWx7d2lkdGg6MzMuMzMzMzMlO2N1cnNvcjpwb2ludGVyfS5tb2RhbC1kaWFsb2d7bWF4LXdpZHRoOjQ1MHB4fS5tb2RhbC1iYWNrZHJvcHtvcGFjaXR5OjAgIWltcG9ydGFudH0uc3RhcnR7cGFkZGluZy1ib3R0b206MH1cXG5cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///768\n')},770:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(14);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 22 modules\nvar es = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(39);\n\n// EXTERNAL MODULE: ./node_modules/redux-thunk/es/index.js\nvar redux_thunk_es = __webpack_require__(135);\n\n// EXTERNAL MODULE: ./node_modules/@andyet/simplewebrtc/module.js + 15 modules\nvar simplewebrtc_module = __webpack_require__(27);\n\n// EXTERNAL MODULE: ./node_modules/@pusher/chatkit-server/target/src/index.js\nvar src = __webpack_require__(331);\nvar src_default = /*#__PURE__*/__webpack_require__.n(src);\n\n// CONCATENATED MODULE: ./src/config/index.mjs\n/* jshint esversion: 10 */\n/* eslint-disable */\n\nconst tokenUrl = \'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/caf4a583-8194-4510-adbe-c9879f060ffc/token\';\nconst instanceLocator = \'v1:us1:caf4a583-8194-4510-adbe-c9879f060ffc\';\nconst key = \'7ea5e986-72fe-4cec-ba0c-4d07252f5f5f:LUB9fZZjg7vdpaFZlJEPBbZfKAe7sPLr/fhtA1+c3Co=\';\n\nconst NEWS_API_KEY = \'e30c5be02d0b4698b6a7722d93c70225\';\nconst SWRTC_API_KEY = \'970b4e5a23e7c4400327a45d\';\nconst SWRTC_CONFIG_URL = `https://api.simplewebrtc.com/config/guest/${SWRTC_API_KEY}`\n\n\n\n/* eslint-enable */\n\n// CONCATENATED MODULE: ./src/constants/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\nvar SIGN_IN = \'SIGN_IN\';\nvar SIGN_OUT = \'SIGN_OUT\';\nvar NOT_FOUND = \'NOT_FOUND\';\nvar CONNECT = \'CONNECT\';\nvar GET_ROOMS = \'GET_ROOMS\';\nvar ENTER_ROOM = \'ENTER_ROOM\';\nvar UPDATE_ROOM = \'UPDATE_ROOM\';\nvar SHOW_NOTIFICATION_TOAST = \'SHOW_NOTIFICATION_TOAST\';\nvar SORT_MEMBERS = \'SORT_MEMBERS\';\nvar FILTER_ROOMS = \'FILTER_ROOMS\';\nvar TOGGLE_CALL = \'TOGGLE_CALL\';\nvar TOGGLE_PICKER = \'TOGGLE_PICKER\';\nvar TOGGLE_CAROUSEL = \'TOGGLE_CAROUSEL\';\nvar TOGGLE_USERS_BAR = \'TOGGLE_USERS_BAR\';\nvar ON_MESSAGE = \'ON_MESSAGE\';\nvar CLEAR_MESSAGE = \'CLEAR_MESSAGE\';\nvar START_LOAD_MORE = \'START_LOAD_MORE\';\nvar END_LOAD_MORE = \'END_LOAD_MORE\';\nvar USER_STARTED_TYPING = \'USER_STARTED_TYPING\';\nvar USER_STOPED_TYPING = \'USER_STOPED_TYPING\';\nvar PRESENCE_CHANGED = \'PRESENCE_CHANGED\';\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/chatkit/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nvar initialState = new src_default.a({\n  instanceLocator: instanceLocator,\n  key: key\n});\n\nvar chatkit_chatkit = function chatkit() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SIGN_OUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_chatkit = (chatkit_chatkit);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/authentication/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar authentication_initialState = {\n  userId: \'\',\n  currentScreen: \'SignIn\'\n};\n\nvar authentication_authentication = function authentication() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : authentication_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SIGN_IN:\n      return {\n        userId: action.userId,\n        currentScreen: \'Chat\'\n      };\n\n    case SIGN_OUT:\n      return authentication_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_authentication = (authentication_authentication);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/notification/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar notification_initialState = false;\n\nvar notification_notification = function notification() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : notification_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_NOTIFICATION_TOAST:\n      return action.isShow;\n\n    case SIGN_OUT:\n      return notification_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_notification = (notification_notification);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/videoCall/index.jsx\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar videoCall_initialState = {\n  show: false,\n  cam: false\n};\n\nvar videoCall_videoCall = function videoCall() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : videoCall_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_CALL:\n      var show = !state.show;\n      var cam = action.cam;\n      return _objectSpread({}, state, {\n        show: show,\n        cam: cam\n      });\n\n    case SIGN_OUT:\n      return videoCall_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_videoCall = (videoCall_videoCall);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/isLoading.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar isLoading_initialState = true;\n\nvar isLoading_isLoading = function isLoading() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : isLoading_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ROOMS:\n      return false;\n\n    case CLEAR_MESSAGE:\n      return true;\n\n    case NOT_FOUND:\n      return false;\n\n    case SIGN_OUT:\n      return isLoading_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var messages_isLoading = (isLoading_isLoading);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/justLoadMore.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar justLoadMore_initialState = false;\n\nvar justLoadMore_justLoadMore = function justLoadMore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : justLoadMore_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ON_MESSAGE:\n      return false;\n\n    case CLEAR_MESSAGE:\n      return false;\n\n    case START_LOAD_MORE:\n      return false;\n\n    case END_LOAD_MORE:\n      return true;\n\n    case SIGN_OUT:\n      return justLoadMore_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var messages_justLoadMore = (justLoadMore_justLoadMore);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/messages.jsx\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar messages_initialState = [];\n\nvar messages_messages = function messages() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : messages_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ON_MESSAGE:\n      return [].concat(_toConsumableArray(state), [action.message]);\n\n    case END_LOAD_MORE:\n      return [].concat(_toConsumableArray(action.messages), _toConsumableArray(state));\n\n    case CLEAR_MESSAGE:\n      return [];\n\n    case SIGN_OUT:\n      return messages_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_messages_messages = (messages_messages);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/images.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar images_initialState = [];\n\nvar images_images = function images() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : images_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case END_LOAD_MORE:\n      action.messages.forEach(function (message) {\n        message.parts.forEach(function (_ref) {\n          var partType = _ref.partType,\n              payload = _ref.payload;\n          if (partType === \'attachment\') state.push({\n            src: payload._downloadURL\n          });\n        });\n      });\n      return state;\n\n    case ON_MESSAGE:\n      action.message.parts.forEach(function (_ref2) {\n        var partType = _ref2.partType,\n            payload = _ref2.payload;\n        if (partType === \'attachment\') state.push({\n          src: payload._downloadURL\n        });\n      });\n      return state;\n\n    case CLEAR_MESSAGE:\n      return [];\n\n    case SIGN_OUT:\n      return images_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var messages_images = (images_images);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/currentUser.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar currentUser_initialState = {};\n\nvar currentUser_currentUser = function currentUser() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : currentUser_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CONNECT:\n      return action.currentUser;\n\n    case SIGN_OUT:\n      return currentUser_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var users_currentUser = (currentUser_currentUser);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/typingUsers.jsx\nfunction typingUsers_toConsumableArray(arr) { return typingUsers_arrayWithoutHoles(arr) || typingUsers_iterableToArray(arr) || typingUsers_nonIterableSpread(); }\n\nfunction typingUsers_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction typingUsers_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction typingUsers_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar typingUsers_initialState = [];\n\nvar typingUsers_typingUsers = function typingUsers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : typingUsers_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_STARTED_TYPING:\n      return [].concat(typingUsers_toConsumableArray(state), [action.user]);\n\n    case USER_STOPED_TYPING:\n      return state.filter(function (user) {\n        return user.id !== action.user.id;\n      });\n\n    case SIGN_OUT:\n      return typingUsers_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var users_typingUsers = (typingUsers_typingUsers);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/roomUsers.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar roomUsers_initialState = [];\n\nvar roomUsers_roomUsers = function roomUsers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roomUsers_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ENTER_ROOM:\n      return action.roomActive.users;\n\n    case PRESENCE_CHANGED:\n      return action.roomActive.users.sort(function (user) {\n        if (user.presence.state === \'online\') return -1;else return 1;\n      });\n\n    case SIGN_OUT:\n      return roomUsers_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var users_roomUsers = (roomUsers_roomUsers);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/rooms/rooms.jsx\nfunction rooms_toConsumableArray(arr) { return rooms_arrayWithoutHoles(arr) || rooms_iterableToArray(arr) || rooms_nonIterableSpread(); }\n\nfunction rooms_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction rooms_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction rooms_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar rooms_initialState = [];\n\nvar rooms_rooms = function rooms() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : rooms_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ROOMS:\n      return action.rooms;\n\n    case UPDATE_ROOM:\n      var index = state.findIndex(function (room) {\n        if (room) return action.room.id === room.id;\n      });\n      if (index === -1) return state;\n      state[index] = action.room;\n      return rooms_toConsumableArray(state);\n\n    case PRESENCE_CHANGED:\n      return state;\n\n    case SIGN_OUT:\n      return rooms_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_rooms_rooms = (rooms_rooms);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/rooms/roomActive.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar roomActive_initialState = {};\n\nvar roomActive_roomActive = function roomActive() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roomActive_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CONNECT:\n      return state;\n\n    case ENTER_ROOM:\n      return action.roomActive;\n\n    case PRESENCE_CHANGED:\n      return action.roomActive;\n\n    case SIGN_OUT:\n      return roomActive_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var rooms_roomActive = (roomActive_roomActive);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/rooms/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/userSort.jsx\nfunction userSort_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction userSort_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { userSort_ownKeys(Object(source), true).forEach(function (key) { userSort_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { userSort_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction userSort_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar userSort_initialState = {\n  by: \'status\',\n  value: 1\n};\n\nvar userSort_userSort = function userSort() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userSort_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SORT_MEMBERS:\n      var by = action.by,\n          value = action.value;\n      return userSort_objectSpread({}, state, {\n        by: by,\n        value: value\n      });\n\n    case CLEAR_MESSAGE:\n    case SIGN_OUT:\n      return userSort_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_userSort = (userSort_userSort);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/roomFilter.jsx\nfunction roomFilter_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction roomFilter_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { roomFilter_ownKeys(Object(source), true).forEach(function (key) { roomFilter_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { roomFilter_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction roomFilter_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar roomFilter_initialState = {\n  name: \'\',\n  status: 0,\n  isPrivate: false\n};\n\nvar roomFilter_roomFilter = function roomFilter() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roomFilter_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FILTER_ROOMS:\n      var name = action.name,\n          status = action.status,\n          isPrivate = action.isPrivate;\n      return roomFilter_objectSpread({}, state, {\n        name: name,\n        status: status,\n        isPrivate: isPrivate\n      });\n\n    case SIGN_OUT:\n      return roomFilter_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_roomFilter = (roomFilter_roomFilter);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/showPicker.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar showPicker_initialState = false;\n\nvar showPicker_showPicker = function showPicker() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : showPicker_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_PICKER:\n      return !state;\n\n    case FILTER_ROOMS:\n    case TOGGLE_CALL:\n    case TOGGLE_CAROUSEL:\n    case TOGGLE_USERS_BAR:\n    case CLEAR_MESSAGE:\n    case SIGN_OUT:\n      return showPicker_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_showPicker = (showPicker_showPicker);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/showCarousel.jsx\nfunction showCarousel_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction showCarousel_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { showCarousel_ownKeys(Object(source), true).forEach(function (key) { showCarousel_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { showCarousel_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction showCarousel_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar showCarousel_initialState = {\n  isShow: false,\n  imageIndex: -1,\n  where: \'\'\n};\n\nvar showCarousel_showCarousel = function showCarousel() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : showCarousel_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_CAROUSEL:\n      return showCarousel_objectSpread({}, showCarousel, {\n        isShow: !state.isShow,\n        imageIndex: action.imageIndex,\n        where: action.where\n      });\n\n    case SIGN_OUT:\n      return showCarousel_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_showCarousel = (showCarousel_showCarousel);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/showUsersBar.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar showUsersBar_initialState = false;\n\nvar showUsersBar_showUsersBar = function showUsersBar() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : showUsersBar_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_USERS_BAR:\n      return !state;\n\n    case SIGN_OUT:\n      return showUsersBar_initialState;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_showUsersBar = (showUsersBar_showUsersBar);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\n\n\nvar rootReducer = Object(redux["c" /* combineReducers */])({\n  simplewebrtc: simplewebrtc_module["m" /* reducer */],\n  authentication: reducers_authentication,\n  notification: reducers_notification,\n  justLoadMore: messages_justLoadMore,\n  showCarousel: controls_showCarousel,\n  showUsersBar: controls_showUsersBar,\n  currentUser: users_currentUser,\n  typingUsers: users_typingUsers,\n  roomActive: rooms_roomActive,\n  roomFilter: controls_roomFilter,\n  showPicker: controls_showPicker,\n  videoCall: reducers_videoCall,\n  roomUsers: users_roomUsers,\n  isLoading: messages_isLoading,\n  userSort: controls_userSort,\n  messages: reducers_messages_messages,\n  chatkit: reducers_chatkit,\n  images: messages_images,\n  rooms: reducers_rooms_rooms\n});\nvar composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || redux["d" /* compose */];\nvar store = Object(redux["e" /* createStore */])(rootReducer, {\n  simplewebrtc: {}\n}, composeEnhancer(Object(redux["a" /* applyMiddleware */])(redux_thunk_es["a" /* default */])));\n/* harmony default export */ var reducers = (store);\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-router-dom/esm/react-router-dom.js\nvar react_router_dom = __webpack_require__(35);\n\n// EXTERNAL MODULE: ./node_modules/react-router/esm/react-router.js + 1 modules\nvar react_router = __webpack_require__(65);\n\n// EXTERNAL MODULE: ./node_modules/@pusher/chatkit-client/dist/web/chatkit.js\nvar web_chatkit = __webpack_require__(204);\n\n// EXTERNAL MODULE: ./node_modules/crypto-js/index.js\nvar crypto_js = __webpack_require__(82);\n\n// CONCATENATED MODULE: ./src/utils/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\nvar alertError = function alertError(title, err) {\n  try {\n    var error = err.error_description ? err.error_description : err.info.error_description;\n  } catch (_unused) {\n    error = err.error;\n  }\n\n  console.log(err);\n  alert(title + \': \' + error);\n};\nvar onGetPrivateUser = function onGetPrivateUser(room, currentUserId, isFilter) {\n  var members = room.customData.members;\n  var users = Object.values(room.userStore.users);\n  var mainUser = members[0];\n  if (members.length === 2) mainUser = members.find(function (member) {\n    return member.id !== currentUserId;\n  });\n  var roomName = isFilter ? mainUser.name.toLowerCase() : mainUser.name;\n  var roomStatus = isFilter ? -1 : \'\';\n  mainUser = users.find(function (user) {\n    return user.id === mainUser.id;\n  });\n\n  if (mainUser) {\n    var _mainUser = mainUser,\n        name = _mainUser.name,\n        presence = _mainUser.presence;\n    roomName = name;\n    roomStatus = presence.state;\n    if (isFilter) roomStatus = presence.state === \'online\' ? 1 : -1;\n  }\n\n  return {\n    roomName: roomName,\n    roomStatus: roomStatus\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/notification.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar notification_grantPermission = function grantPermission() {\n  return function (dispatch, getState) {\n    if (!(\'Notification\' in window)) {\n      alert(\'Trình duyệt của bạn không hỗ trợ hiển thị thông báo\');\n      return;\n    }\n\n    var _Notification = Notification,\n        permission = _Notification.permission;\n\n    if (permission === \'granted\') {\n      new Notification(\'Bạn đã cho phép hiển thị thông báo rồi\');\n      dispatch({\n        type: SHOW_NOTIFICATION_TOAST,\n        isShow: false\n      });\n      return;\n    }\n\n    if (permission !== \'denied\' || permission === \'default\') {\n      Notification.requestPermission().then(function (result) {\n        if (result === \'granted\') new Notification(\'Tuyệt vời !!!\', {\n          body: \'QuanChat sẽ bắt đầu thông báo cho bạn về tin nhắn mới nhất\'\n        });\n      });\n    }\n\n    dispatch({\n      type: SHOW_NOTIFICATION_TOAST,\n      isShow: false\n    });\n  };\n};\nvar notification_showNotificationToast = function showNotificationToast() {\n  return function (dispatch, getState) {\n    if (window.Notification && Notification.permission === \'granted\') return;\n    dispatch({\n      type: SHOW_NOTIFICATION_TOAST,\n      isShow: true\n    });\n  };\n};\nvar showNotification = function showNotification(title, lastMessage) {\n  return function (dispatch, getState) {\n    new Notification(title, {\n      body: lastMessage\n    });\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/messages.jsx\nfunction messages_toConsumableArray(arr) { return messages_arrayWithoutHoles(arr) || messages_iterableToArray(arr) || messages_nonIterableSpread(); }\n\nfunction messages_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction messages_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction messages_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nvar messages_typingMessage = function typingMessage() {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        currentUser = _getState.currentUser,\n        roomActive = _getState.roomActive;\n\n    currentUser.isTypingIn({\n      roomId: roomActive.id\n    })["catch"](function (err) {\n      return alertError(\'Error on typing rooms\', err);\n    });\n  };\n};\nvar messages_sendMessage = function sendMessage(parts) {\n  var roomId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return function (dispatch, getState) {\n    var _getState2 = getState(),\n        currentUser = _getState2.currentUser,\n        roomActive = _getState2.roomActive;\n\n    if (roomId === null) roomId = "".concat(roomActive.id);\n    currentUser.sendMultipartMessage({\n      roomId: roomId,\n      parts: parts\n    })["catch"](function (err) {\n      return alertError(\'Error on sending message\', err);\n    });\n  };\n};\nvar messages_sendNews = function sendNews(query) {\n  return function (dispatch, getState) {\n    var newsApi = "https://newsapi.org/v2/everything?q=".concat(query, "&pageSize=3&apiKey=").concat(NEWS_API_KEY);\n    fetch(newsApi).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      var parts = [];\n      data.articles.forEach(function (article) {\n        var title = article.title,\n            source = article.source,\n            url = article.url;\n        parts.push({\n          type: \'text/plain\',\n          content: "".concat(title, " - ").concat(source.name, " - ").concat(url)\n        });\n      });\n      dispatch(messages_sendMessage(parts));\n    })["catch"](function (err) {\n      return alertError(\'Error on fetching newsapi\', err);\n    });\n  };\n};\nvar messages_fetchLastMessage = function fetchLastMessage() {\n  return function (dispatch, getState) {\n    var _getState3 = getState(),\n        currentUser = _getState3.currentUser,\n        messages = _getState3.messages;\n\n    var _messages = messages[messages.length - 1],\n        room = _messages.room,\n        sender = _messages.sender,\n        parts = _messages.parts;\n    var id = room.id,\n        name = room.name,\n        customData = room.customData;\n    var _parts = parts[parts.length - 1],\n        partType = _parts.partType,\n        payload = _parts.payload;\n    var lastMessage = ": ".concat(payload.content);\n    if (partType === \'attachment\') lastMessage = \' đã gửi 1 ảnh\';else if (partType === \'url\') lastMessage = \' đã gửi 1 liên kết\';\n    lastMessage = "".concat(sender.name).concat(lastMessage);\n    currentUser.updateRoom({\n      roomId: id,\n      customData: {\n        lastMessage: lastMessage,\n        members: customData.members\n      }\n    }).then(function () {\n      if (currentUser.id !== sender.id) dispatch(showNotification(name, lastMessage));\n    });\n  };\n};\nvar messages_loadMoreMessages = function loadMoreMessages() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: START_LOAD_MORE\n    });\n\n    var _getState4 = getState(),\n        currentUser = _getState4.currentUser,\n        messages = _getState4.messages,\n        roomActive = _getState4.roomActive;\n\n    if (messages.length === 0) return;\n    var oldestMessageId = Math.min.apply(Math, messages_toConsumableArray(messages.map(function (message) {\n      return message.id;\n    })));\n    currentUser.fetchMultipartMessages({\n      roomId: roomActive.id,\n      initialId: oldestMessageId,\n      direction: \'older\',\n      limit: 10\n    }).then(function (messages) {\n      return dispatch({\n        type: END_LOAD_MORE,\n        messages: messages\n      });\n    });\n  };\n};\n// CONCATENATED MODULE: ./src/actions/rooms.jsx\nvar _this = undefined;\n\nfunction actions_rooms_toConsumableArray(arr) { return actions_rooms_arrayWithoutHoles(arr) || actions_rooms_iterableToArray(arr) || actions_rooms_nonIterableSpread(); }\n\nfunction actions_rooms_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction actions_rooms_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction actions_rooms_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction rooms_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction rooms_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { rooms_ownKeys(Object(source), true).forEach(function (key) { rooms_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { rooms_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction rooms_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\nvar rooms_onSetRoomActive = function onSetRoomActive(roomActive, currentUserId) {\n  var isPrivate = roomActive.isPrivate,\n      users = roomActive.users;\n\n  if (isPrivate) {\n    var _onGetPrivateUser = onGetPrivateUser(roomActive, currentUserId, false),\n        roomName = _onGetPrivateUser.roomName,\n        roomStatus = _onGetPrivateUser.roomStatus;\n\n    return rooms_objectSpread({}, roomActive, {\n      users: users,\n      name: roomName,\n      status: roomStatus\n    });\n  }\n\n  return roomActive;\n};\nvar rooms_getRooms = function getRooms(currentUser) {\n  return function (dispatch, getState) {\n    currentUser.getJoinableRooms().then(function (unjoinedRooms) {\n      var rooms = [].concat(actions_rooms_toConsumableArray(currentUser.rooms), actions_rooms_toConsumableArray(unjoinedRooms));\n      dispatch({\n        type: GET_ROOMS,\n        rooms: rooms\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on getting rooms\', err);\n    });\n  };\n};\nvar rooms_enterRoom = function enterRoom(roomId) {\n  return function (dispatch, getState) {\n    var currentUser = getState().currentUser;\n    dispatch({\n      type: CLEAR_MESSAGE\n    });\n    if (!currentUser.id) return;\n    currentUser.subscribeToRoomMultipart({\n      roomId: roomId,\n      messageLimit: 10,\n      hooks: {\n        onMessage: function onMessage(message) {\n          setTimeout(function () {\n            return dispatch(messages_fetchLastMessage());\n          }, 250);\n\n          if (location.hash.substr(7) === roomId) {\n            dispatch({\n              type: ON_MESSAGE,\n              message: message\n            });\n            currentUser.setReadCursor({\n              roomId: roomId,\n              position: message.id\n            });\n          }\n        },\n        onUserStartedTyping: function onUserStartedTyping(user) {\n          var _getState = getState(),\n              roomActive = _getState.roomActive;\n\n          if (roomActive.id === roomId) dispatch({\n            type: USER_STARTED_TYPING,\n            user: user\n          });\n        },\n        onUserStoppedTyping: function onUserStoppedTyping(user) {\n          var _getState2 = getState(),\n              roomActive = _getState2.roomActive;\n\n          if (roomActive.id === roomId) dispatch({\n            type: USER_STOPED_TYPING,\n            user: user\n          });\n        },\n        onPresenceChanged: function onPresenceChanged() {\n          var _getState3 = getState(),\n              currentUser = _getState3.currentUser,\n              roomActive = _getState3.roomActive;\n\n          if (roomActive.id === roomId) dispatch({\n            type: PRESENCE_CHANGED,\n            roomActive: rooms_onSetRoomActive(roomActive, currentUser.id)\n          });\n        }\n      }\n    }).then(function (roomActive) {\n      dispatch({\n        type: ENTER_ROOM,\n        roomActive: rooms_onSetRoomActive(roomActive, currentUser.id)\n      });\n      dispatch(rooms_getRooms(currentUser));\n      dispatch(notification_showNotificationToast.call(_this));\n    })["catch"](function (err) {\n      dispatch({\n        type: NOT_FOUND\n      });\n      alertError(\'Error on entering rooms: \', err);\n    });\n  };\n};\nvar rooms_createRoom = function createRoom(name, message) {\n  return function (dispatch, getState) {\n    var currentUser = getState().currentUser;\n    currentUser.createRoom({\n      name: name,\n      customData: {\n        lastMessage: \'\'\n      }\n    }).then(function (room) {\n      var roomId = room.id;\n      var parts = [];\n\n      if (message.trim()) {\n        parts.push({\n          type: \'text/plain\',\n          content: message\n        });\n        dispatch(messages_sendMessage(parts, "".concat(roomId)));\n      }\n\n      history.pushState(null, null, "#/room/".concat(roomId));\n      setTimeout(function () {\n        return dispatch(rooms_enterRoom(roomId));\n      }, 250);\n    })["catch"](function (err) {\n      return alertError(\'Error on creating rooms\', err);\n    });\n  };\n};\nvar rooms_createPrivateRoom = function createPrivateRoom(user) {\n  return function (dispatch, getState) {\n    var _getState4 = getState(),\n        chatkit = _getState4.chatkit,\n        currentUser = _getState4.currentUser;\n\n    var id = currentUser.id,\n        name = currentUser.name;\n    var roomId = Object(crypto_js["HmacSHA1"])("".concat(id).concat(user.id), key).toString();\n    var otherRoomId = Object(crypto_js["HmacSHA1"])("".concat(user.id).concat(id), key).toString();\n    var members = user.id === id ? [{\n      id: id,\n      name: name\n    }] : [{\n      id: id,\n      name: name\n    }, {\n      id: user.id,\n      name: user.name\n    }];\n    chatkit.getRooms({\n      includePrivate: true\n    }).then(function (rooms) {\n      var privateRoomCreated = rooms.some(function (room) {\n        return room.id === roomId || room.id === otherRoomId;\n      });\n      if (!privateRoomCreated) currentUser.createRoom({\n        id: roomId,\n        name: "".concat(name, " & ").concat(user.name),\n        "private": true,\n        addUserIds: [user.id],\n        customData: {\n          lastMessage: \'\',\n          members: members\n        }\n      })["catch"](function (err) {\n        alertError(\'Error on creating private rooms\', err);\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on getting all rooms\', err);\n    });\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/controls.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar controls_sortMembers = function sortMembers(by, value) {\n  return {\n    type: SORT_MEMBERS,\n    by: by,\n    value: value\n  };\n};\nvar controls_filterRooms = function filterRooms(name, status, isPrivate) {\n  return {\n    type: FILTER_ROOMS,\n    name: name,\n    status: status,\n    isPrivate: isPrivate\n  };\n};\nvar controls_toggleCall = function toggleCall() {\n  var cam = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return {\n    type: TOGGLE_CALL,\n    cam: cam\n  };\n};\nvar controls_togglePicker = function togglePicker() {\n  return {\n    type: TOGGLE_PICKER\n  };\n};\nvar controls_toggleCarousel = function toggleCarousel() {\n  var imageIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n  var where = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n  return {\n    type: TOGGLE_CAROUSEL,\n    imageIndex: imageIndex,\n    where: where\n  };\n};\nvar controls_toggleUsersBar = function toggleUsersBar() {\n  return {\n    type: TOGGLE_USERS_BAR\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/authentication.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nvar authentication_signOut = function signOut() {\n  return function (dispatch, getState) {\n    var currentUser = getState().currentUser;\n    dispatch({\n      type: SIGN_OUT\n    });\n    currentUser.disconnect();\n  };\n};\nvar authentication_signUp = function signUp(name, email, password) {\n  return function (dispatch, getState) {\n    var chatkit = getState().chatkit;\n    var id = Object(crypto_js["HmacSHA1"])("".concat(email, "@!?#?").concat(password), key).toString();\n    var avatarURL = "https://avatars.dicebear.com/v2/avataaars/".concat(name, ".svg?options[eyes][]=squint&options[eyebrow][]=raised&options[mouth][]=smile");\n    chatkit.createUser({\n      id: id,\n      name: name,\n      avatarURL: avatarURL\n    }).then(function () {\n      return alert(\'User created successfully\');\n    })["catch"](function (err) {\n      return alertError(\'Error on sign up\', err);\n    });\n  };\n};\nvar authentication_signIn = function signIn(email, password) {\n  return function (dispatch, getState) {\n    var chatkit = getState().chatkit;\n    var id = Object(crypto_js["HmacSHA1"])("".concat(email, "@!?#?").concat(password), key).toString();\n    chatkit.getUser({\n      id: id\n    }).then(function () {\n      return dispatch({\n        type: SIGN_IN,\n        userId: id\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on sign in\', err);\n    });\n  };\n};\nvar authentication_connect = function connect(userId) {\n  return function (dispatch, getState) {\n    var chatManager = new web_chatkit["ChatManager"]({\n      instanceLocator: instanceLocator,\n      userId: userId,\n      tokenProvider: new web_chatkit["TokenProvider"]({\n        url: tokenUrl\n      })\n    });\n    chatManager.connect({\n      onRoomUpdated: function onRoomUpdated(room) {\n        dispatch({\n          type: UPDATE_ROOM,\n          room: room\n        });\n      },\n      onAddedToRoom: function onAddedToRoom(room) {\n        if (room.isPrivate) {\n          var currentUser = getState().currentUser;\n          dispatch(rooms_getRooms(currentUser));\n        }\n      },\n      onPresenceChanged: function onPresenceChanged() {\n        var _getState$roomFilter = getState().roomFilter,\n            name = _getState$roomFilter.name,\n            status = _getState$roomFilter.status,\n            isPrivate = _getState$roomFilter.isPrivate;\n        dispatch(controls_filterRooms(name, status, isPrivate));\n      }\n    }).then(function (currentUser) {\n      dispatch({\n        type: CONNECT,\n        currentUser: currentUser\n      });\n      dispatch(rooms_getRooms(currentUser));\n    }).then(function () {\n      var chatkit = getState().chatkit;\n      chatkit.getUsers().then(function (users) {\n        users.forEach(function (user) {\n          return dispatch(rooms_createPrivateRoom(user));\n        });\n      })["catch"](function (err) {\n        return alertError(\'Error on getting all users\', err);\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on connection\', err);\n    });\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Auth/AuthInput.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nfunction AuthInput(props) {\n  var type = props.type,\n      id = props.id,\n      value = props.value,\n      placeholder = props.placeholder,\n      icon = props.icon;\n\n  var onChange = function onChange(event) {\n    return props.onChange(event);\n  };\n\n  return react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("input", {\n    type: type,\n    name: type,\n    id: id,\n    className: "form-control",\n    value: value,\n    placeholder: placeholder,\n    onChange: onChange,\n    required: true\n  }), react_default.a.createElement("button", {\n    className: "btn icon"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, icon)));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Auth/ThirdParty.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nfunction ThirdParty() {\n  return react_default.a.createElement("div", {\n    className: "third-party"\n  }, react_default.a.createElement("button", {\n    className: "btn item bg-blue"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "pages")), react_default.a.createElement("button", {\n    className: "btn item bg-teal"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "party_mode")), react_default.a.createElement("button", {\n    className: "btn item bg-purple"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "whatshot")));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Auth/Aside.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Aside(_ref) {\n  var to = _ref.to,\n      title = _ref.title,\n      content = _ref.content;\n  return react_default.a.createElement("div", {\n    className: "aside"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "preference"\n  }, react_default.a.createElement("h2", null, title), react_default.a.createElement("p", null, content), react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: to,\n    className: "btn button"\n  }, to === \'/\' ? \'Đăng nhập\' : \'Đăng kí\')))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Auth/SignIn.jsx\nfunction SignIn_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction SignIn_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { SignIn_ownKeys(Object(source), true).forEach(function (key) { SignIn_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { SignIn_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction SignIn_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction SignIn() {\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])({\n    email: \'\',\n    password: \'\'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var target = event.target;\n    var name = target.name,\n        value = target.value;\n    setUserInfo(SignIn_objectSpread({}, userInfo, SignIn_defineProperty({}, name, value)));\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    var email = userInfo.email,\n        password = userInfo.password;\n    if (email.trim() && password.trim()) dispatch(authentication_signIn(email, password, history));\n  };\n\n  return react_default.a.createElement("div", {\n    className: "app"\n  }, react_default.a.createElement("div", {\n    className: "main sign-in"\n  }, react_default.a.createElement("div", {\n    className: "start"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("h1", null, "Sign in QuanChat"), react_default.a.createElement(ThirdParty, null), react_default.a.createElement("p", null, "S\\u1EED d\\u1EE5ng t\\xE0i kho\\u1EA3n email \\u0111\\xE3 \\u0111\\u0103ng k\\xED:"), react_default.a.createElement("form", {\n    onSubmit: onSubmit\n  }, react_default.a.createElement(AuthInput, {\n    type: "email",\n    id: "inputEmail",\n    value: userInfo.email,\n    placeholder: "email@domain.com",\n    icon: "mail_outline",\n    onChange: onChange\n  }), react_default.a.createElement(AuthInput, {\n    type: "password",\n    id: "inputPassword",\n    value: userInfo.password,\n    placeholder: "M\\u1EADt kh\\u1EA9u",\n    icon: "lock_outline",\n    onChange: onChange\n  }), react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn button"\n  }, "\\u0110\\u0103ng Nh\\u1EADp"), react_default.a.createElement("div", {\n    className: "callout"\n  }, react_default.a.createElement("span", null, "Ch\\u01B0a c\\xF3 t\\xE0i kho\\u1EA3n? \\xA0", react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/sign-up"\n  }, "T\\u1EA1o ngay"))))))))), react_default.a.createElement(Aside, {\n    to: "/sign-up",\n    title: "Hello, Friend!",\n    content: "Nh\\u1EADp th\\xF4ng tin t\\xE0i kho\\u1EA3n v\\xE0 b\\u1EAFt \\u0111\\u1EA7u h\\xE0nh tr\\xECnh v\\u1EDBi QuanChat ngay n\\xE0o."\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Auth/SignUp.jsx\nfunction SignUp_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction SignUp_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { SignUp_ownKeys(Object(source), true).forEach(function (key) { SignUp_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { SignUp_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction SignUp_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction SignUp_slicedToArray(arr, i) { return SignUp_arrayWithHoles(arr) || SignUp_iterableToArrayLimit(arr, i) || SignUp_nonIterableRest(); }\n\nfunction SignUp_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction SignUp_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction SignUp_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction SignUp() {\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])({\n    name: \'\',\n    email: \'\',\n    password: \'\'\n  }),\n      _useState2 = SignUp_slicedToArray(_useState, 2),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var target = event.target;\n    var name = target.name,\n        value = target.value;\n    setUserInfo(SignUp_objectSpread({}, userInfo, SignUp_defineProperty({}, name, value)));\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    var name = userInfo.name,\n        email = userInfo.email,\n        password = userInfo.password;\n\n    if (name.trim() && email.trim() && password.trim()) {\n      dispatch(authentication_signUp(name, email, password));\n      setUserInfo({\n        name: \'\',\n        email: \'\',\n        password: \'\'\n      });\n    }\n  };\n\n  return react_default.a.createElement("div", {\n    className: "app"\n  }, react_default.a.createElement(Aside, {\n    to: "/",\n    title: "Welcome Back!",\n    content: "\\u0110\\u1EC3 gi\\u1EEF k\\u1EBFt n\\u1ED1i v\\u1EDBi b\\u1EA1n b\\xE8, vui l\\xF2ng s\\u1EED d\\u1EE5ng\\r th\\xF4ng tin t\\xE0i kho\\u1EA3n m\\xE0 b\\u1EA1n \\u0111\\xE3 \\u0111\\u0103ng k\\xED ."\n  }), react_default.a.createElement("div", {\n    className: "main sign-up"\n  }, react_default.a.createElement("div", {\n    className: "start"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("h1", null, "T\\u1EA1o t\\xE0i kho\\u1EA3n"), react_default.a.createElement(ThirdParty, null), react_default.a.createElement("p", null, "S\\u1EED d\\u1EE5ng email c\\u1EE7a b\\u1EA1n \\u0111\\u1EC3 \\u0111\\u0103ng k\\xED:"), react_default.a.createElement("form", {\n    className: "signup",\n    onSubmit: onSubmit\n  }, react_default.a.createElement("div", {\n    className: "form-parent"\n  }, react_default.a.createElement(AuthInput, {\n    type: "name",\n    id: "inputName",\n    value: userInfo.name,\n    placeholder: "T\\xEAn ng\\u01B0\\u1EDDi d\\xF9ng",\n    icon: "person_outline",\n    onChange: onChange\n  }), react_default.a.createElement(AuthInput, {\n    type: "email",\n    id: "inputEmail",\n    value: userInfo.email,\n    placeholder: "\\u0110\\u1ECBa ch\\u1EC9 Email",\n    icon: "mail_outline",\n    onChange: onChange\n  })), react_default.a.createElement(AuthInput, {\n    type: "password",\n    id: "inputPassword",\n    value: userInfo.password,\n    placeholder: "M\\u1EADt kh\\u1EA9u",\n    icon: "lock_outline",\n    onChange: onChange\n  }), react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn button"\n  }, "\\u0110\\u0103ng k\\xED"), react_default.a.createElement("div", {\n    className: "callout"\n  }, react_default.a.createElement("span", null, "\\u0110\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n? \\xA0", react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/"\n  }, "\\u0110\\u0103ng Nh\\u1EADp"))))))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Auth/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/NotFound/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction NotFound() {\n  return react_default.a.createElement("div", {\n    className: "not-found"\n  }, react_default.a.createElement("svg", {\n    width: "380px",\n    height: "500px",\n    viewBox: "0 0 837 1045"\n  }, react_default.a.createElement("g", {\n    id: "Page-1",\n    stroke: "none",\n    strokeWidth: 1,\n    fill: "none",\n    fillRule: "evenodd"\n  }, react_default.a.createElement("path", {\n    d: "M353,9 L626.664028,170 L626.664028,487 L353,642 L79.3359724,487 L79.3359724,170 L353,9 Z",\n    id: "Polygon-1",\n    stroke: "#007FB2",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M78.5,529 L147,569.186414 L147,648.311216 L78.5,687 L10,648.311216 L10,569.186414 L78.5,529 Z",\n    id: "Polygon-2",\n    stroke: "#EF4A5B",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M773,186 L827,217.538705 L827,279.636651 L773,310 L719,279.636651 L719,217.538705 L773,186 Z",\n    id: "Polygon-3",\n    stroke: "#795D9C",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M639,529 L773,607.846761 L773,763.091627 L639,839 L505,763.091627 L505,607.846761 L639,529 Z",\n    id: "Polygon-4",\n    stroke: "#F2773F",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M281,801 L383,861.025276 L383,979.21169 L281,1037 L179,979.21169 L179,861.025276 L281,801 Z",\n    id: "Polygon-5",\n    stroke: "#36B455",\n    strokeWidth: 6\n  }))), react_default.a.createElement("div", {\n    className: "not-found-content"\n  }, react_default.a.createElement("h1", null, "404"), react_default.a.createElement("p", null, "Kh\\xF4ng t\\xECm th\\u1EA5y trang b\\u1EA1n y\\xEAu c\\u1EA7u"), react_default.a.createElement("div", {\n    className: "buttons-con"\n  }, react_default.a.createElement("div", {\n    className: "action-link-wrap"\n  }, react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/"\n  }, "V\\u1EC1 trang ch\\u1EE7"), react_default.a.createElement("a", {\n    href: "https://github.com/18520339",\n    target: "_blank"\n  }, "Li\\xEAn h\\u1EC7")))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Navigation/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction Navigation() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomFilter = _useSelector.roomFilter,\n      currentUser = _useSelector.currentUser;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var isPrivate = roomFilter.isPrivate;\n\n  var onSignOut = function onSignOut() {\n    return dispatch(authentication_signOut());\n  };\n\n  return react_default.a.createElement("div", {\n    className: "navigation"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "inside"\n  }, react_default.a.createElement("div", {\n    className: "nav nav-tab menu"\n  }, react_default.a.createElement("button", {\n    className: "btn"\n  }, react_default.a.createElement("img", {\n    className: "avatar-xl",\n    src: currentUser.avatarURL\n  })), react_default.a.createElement("a", {\n    type: "button",\n    className: "".concat(isPrivate && \'active\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(\'\', 0, true));\n    }\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "account_circle")), react_default.a.createElement("a", {\n    type: "button",\n    className: "".concat(!isPrivate && \'active\', " f-grow1"),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(\'\', 0, false));\n    }\n  }, react_default.a.createElement("i", {\n    className: "material-icons active"\n  }, "chat_bubble_outline")), react_default.a.createElement("button", {\n    className: "btn mode"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "brightness_2")), react_default.a.createElement("button", {\n    className: "btn power",\n    onClick: onSignOut\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "power_settings_new"))))));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/OverlayTrigger.js + 2 modules\nvar OverlayTrigger = __webpack_require__(780);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Tooltip.js\nvar Tooltip = __webpack_require__(772);\n\n// CONCATENATED MODULE: ./src/components/Avatar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Avatar(_ref) {\n  var name = _ref.name,\n      type = _ref.type,\n      _ref$tooltip = _ref.tooltip,\n      tooltip = _ref$tooltip === void 0 ? \'top\' : _ref$tooltip,\n      size = _ref.size;\n  var avatarSize = !size ? \'avatar-md\' : "avatar-".concat(size);\n  var avatarAPI = \'https://avatars.dicebear.com/v2\';\n\n  if (type === \'room\') {\n    avatarAPI = "".concat(avatarAPI, "/jdenticon/").concat(name, ".svg");\n  } else if (type === \'user\') {\n    var options = {\n      eyes: \'squint\',\n      eyebrow: \'raised\',\n      mouth: \'smile\'\n    };\n    options = Object.keys(options).reduce(function (res, key) {\n      return "".concat(res, "options[").concat(key, "][]=").concat(options[key], "&");\n    }, []);\n    avatarAPI = "".concat(avatarAPI, "/avataaars/").concat(name, ".svg?").concat(options);\n  }\n\n  return react_default.a.createElement(OverlayTrigger["a" /* default */], {\n    placement: tooltip,\n    overlay: react_default.a.createElement(Tooltip["a" /* default */], null, name)\n  }, react_default.a.createElement("img", {\n    className: avatarSize,\n    src: avatarAPI,\n    alt: name\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/TopBar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction TopBar() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive;\n\n  var id = roomActive.id,\n      name = roomActive.name,\n      status = roomActive.status,\n      isPrivate = roomActive.isPrivate;\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var onShowStatus = function onShowStatus(status) {\n    if (isPrivate) status = status === \'online\' ? \'Online\' : \'Offline\';else status = \'Online\';\n    return "\\u0110ang ".concat(status);\n  };\n\n  var onPhoneChat = function onPhoneChat() {\n    if (id) dispatch(controls_toggleCall());\n  };\n\n  var onVideoChat = function onVideoChat() {\n    if (id) dispatch(controls_toggleCall(true));\n  };\n\n  var onShowMembers = function onShowMembers() {\n    if (id) dispatch(controls_toggleUsersBar());\n  };\n\n  return react_default.a.createElement("div", {\n    className: "top"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "inside"\n  }, react_default.a.createElement(Avatar, {\n    name: name,\n    type: isPrivate ? \'user\' : \'room\',\n    tooltip: "left"\n  }), react_default.a.createElement("div", {\n    className: "status"\n  }, react_default.a.createElement("i", {\n    className: "material-icons ".concat(isPrivate ? status : \'online\')\n  }, "fiber_manual_record")), react_default.a.createElement("div", {\n    className: "data"\n  }, react_default.a.createElement("h5", null, name), react_default.a.createElement("span", null, onShowStatus(status))), react_default.a.createElement("button", {\n    className: "btn d-md-block d-none",\n    onClick: onPhoneChat\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-30"\n  }, "phone_in_talk")), react_default.a.createElement("button", {\n    className: "btn d-md-block d-none",\n    onClick: onVideoChat\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-36"\n  }, "videocam")), react_default.a.createElement("button", {\n    className: "btn",\n    onClick: onShowMembers\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-30"\n  }, "info"))))));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-new-window/umd/react-new-window.js\nvar react_new_window = __webpack_require__(335);\nvar react_new_window_default = /*#__PURE__*/__webpack_require__.n(react_new_window);\n\n// CONCATENATED MODULE: ./src/components/VideoCall/LocalOptions.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction LocalOptions(_ref) {\n  var children = _ref.children;\n  return react_default.a.createElement(simplewebrtc_module["k" /* UserControls */], {\n    render: function render(_ref2) {\n      var isMuted = _ref2.isMuted,\n          isPaused = _ref2.isPaused,\n          mute = _ref2.mute,\n          unmute = _ref2.unmute,\n          resumeVideo = _ref2.resumeVideo,\n          pauseVideo = _ref2.pauseVideo;\n      return react_default.a.createElement("div", {\n        className: "options"\n      }, react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: function onClick() {\n          return isPaused ? resumeVideo() : pauseVideo();\n        }\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, isPaused ? \'play_arrow\' : \'pause\')), children, react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: function onClick() {\n          return isMuted ? unmute() : mute();\n        }\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, isMuted ? \'volume_off\' : \'volume_up\')));\n    }\n  });\n}\n// CONCATENATED MODULE: ./src/components/VideoCall/Options.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction Options(_ref) {\n  var localVideos = _ref.localVideos,\n      localScreen = _ref.localScreen;\n  var dispatch = Object(es["c" /* useDispatch */])();\n  return react_default.a.createElement(LocalOptions, null, localVideos && localVideos.length ? react_default.a.createElement(simplewebrtc_module["e" /* MediaControls */], {\n    media: localVideos[0],\n    autoRemove: true,\n    render: function render(_ref2) {\n      var remove = _ref2.remove;\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: remove\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "videocam_off"));\n    }\n  }) : react_default.a.createElement(simplewebrtc_module["i" /* RequestUserMedia */], {\n    video: true,\n    audio: true,\n    render: function render(getUserMedia) {\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: getUserMedia\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "videocam"));\n    }\n  }), react_default.a.createElement("button", {\n    className: "btn option call-end",\n    onClick: function onClick() {\n      return dispatch(controls_toggleCall());\n    }\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-30"\n  }, "call_end")), localScreen ? react_default.a.createElement(simplewebrtc_module["e" /* MediaControls */], {\n    media: localScreen,\n    autoRemove: true,\n    render: function render(_ref3) {\n      var stopSharing = _ref3.stopSharing;\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: stopSharing\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "stop_screen_share"));\n    }\n  }) : react_default.a.createElement(simplewebrtc_module["h" /* RequestDisplayMedia */], {\n    render: function render(getDisplayMedia) {\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: getDisplayMedia\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "screen_share"));\n    }\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/VideoCall/CallStatus.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction CallStatus(_ref) {\n  var value = _ref.value;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomActive;\n  }),\n      name = _useSelector.name,\n      isPrivate = _useSelector.isPrivate;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var avatarType = isPrivate ? \'user\' : \'room\';\n\n  var onCloseCall = function onCloseCall() {\n    return dispatch(controls_toggleCall());\n  };\n\n  return react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "inside"\n  }, react_default.a.createElement("div", {\n    className: "panel"\n  }, react_default.a.createElement("div", {\n    className: "participant"\n  }, react_default.a.createElement(Avatar, {\n    name: name,\n    type: avatarType,\n    tooltip: "bottom",\n    size: "xxl"\n  }), react_default.a.createElement("span", null, value)), react_default.a.createElement(Options, null), react_default.a.createElement("button", {\n    className: "btn back",\n    onClick: onCloseCall\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-24"\n  }, "chat")))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/VideoCall/index.jsx\nfunction VideoCall_toConsumableArray(arr) { return VideoCall_arrayWithoutHoles(arr) || VideoCall_iterableToArray(arr) || VideoCall_nonIterableSpread(); }\n\nfunction VideoCall_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction VideoCall_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction VideoCall_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\nfunction VideoCall() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive,\n      videoCall = _useSelector.videoCall;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var id = roomActive.id,\n      name = roomActive.name;\n\n  var onUnload = function onUnload() {\n    return dispatch(controls_toggleCall());\n  };\n\n  return react_default.a.createElement(react_new_window_default.a, {\n    title: name,\n    onUnload: onUnload\n  }, react_default.a.createElement("link", {\n    href: "https://fonts.googleapis.com/icon?family=Material+Icons",\n    rel: "stylesheet"\n  }), react_default.a.createElement("div", {\n    className: "call"\n  }, react_default.a.createElement(simplewebrtc_module["f" /* Provider */], {\n    configUrl: SWRTC_CONFIG_URL\n  }, react_default.a.createElement(simplewebrtc_module["b" /* Connecting */], null, react_default.a.createElement(CallStatus, {\n    value: "\\u0110ang k\\u1EBFt n\\u1ED1i"\n  })), react_default.a.createElement(simplewebrtc_module["c" /* Disconnected */], null, react_default.a.createElement(CallStatus, {\n    value: "Kh\\xF4ng c\\xF3 k\\u1EBFt n\\u1ED1i"\n  })), react_default.a.createElement(simplewebrtc_module["a" /* Connected */], null, react_default.a.createElement(simplewebrtc_module["g" /* RemoteAudioPlayer */], null), react_default.a.createElement(simplewebrtc_module["i" /* RequestUserMedia */], {\n    audio: true,\n    auto: true\n  }), videoCall.cam && react_default.a.createElement(simplewebrtc_module["i" /* RequestUserMedia */], {\n    video: true,\n    auto: true\n  }), react_default.a.createElement(simplewebrtc_module["j" /* Room */], {\n    roomAddress: id,\n    name: name,\n    password: key\n  }, function (_ref) {\n    var localMedia = _ref.localMedia,\n        remoteMedia = _ref.remoteMedia;\n    var remoteVideos = remoteMedia.filter(function (m) {\n      return m.kind === \'video\';\n    });\n    var localVideos = localMedia.filter(function (m) {\n      return m.kind === \'video\' && m.shared;\n    });\n    var localScreens = localVideos.filter(function (m) {\n      return m.screenCapture;\n    });\n    return react_default.a.createElement("div", {\n      className: "video-chat"\n    }, react_default.a.createElement(simplewebrtc_module["d" /* GridLayout */], {\n      className: "w-100",\n      items: [localVideos[0]].concat(VideoCall_toConsumableArray(localScreens), VideoCall_toConsumableArray(remoteVideos)),\n      renderCell: function renderCell(item) {\n        return item && react_default.a.createElement(simplewebrtc_module["l" /* Video */], {\n          media: item\n        });\n      }\n    }), react_default.a.createElement(Options, {\n      localVideos: localVideos,\n      localScreen: localScreens[0]\n    }));\n  })))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Controls/FilterRooms.jsx\nfunction FilterRooms_slicedToArray(arr, i) { return FilterRooms_arrayWithHoles(arr) || FilterRooms_iterableToArrayLimit(arr, i) || FilterRooms_nonIterableRest(); }\n\nfunction FilterRooms_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction FilterRooms_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction FilterRooms_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction FilterRooms(_ref) {\n  var placeholder = _ref.placeholder;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomFilter;\n  }),\n      name = _useSelector.name,\n      status = _useSelector.status,\n      isPrivate = _useSelector.isPrivate;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])(\'\'),\n      _useState2 = FilterRooms_slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var roomName = event.target.value.toLowerCase().trim();\n    setSearchText(event.target.value);\n    dispatch(controls_filterRooms(roomName, status, isPrivate));\n  };\n\n  Object(react["useEffect"])(function () {\n    setSearchText(\'\');\n  }, [isPrivate]);\n  return react_default.a.createElement("div", {\n    id: "room-filter"\n  }, react_default.a.createElement("div", {\n    className: "search"\n  }, react_default.a.createElement("form", {\n    className: "form-inline position-relative"\n  }, react_default.a.createElement("input", {\n    type: "search",\n    className: "form-control",\n    placeholder: placeholder,\n    onChange: onChange,\n    value: searchText\n  }), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn btn-link loop"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "search")))), react_default.a.createElement("div", {\n    className: "list-group sort"\n  }, react_default.a.createElement("button", {\n    className: "btn ".concat(status === 0 && \'active show\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(name, 0, isPrivate));\n    }\n  }, "T\\u1EA5t c\\u1EA3"), react_default.a.createElement("button", {\n    className: "btn ".concat(status === 1 && \'active show\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(name, 1, isPrivate));\n    }\n  }, isPrivate ? \'Online\' : \'Đã đọc\'), react_default.a.createElement("button", {\n    className: "btn ".concat(status === -1 && \'active show\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(name, -1, isPrivate));\n    }\n  }, isPrivate ? \'Offline\' : \'Chưa đọc\')));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/DropdownButton.js\nvar DropdownButton = __webpack_require__(773);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Dropdown.js + 13 modules\nvar Dropdown = __webpack_require__(145);\n\n// CONCATENATED MODULE: ./src/components/Controls/SortMembers.jsx\nfunction SortMembers_slicedToArray(arr, i) { return SortMembers_arrayWithHoles(arr) || SortMembers_iterableToArrayLimit(arr, i) || SortMembers_nonIterableRest(); }\n\nfunction SortMembers_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction SortMembers_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction SortMembers_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction SortMembers() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive,\n      userSort = _useSelector.userSort;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])(\'Sắp xếp theo\'),\n      _useState2 = SortMembers_slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var by = userSort.by,\n      value = userSort.value;\n  Object(react["useEffect"])(function () {\n    setTitle(\'Sắp xếp theo\');\n  }, [roomActive.id]);\n  return react_default.a.createElement(DropdownButton["a" /* default */], {\n    title: title,\n    size: "sm",\n    variant: "light"\n  }, react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      setTitle(\'Đang Online\');\n      dispatch(controls_sortMembers(\'status\', 1));\n    }\n  }, "\\u0110ang Online", by === \'status\' && value === 1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")), react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      setTitle(\'Đang Offline\');\n      dispatch(controls_sortMembers(\'status\', -1));\n    }\n  }, "\\u0110ang Offline", by === \'status\' && value === -1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")), react_default.a.createElement(Dropdown["a" /* default */].Divider, null), react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      setTitle(\'A đến Z\');\n      dispatch(controls_sortMembers(\'name\', 1));\n    }\n  }, "A \\u0111\\u1EBFn Z", by === \'name\' && value === 1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")), react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      setTitle(\'Z đến A\');\n      dispatch(controls_sortMembers(\'name\', -1));\n    }\n  }, "Z \\u0111\\u1EBFn A", by === \'name\' && value === -1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Controls/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/ButtonToolbar.js\nvar ButtonToolbar = __webpack_require__(774);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Button.js\nvar Button = __webpack_require__(336);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Modal.js + 20 modules\nvar Modal = __webpack_require__(777);\n\n// CONCATENATED MODULE: ./src/components/PopUp/Dialog.jsx\nfunction Dialog_slicedToArray(arr, i) { return Dialog_arrayWithHoles(arr) || Dialog_iterableToArrayLimit(arr, i) || Dialog_nonIterableRest(); }\n\nfunction Dialog_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction Dialog_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction Dialog_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Dialog(props) {\n  var _useState = Object(react["useState"])(false),\n      _useState2 = Dialog_slicedToArray(_useState, 2),\n      modalShow = _useState2[0],\n      setModalShow = _useState2[1];\n\n  var type = props.type,\n      title = props.title,\n      icon = props.icon,\n      disabled = props.disabled,\n      children = props.children;\n\n  var onCloseModal = function onCloseModal() {\n    return setModalShow(false);\n  };\n\n  var onShowModal = function onShowModal() {\n    if (!disabled) setModalShow(true);\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    props.onSubmit();\n    onCloseModal();\n  };\n\n  return react_default.a.createElement(ButtonToolbar["a" /* default */], null, react_default.a.createElement(Button["a" /* default */], {\n    className: type,\n    variant: "outline-primary",\n    onClick: onShowModal\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, icon)), react_default.a.createElement(Modal["a" /* default */], {\n    centered: true,\n    show: modalShow,\n    onHide: onCloseModal\n  }, react_default.a.createElement("div", {\n    className: "requests"\n  }, react_default.a.createElement(Modal["a" /* default */].Header, null, react_default.a.createElement(Modal["a" /* default */].Title, null, react_default.a.createElement("div", {\n    className: "title"\n  }, react_default.a.createElement("h1", null, title), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn",\n    onClick: onCloseModal\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "close"))))), react_default.a.createElement(Modal["a" /* default */].Body, null, react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("form", {\n    onSubmit: onSubmit\n  }, children, react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn button w-100"\n  }, title)))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/PopUp/CreateRoom.jsx\nfunction CreateRoom_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction CreateRoom_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { CreateRoom_ownKeys(Object(source), true).forEach(function (key) { CreateRoom_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { CreateRoom_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction CreateRoom_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction CreateRoom_slicedToArray(arr, i) { return CreateRoom_arrayWithHoles(arr) || CreateRoom_iterableToArrayLimit(arr, i) || CreateRoom_nonIterableRest(); }\n\nfunction CreateRoom_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction CreateRoom_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction CreateRoom_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction CreateRoom() {\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])({\n    name: \'\',\n    firstMessage: \'\'\n  }),\n      _useState2 = CreateRoom_slicedToArray(_useState, 2),\n      roomInfo = _useState2[0],\n      setRoomInfo = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var target = event.target;\n    var name = target.name,\n        value = target.value;\n    setRoomInfo(CreateRoom_objectSpread({}, roomInfo, CreateRoom_defineProperty({}, name, value)));\n  };\n\n  var onSubmit = function onSubmit() {\n    var name = roomInfo.name,\n        firstMessage = roomInfo.firstMessage;\n\n    if (name.trim()) {\n      dispatch(rooms_createRoom(name, firstMessage));\n      setRoomInfo(CreateRoom_objectSpread({}, roomInfo, {\n        name: \'\',\n        firstMessage: \'\'\n      }));\n    }\n  };\n\n  return react_default.a.createElement(Dialog, {\n    type: "create",\n    icon: "create",\n    title: "T\\u1EA1o ph\\xF2ng m\\u1EDBi",\n    onSubmit: onSubmit\n  }, react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "T\\xEAn ph\\xF2ng:"), react_default.a.createElement("input", {\n    type: "text",\n    name: "name",\n    value: roomInfo.name,\n    className: "form-control",\n    placeholder: "\\u0110\\u1EB7t t\\xEAn ph\\xF2ng...",\n    onChange: onChange,\n    required: true\n  })), react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "Tin nh\\u1EAFn:"), react_default.a.createElement("textarea", {\n    name: "firstMessage",\n    value: roomInfo.firstMessage,\n    className: "text-control",\n    placeholder: "Nh\\u1EADp tin nh\\u1EAFn \\u0111\\u1EA7u ti\\xEAn c\\u1EE7a b\\u1EA1n...",\n    onChange: onChange\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-images-upload/compiled.js\nvar compiled = __webpack_require__(337);\nvar compiled_default = /*#__PURE__*/__webpack_require__.n(compiled);\n\n// CONCATENATED MODULE: ./src/components/PopUp/UploadImage.jsx\nfunction UploadImage_slicedToArray(arr, i) { return UploadImage_arrayWithHoles(arr) || UploadImage_iterableToArrayLimit(arr, i) || UploadImage_nonIterableRest(); }\n\nfunction UploadImage_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction UploadImage_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction UploadImage_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction UploadImage() {\n  var roomActive = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomActive;\n  });\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])([]),\n      _useState2 = UploadImage_slicedToArray(_useState, 2),\n      pictures = _useState2[0],\n      setPictures = _useState2[1];\n\n  var _useState3 = Object(react["useState"])(\'\'),\n      _useState4 = UploadImage_slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var onDrop = function onDrop(pictureFiles) {\n    return setPictures(pictureFiles);\n  };\n\n  var onChange = function onChange(event) {\n    return setMessage(event.target.value);\n  };\n\n  var onSubmit = function onSubmit() {\n    if (pictures.length === 0) return;\n    var parts = [];\n    pictures.forEach(function (pic) {\n      return parts.push({\n        file: pic\n      });\n    });\n    if (message.trim()) parts.push({\n      type: \'text/plain\',\n      content: message\n    });\n    dispatch(messages_sendMessage(parts));\n    setPictures([]);\n    setMessage(\'\');\n  };\n\n  return react_default.a.createElement(Dialog, {\n    type: "attach",\n    title: "Th\\xEAm \\u1EA3nh",\n    icon: "photo",\n    onSubmit: onSubmit,\n    disabled: !roomActive.id\n  }, react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "Tin nh\\u1EAFn:"), react_default.a.createElement(compiled_default.a, {\n    withIcon: true,\n    withPreview: true,\n    buttonText: "Ch\\u1ECDn \\u1EA3nh t\\u1EEB m\\xE1y",\n    imgExtension: [\'.jpg\', \'.jpeg\', \'.png\', \'.gif\'],\n    maxFileSize: 5242880,\n    onChange: onDrop\n  })), react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "Tin nh\\u1EAFn:"), react_default.a.createElement("input", {\n    type: "text",\n    name: "name",\n    value: message,\n    className: "form-control",\n    placeholder: "Th\\xEAm tin nh\\u1EAFn v\\u1EC1 \\u1EA3nh n\\xE0y...",\n    onChange: onChange\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/PopUp/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/LeftSideBar/ChatList.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction ChatList(_ref) {\n  var match = _ref.match,\n      chatName = _ref.chatName,\n      isOnline = _ref.isOnline,\n      room = _ref.room,\n      type = _ref.type;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive;\n\n  var id = room.id,\n      unreadCount = room.unreadCount,\n      createdAt = room.createdAt,\n      lastMessageAt = room.lastMessageAt,\n      customData = room.customData;\n  var isActive = roomActive.id === id && \'active\';\n  var isRead = unreadCount > 0 && \'unread\';\n  var lastMessage = customData.lastMessage;\n  var lastMessageTime = new Date(lastMessageAt ? lastMessageAt : createdAt).toLocaleDateString(\'vi-Vn\', {\n    weekday: \'narrow\',\n    year: \'2-digit\',\n    month: \'2-digit\',\n    day: \'2-digit\'\n  });\n\n  var showUnreadCount = function showUnreadCount(unreadCount) {\n    if (unreadCount > 0) {\n      var color = unreadCount > 10 ? \'pink\' : \'yellow\';\n      return react_default.a.createElement("div", {\n        className: "new bg-".concat(color)\n      }, react_default.a.createElement("span", null, unreadCount));\n    }\n  };\n\n  return react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "".concat(match.path, "/").concat(id),\n    className: "".concat(isRead, " ").concat(isActive, " single")\n  }, react_default.a.createElement(Avatar, {\n    name: chatName,\n    type: type\n  }), react_default.a.createElement("div", {\n    className: "status"\n  }, react_default.a.createElement("i", {\n    className: "material-icons ".concat(isOnline)\n  }, "fiber_manual_record")), react_default.a.createElement("div", {\n    className: "data"\n  }, react_default.a.createElement("h5", null, chatName), react_default.a.createElement("span", null, lastMessageTime), react_default.a.createElement("p", null, lastMessage ? lastMessage : \'Chưa có tin nhắn\')), showUnreadCount(unreadCount));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/LeftSideBar/Contacts.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction Contacts(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      rooms = _useSelector.rooms,\n      roomFilter = _useSelector.roomFilter;\n\n  return react_default.a.createElement("div", {\n    className: "discussions"\n  }, react_default.a.createElement("h1", null, "Danh s\\xE1ch li\\xEAn h\\u1EC7"), react_default.a.createElement("div", {\n    className: "list-group"\n  }, rooms.filter(function (room) {\n    if (!room.id) return;\n    return room.isPrivate;\n  }).filter(function (room) {\n    var _onGetPrivateUser = onGetPrivateUser(room, currentUser.id, true),\n        roomName = _onGetPrivateUser.roomName,\n        roomStatus = _onGetPrivateUser.roomStatus;\n\n    if (roomFilter.status === 0) return roomName.indexOf(roomFilter.name) !== -1;\n    return roomName.indexOf(roomFilter.name) !== -1 && roomStatus === roomFilter.status;\n  }).map(function (room) {\n    var _onGetPrivateUser2 = onGetPrivateUser(room, currentUser.id, false),\n        roomName = _onGetPrivateUser2.roomName,\n        roomStatus = _onGetPrivateUser2.roomStatus;\n\n    return react_default.a.createElement(ChatList, {\n      key: room.id,\n      match: match,\n      chatName: roomName,\n      isOnline: roomStatus,\n      room: room,\n      type: "user"\n    });\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/LeftSideBar/Rooms.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction Rooms(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      rooms = _useSelector.rooms,\n      roomFilter = _useSelector.roomFilter;\n\n  return react_default.a.createElement("div", {\n    className: "discussions"\n  }, react_default.a.createElement("h1", null, "C\\xE1c ph\\xF2ng chat"), react_default.a.createElement("div", {\n    className: "list-group"\n  }, rooms.filter(function (room) {\n    if (!room.id) return;\n    return !room.isPrivate;\n  }).filter(function (_ref2) {\n    var name = _ref2.name,\n        unreadCount = _ref2.unreadCount;\n    var roomName = name.toLowerCase();\n    var roomStatus = unreadCount === 0 ? 1 : -1;\n    if (roomFilter.status === 0) return roomName.indexOf(roomFilter.name) !== -1;\n    return roomName.indexOf(roomFilter.name) !== -1 && roomStatus === roomFilter.status;\n  }).sort(function (a, b) {\n    var lastMessageA = new Date(a.lastMessageAt);\n    var lastMessageB = new Date(b.lastMessageAt);\n    return lastMessageB - lastMessageA;\n  }).map(function (room) {\n    var id = room.id,\n        name = room.name,\n        userIds = room.userIds;\n    var isOnline = userIds && userIds.find(function (id) {\n      return currentUser.id === id;\n    });\n    return react_default.a.createElement(ChatList, {\n      key: id,\n      match: match,\n      chatName: name,\n      isOnline: "".concat(isOnline && \'online\'),\n      room: room,\n      type: "room"\n    });\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Spinner.js\nvar Spinner = __webpack_require__(775);\n\n// CONCATENATED MODULE: ./src/components/LeftSideBar/RoomStatus.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction RoomStatus(_ref) {\n  var title = _ref.title;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      isLoading = _useSelector.isLoading;\n\n  return react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "no-messages"\n  }, !isLoading && react_default.a.createElement("i", {\n    className: "material-icons md-48"\n  }, "forum"), react_default.a.createElement("p", null, title), isLoading && react_default.a.createElement(Spinner["a" /* default */], {\n    animation: "border",\n    variant: "primary"\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/LeftSideBar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction LeftSideBar(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomFilter;\n  }),\n      isPrivate = _useSelector.isPrivate;\n\n  return react_default.a.createElement("div", {\n    className: "sidebar"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement(FilterRooms, {\n    placeholder: isPrivate ? \'Tìm kiếm liên hệ...\' : \'Tìm kiếm phòng chat...\'\n  }), !isPrivate && react_default.a.createElement(CreateRoom, null), isPrivate ? react_default.a.createElement(Contacts, {\n    match: match\n  }) : react_default.a.createElement(Rooms, {\n    match: match\n  }))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/RightSideBar/Members.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction Members(_ref) {\n  var match = _ref.match,\n      adminId = _ref.adminId,\n      isPrivate = _ref.isPrivate;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      rooms = _useSelector.rooms,\n      roomUsers = _useSelector.roomUsers,\n      userSort = _useSelector.userSort;\n\n  var privateRooms = rooms.filter(function (room) {\n    return room.isPrivate;\n  }).map(function (_ref2) {\n    var id = _ref2.id,\n        customData = _ref2.customData;\n    var memberIds = customData.members.map(function (member) {\n      return member.id;\n    });\n    return {\n      id: id,\n      memberIds: memberIds\n    };\n  });\n\n  var onShowMemberData = function onShowMemberData(id, createdDate) {\n    createdDate = "\\u0110\\u01B0\\u1EE3c t\\u1EA1o v\\xE0o th\\xE1ng ".concat(createdDate);\n    if (isPrivate) return createdDate;\n    return adminId === id ? \'Quản trị viên\' : createdDate;\n  };\n\n  return react_default.a.createElement("div", {\n    className: "contacts"\n  }, react_default.a.createElement("div", {\n    className: "sort-members"\n  }, react_default.a.createElement("h1", null, "Th\\xE0nh vi\\xEAn", react_default.a.createElement("hr", null)), react_default.a.createElement(SortMembers, null)), react_default.a.createElement("div", {\n    className: "list-group"\n  }, roomUsers.sort(function (a, b) {\n    var by = userSort.by,\n        value = userSort.value;\n\n    if (by == \'name\') {\n      var nameA = a.name.toLowerCase();\n      var nameB = b.name.toLowerCase();\n      if (nameA > nameB) return value;\n      if (nameA < nameB) return -value;\n      return 0;\n    } else if (by == \'status\') {\n      var stateA = a.presence.state;\n      var stateB = b.presence.state;\n      if (stateA > stateB) return -value;\n      if (stateA < stateB) return value;\n      return 0;\n    }\n  }).map(function (_ref3) {\n    var id = _ref3.id,\n        name = _ref3.name,\n        presence = _ref3.presence,\n        createdAt = _ref3.createdAt;\n    var index = privateRooms.findIndex(function (_ref4) {\n      var memberIds = _ref4.memberIds;\n      if (currentUser.id === id) return memberIds.length === 1;\n      return memberIds.includes(currentUser.id) && memberIds.includes(id);\n    });\n    var state = presence.state;\n    var createdDate = new Date(createdAt).toLocaleDateString(\'vi-VN\', {\n      year: \'2-digit\',\n      month: \'numeric\'\n    });\n    return react_default.a.createElement(react_router_dom["b" /* Link */], {\n      key: id,\n      to: "".concat(match.path, "/").concat(privateRooms[index].id),\n      className: "contact"\n    }, react_default.a.createElement(Avatar, {\n      name: name,\n      type: "user"\n    }), react_default.a.createElement("div", {\n      className: "status"\n    }, react_default.a.createElement("i", {\n      className: "material-icons ".concat(state)\n    }, "fiber_manual_record")), react_default.a.createElement("div", {\n      className: "data"\n    }, react_default.a.createElement("h5", null, name), react_default.a.createElement("p", null, onShowMemberData(id, createdDate))), react_default.a.createElement("div", {\n      className: "person-add"\n    }, react_default.a.createElement("i", {\n      className: "material-icons"\n    }, "person")));\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Jumbotron.js\nvar Jumbotron = __webpack_require__(776);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Accordion.js + 4 modules\nvar Accordion = __webpack_require__(778);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Card.js + 2 modules\nvar Card = __webpack_require__(779);\n\n// EXTERNAL MODULE: ./node_modules/react-images/dist/react-images.es.js + 1 modules\nvar react_images_es = __webpack_require__(146);\n\n// CONCATENATED MODULE: ./src/components/Images/ImageCarousel.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction ImageCarousel() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      images = _useSelector.images,\n      showCarousel = _useSelector.showCarousel;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var toggleModal = function toggleModal() {\n    return dispatch(controls_toggleCarousel());\n  };\n\n  return react_default.a.createElement(react_images_es["b" /* ModalGateway */], null, react_default.a.createElement(react_images_es["a" /* Modal */], {\n    onClose: toggleModal\n  }, react_default.a.createElement(react_images_es["c" /* default */], {\n    currentIndex: showCarousel.imageIndex,\n    views: images\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Images/ImageList.jsx\nfunction ImageList_slicedToArray(arr, i) { return ImageList_arrayWithHoles(arr) || ImageList_iterableToArrayLimit(arr, i) || ImageList_nonIterableRest(); }\n\nfunction ImageList_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction ImageList_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction ImageList_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction ImageList() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      images = _useSelector.images,\n      showCarousel = _useSelector.showCarousel;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])(false),\n      _useState2 = ImageList_slicedToArray(_useState, 2),\n      rotate = _useState2[0],\n      setRotate = _useState2[1];\n\n  var onRotateIcon = function onRotateIcon() {\n    return setRotate(!rotate);\n  };\n\n  var onShowImages = function onShowImages() {\n    if (images.length === 0) return react_default.a.createElement(Jumbotron["a" /* default */], {\n      className: "m-0 text-center"\n    }, react_default.a.createElement("i", {\n      className: "material-icons display-4"\n    }, "photo_size_select_actual"), react_default.a.createElement("p", null, "Kh\\xF4ng c\\xF3 h\\xECnh \\u1EA3nh \\u0111\\u1EC3 hi\\u1EC3n th\\u1ECB"));\n    return images.map(function (url, index) {\n      return react_default.a.createElement("img", {\n        key: index,\n        className: "img-thumbnail",\n        src: url.src,\n        alt: "attachment",\n        onClick: function onClick() {\n          return dispatch(controls_toggleCarousel(index, \'ImageList\'));\n        }\n      });\n    });\n  };\n\n  return react_default.a.createElement(Accordion["a" /* default */], null, react_default.a.createElement(Card["a" /* default */], null, react_default.a.createElement(Card["a" /* default */].Header, null, react_default.a.createElement(Accordion["a" /* default */].Toggle, {\n    as: Button["a" /* default */],\n    variant: "default",\n    eventKey: "0",\n    onClick: onRotateIcon\n  }, "\\u1EA2nh \\u0111\\xE3 chia s\\u1EBB", react_default.a.createElement("i", {\n    className: "material-icons ".concat(rotate && \'rotate\')\n  }, "keyboard_arrow_left"))), react_default.a.createElement(Accordion["a" /* default */].Collapse, {\n    eventKey: "0"\n  }, react_default.a.createElement(Card["a" /* default */].Body, {\n    className: "p-0"\n  }, onShowImages(), showCarousel.where === \'ImageList\' && react_default.a.createElement(ImageCarousel, null)))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Images/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/RightSideBar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction RightSideBar(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      showUsersBar = _useSelector.showUsersBar,\n      roomActive = _useSelector.roomActive;\n\n  var name = roomActive.name,\n      createdByUserId = roomActive.createdByUserId,\n      isPrivate = roomActive.isPrivate;\n  var avatarType = isPrivate ? \'user\' : \'room\';\n  return react_default.a.createElement("div", {\n    className: "sidebar ".concat(!showUsersBar && \'d-none\')\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "room-info"\n  }, react_default.a.createElement(Avatar, {\n    name: name,\n    type: avatarType,\n    size: "xl"\n  }), react_default.a.createElement("h4", null, name)), react_default.a.createElement("hr", null), react_default.a.createElement(Members, {\n    match: match,\n    adminId: createdByUserId,\n    isPrivate: isPrivate\n  })), react_default.a.createElement("hr", null), react_default.a.createElement(ImageList, null)));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/Wrapper.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Wrapper(_ref) {\n  var userType = _ref.userType,\n      userName = _ref.userName,\n      updatedAt = _ref.updatedAt,\n      children = _ref.children;\n  return react_default.a.createElement("div", {\n    className: "message ".concat(userType)\n  }, userType !== \'me\' && react_default.a.createElement(Avatar, {\n    name: userName,\n    type: "user"\n  }), react_default.a.createElement("div", {\n    className: "text-main"\n  }, react_default.a.createElement("div", {\n    className: "text-group ".concat(userType)\n  }, children), updatedAt && react_default.a.createElement("span", null, new Date(updatedAt).toLocaleTimeString(\'en-US\', {\n    hour: \'2-digit\',\n    minute: \'2-digit\'\n  }))));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-player/lib/ReactPlayer.js\nvar ReactPlayer = __webpack_require__(340);\nvar ReactPlayer_default = /*#__PURE__*/__webpack_require__.n(ReactPlayer);\n\n// EXTERNAL MODULE: ./node_modules/@microlink/react/dist/microlink.m.js\nvar microlink_m = __webpack_require__(341);\n\n// CONCATENATED MODULE: ./src/components/MessageList/LinkPreview.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction LinkPreview(_ref) {\n  var urlMatches = _ref.urlMatches;\n  var videoSignal = {\n    youtube: \'watch?v=\',\n    facebook: \'videos\'\n  };\n  return urlMatches.map(function (url, index) {\n    if (url.includes(\'youtube\') && url.includes(videoSignal.youtube) || url.includes(\'facebook\') && url.includes(videoSignal.facebook)) return react_default.a.createElement(ReactPlayer_default.a, {\n      key: index,\n      className: "mt-2",\n      url: url,\n      width: "100%",\n      height: "300px",\n      controls: true\n    });\n    return react_default.a.createElement(microlink_m["a" /* default */], {\n      key: index,\n      className: "mt-2",\n      url: url\n    });\n  });\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/Content.jsx\nfunction Content_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction Content(_ref) {\n  var currentUserName = _ref.currentUserName,\n      text = _ref.text;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomUsers = _useSelector.roomUsers;\n\n  var insertTextAtIndices = function insertTextAtIndices(text, obj) {\n    return text.replace(/./g, function (character, index) {\n      return obj[index] ? obj[index] + character : character;\n    });\n  };\n\n  var messageText = text;\n  var urlMatches = text.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\n  var mentions = text.match(/@[a-zA-Z0-9]+/g) || [];\n  var roomUserNames = roomUsers.map(function (user) {\n    return "@".concat(user.name);\n  });\n  var mentionedUsers = mentions.filter(function (username) {\n    return roomUserNames.includes(username);\n  });\n  urlMatches.forEach(function (link) {\n    var _insertTextAtIndices;\n\n    var startIndex = text.indexOf(link);\n    var endIndex = startIndex + link.length;\n    messageText = insertTextAtIndices(messageText, (_insertTextAtIndices = {}, Content_defineProperty(_insertTextAtIndices, startIndex, "<a class=\\"embedded-link\\" href=\\"".concat(link, "\\" target=\\"_blank\\">")), Content_defineProperty(_insertTextAtIndices, endIndex, \'</a>\'), _insertTextAtIndices));\n  });\n  mentionedUsers.forEach(function (user) {\n    var _insertTextAtIndices2;\n\n    var startIndex = messageText.indexOf(user);\n    var endIndex = startIndex + user.length;\n    var isMe = currentUserName === user.substring(1) ? \'danger\' : \'info\';\n    messageText = insertTextAtIndices(messageText, (_insertTextAtIndices2 = {}, Content_defineProperty(_insertTextAtIndices2, startIndex, "<span class=\\"badge badge-pill badge-".concat(isMe, "\\">")), Content_defineProperty(_insertTextAtIndices2, endIndex, \'</span>\'), _insertTextAtIndices2));\n  });\n  return react_default.a.createElement("div", null, react_default.a.createElement("p", {\n    dangerouslySetInnerHTML: {\n      __html: messageText\n    }\n  }), react_default.a.createElement(LinkPreview, {\n    urlMatches: urlMatches\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/Message.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction Message(_ref) {\n  var parts = _ref.parts,\n      userType = _ref.userType;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      images = _useSelector.images;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  if (parts.length === 0) return;\n  return parts.map(function (part, index) {\n    var partType = part.partType,\n        payload = part.payload;\n    if (partType === \'inline\') return react_default.a.createElement("div", {\n      key: index,\n      className: "text ".concat(userType)\n    }, react_default.a.createElement(Content, {\n      currentUserName: currentUser.name,\n      text: payload.content\n    }));\n\n    if (Date.now() > Date.parse(payload._expiration)) {\n      payload._fetchNewDownloadURL();\n    }\n\n    var imageIndex = images.findIndex(function (img) {\n      return img.src === payload._downloadURL;\n    });\n    return react_default.a.createElement("img", {\n      key: index,\n      className: "img-thumbnail \\n\\t\\t\\t\\t\\t".concat(payload.size < 100000 && \'w-75\', "\\n\\t\\t\\t\\t\\t").concat(index !== parts.length - 1 && \'mb-3\', "\\n\\t\\t\\t\\t"),\n      src: payload._downloadURL,\n      alt: "attachment",\n      onClick: function onClick() {\n        return dispatch(controls_toggleCarousel(imageIndex, \'MessageList\'));\n      }\n    });\n  });\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction MessageList(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      roomUsers = _useSelector.roomUsers,\n      typingUsers = _useSelector.typingUsers,\n      messages = _useSelector.messages,\n      isLoading = _useSelector.isLoading,\n      justLoadMore = _useSelector.justLoadMore,\n      showCarousel = _useSelector.showCarousel;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var messageNode = Object(react["useRef"])(null);\n  var messageDay = 0;\n  var roomId = match.params.roomId;\n  var roomNotFound = !roomUsers.length;\n  Object(react["useEffect"])(function () {\n    dispatch(rooms_enterRoom(roomId));\n  }, [roomId]);\n  Object(react["useEffect"])(function () {\n    messageNode.current.scrollIntoView();\n  }, [isLoading]);\n  Object(react["useEffect"])(function () {\n    if (document.hasFocus() && roomId && !justLoadMore) messageNode.current.scrollIntoView({\n      behavior: \'smooth\'\n    });\n  }, [messages, typingUsers]);\n\n  var onShowMessageDay = function onShowMessageDay(updatedAt) {\n    var sendDay = new Date(updatedAt).setHours(0, 0, 0, 0);\n\n    if (sendDay > messageDay) {\n      messageDay = sendDay;\n      return react_default.a.createElement("div", {\n        className: "date"\n      }, react_default.a.createElement("hr", null), react_default.a.createElement("span", null, messageDay === new Date().setHours(0, 0, 0, 0) ? \'Hôm nay\' : new Date(updatedAt).toLocaleDateString(\'vi-VN\', {\n        weekday: \'narrow\',\n        year: \'numeric\',\n        month: \'2-digit\',\n        day: \'2-digit\'\n      })), react_default.a.createElement("hr", null));\n    }\n  };\n\n  var onShowMessage = function onShowMessage() {\n    if (messages.length === 0 && !isLoading && !roomNotFound) return react_default.a.createElement(RoomStatus, {\n      title: "B\\u1EAFt \\u0111\\u1EA7u cu\\u1ED9c tr\\xF2 chuy\\u1EC7n m\\u1EDBi..."\n    });else if (isLoading) return react_default.a.createElement(RoomStatus, {\n      title: "\\u0110ang t\\u1EA3i, \\u0111\\u1EE3i ch\\xFAt !"\n    });else if (!isLoading && roomNotFound) return react_default.a.createElement(RoomStatus, {\n      title: "404 Not Found :("\n    });\n    return messages.map(function (_ref2) {\n      var id = _ref2.id,\n          sender = _ref2.sender,\n          updatedAt = _ref2.updatedAt,\n          parts = _ref2.parts;\n      var userType = sender.id === currentUser.id && \'me\';\n      return react_default.a.createElement("div", {\n        key: id\n      }, onShowMessageDay(updatedAt), react_default.a.createElement(Wrapper, {\n        userType: userType,\n        userName: sender.name,\n        updatedAt: updatedAt\n      }, react_default.a.createElement(Message, {\n        parts: parts,\n        userType: userType\n      })));\n    });\n  };\n\n  var onShowTypingUsers = function onShowTypingUsers() {\n    return typingUsers.map(function (user) {\n      var id = user.id,\n          name = user.name;\n      if (currentUser.id === id) return;\n      return react_default.a.createElement(Wrapper, {\n        key: id,\n        userType: "text typing",\n        userName: name\n      }, react_default.a.createElement("div", {\n        className: "wave"\n      }, react_default.a.createElement("span", {\n        className: "dot"\n      }), "\\xA0", react_default.a.createElement("span", {\n        className: "dot"\n      }), "\\xA0", react_default.a.createElement("span", {\n        className: "dot"\n      })));\n    });\n  };\n\n  return react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, onShowMessage(), typingUsers.length > 0 && onShowTypingUsers(), showCarousel.where === \'MessageList\' && react_default.a.createElement(ImageCarousel, null), react_default.a.createElement("div", {\n    ref: messageNode\n  }));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/emoji-mart/dist-es/index.js + 29 modules\nvar dist_es = __webpack_require__(143);\n\n// EXTERNAL MODULE: ./node_modules/emoji-mart/css/emoji-mart.css\nvar emoji_mart = __webpack_require__(762);\n\n// EXTERNAL MODULE: ./node_modules/@webscopeio/react-textarea-autocomplete/dist/react-textarea-autocomplete.es.js\nvar react_textarea_autocomplete_es = __webpack_require__(347);\n\n// CONCATENATED MODULE: ./src/components/SendMessage/TextArea.jsx\nfunction TextArea_toConsumableArray(arr) { return TextArea_arrayWithoutHoles(arr) || TextArea_iterableToArray(arr) || TextArea_nonIterableSpread(); }\n\nfunction TextArea_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction TextArea_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction TextArea_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction TextArea(props) {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomActive;\n  }),\n      id = _useSelector.id,\n      users = _useSelector.users;\n\n  var filterUserNames = function filterUserNames(token) {\n    return users.filter(function (user) {\n      return user.name.includes(token);\n    });\n  };\n\n  var onChange = function onChange(event) {\n    return props.onChange(event.target.value);\n  };\n\n  var onSubmit = function onSubmit(event) {\n    var key = event.key,\n        shiftKey = event.shiftKey,\n        altKey = event.altKey;\n    if (key === \'Enter\' && shiftKey === false && altKey === false) props.onSubmit();\n  };\n\n  return react_default.a.createElement(react_textarea_autocomplete_es["a" /* default */], {\n    className: "form-control",\n    value: props.message,\n    loadingComponent: function loadingComponent() {\n      return react_default.a.createElement("p", null, "Loading...");\n    },\n    onKeyUp: onSubmit,\n    onChange: onChange,\n    placeholder: "Nh\\u1EADp tin nh\\u1EAFn. G\\xF5 @ \\u0111\\u1EC3 \\u0111\\u1EC1 c\\u1EADp ai \\u0111\\xF3",\n    trigger: {\n      \'@\': {\n        dataProvider: function dataProvider(token) {\n          return TextArea_toConsumableArray(filterUserNames(token));\n        },\n        component: function component(_ref) {\n          var name = _ref.entity.name;\n          return react_default.a.createElement("div", null, name);\n        },\n        output: function output(item) {\n          return "@".concat(item.name);\n        }\n      },\n      \':\': {\n        dataProvider: function dataProvider(token) {\n          return dist_es["b" /* emojiIndex */].search(token).map(function (o) {\n            return {\n              colons: o.colons,\n              "native": o["native"]\n            };\n          });\n        },\n        component: function component(_ref2) {\n          var _ref2$entity = _ref2.entity,\n              _native = _ref2$entity["native"],\n              colons = _ref2$entity.colons;\n          return react_default.a.createElement("div", null, "".concat(colons, " ").concat(_native));\n        },\n        output: function output(item) {\n          return "".concat(item["native"]);\n        }\n      }\n    },\n    disabled: !id\n  });\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/SendMessage/index.jsx\nfunction SendMessage_slicedToArray(arr, i) { return SendMessage_arrayWithHoles(arr) || SendMessage_iterableToArrayLimit(arr, i) || SendMessage_nonIterableRest(); }\n\nfunction SendMessage_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction SendMessage_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction SendMessage_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction SendMessage() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive,\n      showPicker = _useSelector.showPicker;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])(\'\'),\n      _useState2 = SendMessage_slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var onTogglePicker = function onTogglePicker() {\n    return dispatch(controls_togglePicker());\n  };\n\n  var onAddEmoji = function onAddEmoji(emoji) {\n    return setMessage("".concat(message).concat(emoji["native"]));\n  };\n\n  var handleSlashCommand = function handleSlashCommand(message) {\n    var cmd = message.split(\'_\')[0];\n    var query = message.slice(cmd.length).substr(1);\n\n    if (cmd !== \'#news\') {\n      alert("L\\u1EC7nh ".concat(cmd, " Kh\\xF4ng h\\u1EE3p l\\u1EC7"));\n      return;\n    }\n\n    dispatch(messages_sendNews(query));\n  };\n\n  var onChange = function onChange(text) {\n    setMessage(text);\n    dispatch(messages_typingMessage());\n  };\n\n  var onSubmit = function onSubmit() {\n    onTogglePicker();\n    var parts = [];\n\n    if (message.trim()) {\n      if (message.startsWith(\'#\')) {\n        handleSlashCommand(message);\n        setMessage(\'\');\n        return;\n      }\n\n      parts.push({\n        type: \'text/plain\',\n        content: message\n      });\n      dispatch(messages_sendMessage(parts));\n      setMessage(\'\');\n    }\n  };\n\n  Object(react["useEffect"])(function () {\n    setMessage(\'\');\n  }, [roomActive]);\n  return react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "bottom"\n  }, react_default.a.createElement("form", {\n    className: "position-relative w-100"\n  }, react_default.a.createElement(TextArea, {\n    message: message,\n    onChange: onChange,\n    onSubmit: onSubmit\n  }), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn emoticons",\n    onClick: onTogglePicker,\n    disabled: !roomActive.id\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "insert_emoticon")), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn send",\n    onClick: onSubmit\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "send")), showPicker && react_default.a.createElement(dist_es["a" /* Picker */], {\n    set: "facebook",\n    title: "Ch\\u1ECDn icon...",\n    emoji: "point_up",\n    notFoundEmoji: "frowning",\n    i18n: {\n      search: \'Tìm kiếm icon...\',\n      notfound: \'Không tìm thấy icon bạn cần\'\n    },\n    onSelect: onAddEmoji\n  })), react_default.a.createElement(UploadImage, null))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Chat/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\n\n\nfunction Chat(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      authentication = _useSelector.authentication,\n      notification = _useSelector.notification,\n      isLoading = _useSelector.isLoading,\n      videoCall = _useSelector.videoCall,\n      rooms = _useSelector.rooms;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var chatNode = Object(react["useRef"])(null);\n\n  var enablePermission = function enablePermission() {\n    return dispatch(notification_grantPermission());\n  };\n\n  var onShowRoomStatus = function onShowRoomStatus() {\n    if (isLoading) return react_default.a.createElement(RoomStatus, {\n      title: "\\u0110ang k\\u1EBFt n\\u1ED1i m\\xE1y ch\\u1EE7"\n    });else if (rooms.length > 0) return react_default.a.createElement(RoomStatus, {\n      title: "Ch\\u1ECDn ph\\xF2ng \\u0111\\u1EC3 b\\u1EAFt \\u0111\\u1EA7u chat n\\xE0o !"\n    });\n    return react_default.a.createElement(RoomStatus, {\n      title: "M\\u1EDDi b\\u1EA1n t\\u1EA1o ph\\xF2ng chat m\\u1EDBi !"\n    });\n  };\n\n  var onScroll = function onScroll(event) {\n    if (event.target.scrollTop === 0) dispatch(messages_loadMoreMessages());\n  };\n\n  Object(react["useEffect"])(function () {\n    dispatch(authentication_connect(authentication.userId));\n  }, []);\n  Object(react["useEffect"])(function () {\n    chatNode.current.scrollIntoView();\n  }, [isLoading]);\n  return react_default.a.createElement("div", {\n    className: "app"\n  }, notification && react_default.a.createElement("div", {\n    className: "notification-toast"\n  }, "QuanChat c\\u1EA7n b\\u1EA1n cho ph\\xE9p \\u0111\\u1EC3\\xA0", react_default.a.createElement("span", {\n    onClick: enablePermission\n  }, "hi\\u1EC3n th\\u1ECB th\\xF4ng b\\xE1o")), react_default.a.createElement(Navigation, null), react_default.a.createElement(LeftSideBar, {\n    match: match\n  }), react_default.a.createElement("div", {\n    className: "main"\n  }, react_default.a.createElement("div", {\n    className: "chat",\n    ref: chatNode\n  }, react_default.a.createElement(TopBar, null), react_default.a.createElement("div", {\n    className: "content",\n    onScroll: onScroll\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement(react_router["d" /* Switch */], null, react_default.a.createElement(react_router["b" /* Route */], {\n    exact: true,\n    path: match.path\n  }, onShowRoomStatus()), rooms.map(function (room) {\n    if (!room) return;\n    return react_default.a.createElement(react_router["b" /* Route */], {\n      key: room.id,\n      path: "".concat(match.path, "/:roomId"),\n      component: MessageList\n    });\n  }), react_default.a.createElement(react_router["b" /* Route */], null, onShowRoomStatus())))), react_default.a.createElement(SendMessage, null)), videoCall.show && react_default.a.createElement(VideoCall, null)), react_default.a.createElement(RightSideBar, {\n    match: match\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/App/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\nfunction App() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.authentication;\n  }),\n      currentScreen = _useSelector.currentScreen;\n\n  return react_default.a.createElement(react_router_dom["a" /* HashRouter */], null, react_default.a.createElement(react_router["d" /* Switch */], null, react_default.a.createElement(react_router["a" /* Redirect */], {\n    exact: true,\n    from: "/",\n    to: "/room"\n  }), react_default.a.createElement(react_router["b" /* Route */], {\n    path: "/room",\n    component: currentScreen === \'SignIn\' ? SignIn : Chat\n  }), react_default.a.createElement(react_router["b" /* Route */], {\n    path: "/sign-up",\n    component: SignUp\n  }), react_default.a.createElement(react_router["b" /* Route */], {\n    component: NotFound\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/bootstrap/dist/css/bootstrap.min.css\nvar bootstrap_min = __webpack_require__(763);\n\n// EXTERNAL MODULE: ./node_modules/bootstrap/dist/js/bootstrap.bundle.min.js\nvar bootstrap_bundle_min = __webpack_require__(764);\n\n// EXTERNAL MODULE: ./node_modules/jquery/dist/jquery.js\nvar jquery = __webpack_require__(329);\n\n// EXTERNAL MODULE: ./node_modules/material-design-icons/iconfont/material-icons.css\nvar material_icons = __webpack_require__(765);\n\n// EXTERNAL MODULE: ./src/scss/style.scss\nvar style = __webpack_require__(766);\n\n// CONCATENATED MODULE: ./src/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\n\nreact_dom_default.a.render(react_default.a.createElement(es["a" /* Provider */], {\n  store: reducers\n}, react_default.a.createElement(App, null)), document.getElementById(\'root\'));\n/* eslint-enable *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///770\n')}});