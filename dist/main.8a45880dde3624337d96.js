!function(c){function F(F){for(var t,U,d=F[0],a=F[1],s=F[2],B=0,x=[];B<d.length;B++)U=d[B],Object.prototype.hasOwnProperty.call(n,U)&&n[U]&&x.push(n[U][0]),n[U]=0;for(t in a)Object.prototype.hasOwnProperty.call(a,t)&&(c[t]=a[t]);for(l&&l(F);x.length;)x.shift()();return e.push.apply(e,s||[]),Q()}function Q(){for(var c,F=0;F<e.length;F++){for(var Q=e[F],t=!0,d=1;d<Q.length;d++){var a=Q[d];0!==n[a]&&(t=!1)}t&&(e.splice(F--,1),c=U(U.s=Q[0]))}return c}var t={},n={0:0},e=[];function U(F){if(t[F])return t[F].exports;var Q=t[F]={i:F,l:!1,exports:{}};return c[F].call(Q.exports,Q,Q.exports,U),Q.l=!0,Q.exports}U.m=c,U.c=t,U.d=function(c,F,Q){U.o(c,F)||Object.defineProperty(c,F,{enumerable:!0,get:Q})},U.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},U.t=function(c,F){if(1&F&&(c=U(c)),8&F)return c;if(4&F&&"object"==typeof c&&c&&c.__esModule)return c;var Q=Object.create(null);if(U.r(Q),Object.defineProperty(Q,"default",{enumerable:!0,value:c}),2&F&&"string"!=typeof c)for(var t in c)U.d(Q,t,function(F){return c[F]}.bind(null,t));return Q},U.n=function(c){var F=c&&c.__esModule?function(){return c.default}:function(){return c};return U.d(F,"a",F),F},U.o=function(c,F){return Object.prototype.hasOwnProperty.call(c,F)},U.p="";var d=window.webpackJsonp=window.webpackJsonp||[],a=d.push.bind(d);d.push=F,d=d.slice();for(var s=0;s<d.length;s++)F(d[s]);var l=a;e.push([650,1]),Q()}({316:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/NzBiMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzMTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///316\n")},318:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/YzJjMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzMTguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///318\n")},338:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZnMgKGlnbm9yZWQpP2RiNDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMzM4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///338\n")},347:function(module,exports){eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 347;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2FjaGVhYmxlLXJlcXVlc3Qvbm9kZV9tb2R1bGVzL2tleXYvc3JjIHN5bmM/NDc2OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLFdBQVc7QUFDbEQ7QUFDQTtBQUNBIiwiZmlsZSI6IjM0Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHdlYnBhY2tFbXB0eUNvbnRleHQocmVxKSB7XG5cdHZhciBlID0gbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJ1wiKTtcblx0ZS5jb2RlID0gJ01PRFVMRV9OT1RfRk9VTkQnO1xuXHR0aHJvdyBlO1xufVxud2VicGFja0VtcHR5Q29udGV4dC5rZXlzID0gZnVuY3Rpb24oKSB7IHJldHVybiBbXTsgfTtcbndlYnBhY2tFbXB0eUNvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tFbXB0eUNvbnRleHQ7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tFbXB0eUNvbnRleHQ7XG53ZWJwYWNrRW1wdHlDb250ZXh0LmlkID0gMzQ3OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///347\n")},354:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVjb21wcmVzcy1yZXNwb25zZSAoaWdub3JlZCk/NTA2MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzNTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///354\n")},355:function(module,exports){eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 355;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ290L3NvdXJjZSBzeW5jPzcwYjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxXQUFXO0FBQ2xEO0FBQ0E7QUFDQSIsImZpbGUiOiIzNTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB3ZWJwYWNrRW1wdHlDb250ZXh0KHJlcSkge1xuXHR2YXIgZSA9IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIidcIik7XG5cdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0dGhyb3cgZTtcbn1cbndlYnBhY2tFbXB0eUNvbnRleHQua2V5cyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gW107IH07XG53ZWJwYWNrRW1wdHlDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrRW1wdHlDb250ZXh0O1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrRW1wdHlDb250ZXh0O1xud2VicGFja0VtcHR5Q29udGV4dC5pZCA9IDM1NTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///355\n")},391:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYnVmZmVyIChpZ25vcmVkKT85MTYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjM5MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///391\n")},392:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY3J5cHRvIChpZ25vcmVkKT8xNmU0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjM5Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///392\n")},474:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY3J5cHRvIChpZ25vcmVkKT9mNTI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjQ3NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///474\n")},637:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vb3MgKGlnbm9yZWQpP2ZhNTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNjM3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///637\n")},643:function(module,exports,__webpack_require__){eval("var api = __webpack_require__(644);\n            var content = __webpack_require__(645);\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2Nzcy9zdHlsZS5zY3NzPzJlNGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLEdBQTJFO0FBQzdGLDBCQUEwQixtQkFBTyxDQUFDLEdBQXFHOztBQUV2STs7QUFFQTtBQUNBLDBCQUEwQixRQUFTO0FBQ25DOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7Ozs7QUFJQSIsImZpbGUiOiI2NDMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cbnZhciBleHBvcnRlZCA9IGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB7fTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZWQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///643\n")},645:function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(646);\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Maven+Pro:500&display=swap&subset=vietnamese);"]);\n// Module\nexports.push([module.i, ".sidebar .contacts h1,.sidebar .discussions h1{font-weight:800;font-size:24px;color:#212529;margin-bottom:0;padding-bottom:18px;border-bottom:2px solid #fbfbfb}.sidebar .contacts .contact .data h5,.sidebar .discussions .single .data h5{font-weight:700;font-size:16px;color:#212529;margin-bottom:5px;display:inline-flex}.sidebar .contacts .contact .data p,.sidebar .discussions .single .data p{font-weight:400;font-size:16px;line-height:1.4}.sidebar .contacts .contact,.sidebar .discussions .single{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:20px 0;border-bottom:2px solid #fbfbfb}.sidebar .contacts .contact .data,.sidebar .discussions .single .data{width:100%}.sidebar .contacts .contact:last-of-type,.sidebar .discussions .single:last-of-type{border-bottom:2px solid transparent !important}.requests .content .form-group label{font-weight:700;font-size:14px;color:#212529;margin-bottom:10px;text-transform:uppercase}@keyframes wave{0%,60%,100%{-webkit-transform:initial;-ms-transform:initial;transform:initial}30%{transform:translateY(-5px)}}@keyframes pulse{0%{box-shadow:0 0 0 0 rgba(0,0,0,0.1)}100%{box-shadow:0 0 0 50px transparent}}@keyframes call-end{0%{box-shadow:0 0 0 0 rgba(0,0,0,0.1)}100%{box-shadow:0 0 0 20px transparent}}@keyframes float{100%{-webkit-transform:translateY(20px);-ms-transform:translateY(20px);transform:translateY(20px)}}.aside{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;height:100vh;width:100%;min-width:550px;max-width:550px;background:linear-gradient(145deg, #8ca7ff 0, #8b54f9 50%, #6610f2 100%)}.aside .preference{width:100%;max-width:340px;margin:0 auto;text-align:center}.aside .preference h2{font-weight:800;font-size:46px;color:#fff;margin-bottom:23px}.aside .preference p{font-weight:400;font-size:16px;color:#fff;line-height:1.7;margin-bottom:30px}.aside .preference .button{background-color:#fff;color:#2196f3;max-width:300px;box-shadow:none !important}.avatar-xl{height:60px;width:100%;min-width:60px;max-width:60px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-lg{height:50px;width:100%;min-width:50px;max-width:50px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-md{height:45px;width:100%;min-width:45px;max-width:45px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-sm{height:30px;width:100%;min-width:30px;max-width:30px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-xxl{width:200px;height:200px;border-radius:100%}.tooltip{font-weight:600;font-size:15px}.tooltip.show{opacity:1}.tooltip-inner{background-color:#212529;color:#fff;padding:5px 12px;border-radius:6px}.call{background:linear-gradient(145deg, #8ca7ff 0, #8b54f9 50%, #6610f2 100%)}.call video{width:100%;align-self:center}.call .video-chat{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:stretch;align-items:stretch;height:100%}.call .options{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;margin-bottom:37px;position:absolute;bottom:0}.call .options .option{color:#fff;line-height:0;padding:0 20px}.call .options .option.call-end{padding:15px;background:#e05b5d;border-radius:100%;animation:call-end 2s infinite;color:#fff;line-height:0;margin:0 20px}.call .options .option:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1);-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear;opacity:0.9}.call .back{padding:18px;background:rgba(0,0,0,0.05);border-radius:100%;color:#fff;line-height:0;-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear}.call .back:hover{-webkit-transform:translateY(10px) translateZ(0);-ms-transform:translateY(10px) translateZ(0);transform:translateY(10px) translateZ(0)}.call .content{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;height:100%;text-align:center}.call .content .avatar-xxl{margin-bottom:56px;animation:pulse 2s infinite;cursor:pointer}.call .content .participant{margin-bottom:56px}.call .content .participant span{font-weight:500;color:#fff;display:block;text-align:center}.call .content .options{position:unset;margin-bottom:60px}.call::-webkit-scrollbar{display:none}.btn,.btn.active:not(:disabled):not(.disabled),.btn:not(:disabled):not(.disabled):active,.btn:active,.btn:focus,.btn:hover{border:none;box-shadow:none;outline:0}.btn{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s}.btn:disabled{opacity:1}.button{width:100%;padding:16px 25px;background-color:#2196f3;font-weight:500;color:#fff;border-radius:6px;-webkit-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;-moz-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important}.button:hover{color:#fff;opacity:0.9}.show>.btn.dropdown-toggle{border:none;-webkit-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;-moz-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important}.create.btn:not(:disabled):not(.disabled):active{box-shadow:0 0 30px 5px rgba(0,0,0,0.04)}.form-control{width:100% !important;padding:25px 15px;background-color:#f5f5f5;font-weight:500;font-size:16px;color:#bdbac2 !important;border:none;border-radius:6px;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none}.form-control:focus{background-color:#f5f5f5;color:none !important;box-shadow:none}.form-control::placeholder{font-weight:500;font-size:16px;color:#bdbac2}.form-control[readonly]{background-color:#f5f5f5}.dropdown-menu{border:none;border-radius:6px;-webkit-box-shadow:0 0 20px rgba(0,0,0,0.04);-moz-box-shadow:0 0 20px rgba(0,0,0,0.04);box-shadow:0 0 20px rgba(0,0,0,0.04);min-width:14rem;padding:10px;margin-top:10px}.dropdown-menu hr{margin:10px;border-top:2px solid #fbfbfb}.dropdown-menu .material-icons{margin-right:10px}.dropdown-item{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:10px;font-size:15px;color:#bdbac2;-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;border-radius:6px;cursor:pointer}.dropdown-item:focus{background-color:0 0;color:#bdbac2;border:none;border-radius:6px;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;outline:0}.dropdown-item:hover{background-color:#f5f5f5;color:#bdbac2;border-radius:6px}.dropdown-item:active,.dropdown-item.active{background-color:#2196f3 !important;color:#fff !important}.switch{height:18px;width:100%;min-width:42px;max-width:42px;display:inline-block;position:relative;margin-bottom:0}.switch input{width:0;height:0;opacity:0}.slider{position:absolute;top:0;left:0;right:0;bottom:0;-webkit-transition:.4s;-moz-transition:.4s;transition:.4s;background-color:#ccc;cursor:pointer}.slider:before{position:absolute;left:3px;bottom:3px;width:12px;height:12px;-webkit-transition:.4s;-moz-transition:.4s;transition:.4s;background-color:#fff;content:\'\'}.slider.round{border-radius:34px}.slider.round:before{border-radius:50%}input:checked+.slider{background-color:#2196f3 !important}input:checked+.slider:before{transform:translateX(24px)}.main{width:100%}.main.order-md-1,.main.order-md-2{height:100vh;margin:0;background:#fdfdfd}.main .chat{-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);display:flex;display:-ms-flexbox;justify-content:space-between;flex-direction:column;height:100%}.main .chat .content{padding:20px 0 0;overflow-x:hidden;overflow-y:scroll;display:flex;height:calc(100vh - 218px)}.main .chat .content .message{display:flex;display:-ms-flexbox;-ms-flex-align:flex-end;align-items:flex-end;margin-bottom:20px}.main .chat .content .message .text-main .text{padding:15px;background:#fff;border-radius:6px;border-radius:15px;-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);display:inline-block;max-width:450px}.main .chat .content .message .text-main .text .embedded-link{text-decoration:underline}.main .chat .content .message .text-main .text .embedded-link:hover{color:inherit;text-decoration:none}.main .chat .content .message .text-main .text .microlink_card .microlink_card__content{width:0}.main .chat .content .message .text-main .text .microlink_card:hover{color:initial}.main .chat .content .message .text-main .text .attachment{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center}.main .chat .content .message .text-main .text .attachment .file h5{font-weight:400;font-size:16px;color:#2196f3;line-height:1.4;margin-bottom:5px}.main .chat .content .message .text-main .text .attachment .file a:hover{text-decoration:underline}.main .chat .content .message .text-main .text .attachment .attach{width:42px;height:42px;padding:12px;margin-right:15px}.main .chat .content .message .text-main .text.typing{padding:8px 12px}.main .chat .content .message .text-main .text.me{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;background-color:#2196f3}.main .chat .content .message .text-main .text.me.image{background-color:#f5f5f5}.main .chat .content .message .text-main .text.me .attachment .attach{background-color:#fff;color:#2196f3}.main .chat .content .message .text-main .text.me .attachment .file h5,.main .chat .content .message .text-main .text.me .attachment .file a:hover{color:#fff}.main .chat .content .message .text-main .text.me .attachment .file span{color:#fff;text-align:left}.main .chat .content .message .text-main .text.me>div>p{color:#fff}.main .chat .content .message .text-main .text>div>p{font-weight:400;font-size:16px;color:#a0a0a0;line-height:1.4;word-break:break-all}.main .chat .content .message .text-main>span{color:#a0a0a0}.main .chat .content .message:last-child{margin-bottom:50px}.main .chat .content .message.me{justify-content:flex-end}.main .chat .content .message.me:last-child{margin-bottom:43px}.main .chat .content .message.me span{text-align:right}.main .chat .content .message .avatar-md{margin-right:15px}.main .chat .content .message .text-group{display:flex;display:-ms-flexbox;-ms-flex-align:flex-start;align-items:flex-start;flex-direction:column;width:100%;margin-bottom:10px}.main .chat .content .message .text-group>a{display:contents}.main .chat .content .message .text-group.me{align-items:flex-end}.main .chat .content .message span{font-weight:400;font-size:14px;display:block}.main .chat .content .message span>.material-icons{font-weight:600;font-size:14px;margin-right:5px;position:relative;top:2px}.main .chat .content .wave .dot{width:6px;height:6px;background:#bdbac2;border-radius:100%;animation:wave 1.3s linear infinite;display:inline-block;margin-right:1px}.main .chat .content .wave .dot:last-of-type{margin-right:0}.main .chat .content .wave .dot:nth-child(2){animation-delay:-1.1s}.main .chat .content .wave .dot:nth-child(3){animation-delay:-0.9s}.main .chat .content>div{margin-top:auto;margin-bottom:auto}.main .chat .content .date{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:26px 0 46px}.main .chat .content .date hr{width:100%;margin:0;border-top:2px solid #fbfbfb}.main .chat .content .date span{display:block;padding:0 20px}.main .chat .content .no-messages{width:100%;max-width:400px;margin:47px auto 45px;text-align:center;display:block;color:#212529}.main .chat .content .no-messages .options{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center}.main .chat .content .no-messages .options .button{width:56px;height:56px;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04) !important;-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04) !important;box-shadow:0 5px 10px 4px rgba(0,0,0,0.04) !important}.main .chat .content .no-messages .options .button:hover{-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05);-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear}.main .chat .content .no-messages .options .button .material-icons{margin-bottom:0}.main .chat .content .no-messages .options .button:nth-child(2){background:#dc3545}.main .chat .content .no-messages .options .button+.button{margin-left:20px}.main .chat .content .no-messages.request{max-width:420px;margin:50px auto}.main .chat .content .no-messages .material-icons{margin-bottom:20px;font-weight:600}.main .chat .content .no-messages .avatar-xl{margin-bottom:32px}.main .chat .content .no-messages h5{font-weight:400;font-size:18px;line-height:1.7;margin-bottom:5px;display:block}.main .chat .content .no-messages h5>span{font-size:18px;line-height:1.7}.main .chat .content .no-messages p{font-weight:400;font-size:18px;margin-bottom:10px}.main .chat .btn{padding:0;line-height:0}.main .chat .btn.disabled{opacity:1}.main .chat .btn.disabled:hover{color:inherit !important;opacity:1}.main .chat .attach{background-color:#2196f3;color:#fff;border-radius:100%}.main .chat .attach:hover{color:#fff;opacity:0.8}.main .chat .top{-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);padding:20px 5px;background:#fff}.main .chat .top .inside{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center}.main .chat .top .inside .avatar-md{margin-right:15px}.main .chat .top .inside .status{position:absolute;left:4px;right:0;width:20px;height:20px;border:5px solid #fff;border-radius:100%;margin-top:0;margin-right:10px}.main .chat .top .inside .status .online{color:#2196f3}.main .chat .top .inside .status .offline{color:#ccc}.main .chat .top .inside .status .material-icons{position:absolute;left:-3px;bottom:-3px;font-size:16px}.main .chat .top .inside .data{margin-right:auto;overflow:hidden}.main .chat .top .inside .data h5{font-weight:700;font-size:16px;color:#212529;margin-bottom:2px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.main .chat .top .inside .data h5:hover{color:#2196f3;cursor:pointer}.main .chat .top .inside .data span{font-weight:400;font-size:15px;line-height:1.4;display:block}.main .chat .top .inside .btn{color:#2196f3;line-height:0;margin-left:30px;padding:0}.main .chat .top .inside .btn:hover{background:#e8e8e8}.main .chat .top .inside .dropdown-menu-right{right:0 !important;bottom:inherit !important}.main .chat .top .inside .dropdown .btn{margin-right:0}.main .chat .bottom{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:30px 0;border-top:2.5px solid #fff}.main .chat .bottom .rta{position:relative;width:100%}.main .chat .bottom .rta__autocomplete{position:absolute;top:unset !important;left:7% !important;bottom:77%;border:1px solid #bdbac2;border-radius:5px;max-height:250px;background-color:#fff;overflow:auto}.main .chat .bottom .rta__autocomplete ul{display:flex;display:-ms-flexbox;flex-direction:column;padding:0;margin:0}.main .chat .bottom .rta__autocomplete li{padding:3px 20px;color:#2196f3;cursor:pointer}.main .chat .bottom .rta__autocomplete li:hover{background-color:#2196f3;color:#fff}.main .chat .bottom label{margin-bottom:0}.main .chat .bottom label input{display:none}.main .chat .bottom .form-control{border-radius:50px;-webkit-box-shadow:0px 0px 24px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 24px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 24px 0px rgba(0,0,0,0.2);padding:16px 58px;height:56px;resize:none;font-weight:400;background:white}.main .chat .bottom .form-control:disabled{background-color:#f5f5f5}.main .chat .bottom .form-control::placeholder{font-weight:400}.main .chat .bottom .emoji-mart{position:absolute;left:-2%;bottom:80%}.main .chat .bottom .btn{color:#2196f3;line-height:0;padding:0}.main .chat .bottom .btn.emoticons{position:absolute;top:0;left:0;bottom:0;padding:0 15px 0 20px}.main .chat .bottom .btn.emoticons:hover{background:#f5f5f5;border-radius:50% 0% 0% 50%}.main .chat .bottom .btn.send{position:absolute;top:0;right:0;bottom:0;padding:0 20px 0 15px}.main .chat .bottom .btn.send:hover{background:#f5f5f5;border-radius:0% 50% 50% 0%}.main .chat .bottom .btn.attach{width:56px;height:56px;padding:16px;margin-left:20px;color:#fff;box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.main .chat .bottom .btn.attach:hover{color:#fff}.main .chat .bottom .btn.attach.btn.disabled:hover{color:#fff !important}.main .start{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;width:100%}.main .start .content{width:100%;text-align:center}.main .start .content h1{font-weight:800;font-size:46px;color:#212529;margin-bottom:40px}.main .start .content p{font-weight:400;font-size:16px;margin-bottom:20px}.main .start .content .third-party{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;margin-bottom:38px}.main .start .content .third-party .item{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;padding:15px;margin-right:20px;width:60px;height:60px;border-radius:100%;-webkit-box-shadow:0 0 20px rgba(0,0,0,0.04);-moz-box-shadow:0 0 20px rgba(0,0,0,0.04);box-shadow:0 0 20px rgba(0,0,0,0.04);-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s}.main .start .content .third-party .item:hover{-webkit-transform:translateY(-5px) translateZ(0);-ms-transform:translateY(-5px) translateZ(0);transform:translateY(-5px) translateZ(0);opacity:0.9}.main .start .content .third-party .item:last-of-type{margin-right:0}.main .start .content .third-party .item .material-icons{font-size:30px;color:#fff}.main .start .content .third-party .item img{width:25px;height:25px}.main .start .content form{width:100%;max-width:366px;margin:0 auto}.main .start .content .form-group{position:relative;margin-bottom:15px}.main .start .content .form-group .form-control{height:56px;padding:0 20px 0 58px;font-weight:400;border:2px solid transparent}.main .start .content .form-group .form-control:focus{border:2px solid #2196f3 !important}.main .start .content .form-group .form-control::placeholder{font-weight:400}.main .start .content .form-group .btn.icon{position:absolute;top:0;left:0;bottom:0;color:#bdbac2;line-height:0;padding:0 10px 0 20px}.main .start .content .callout span{font-size:16px}.main .start .content .callout span>a{color:#2196f3}.main .start .content .callout span>a:hover{text-decoration:underline}.navigation{-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.1);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.1);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.1);background:#fff}.navigation .inside .menu .btn{padding:0;color:inherit}.navigation .inside .menu .btn:last-child{margin-bottom:30px}.navigation .inside .menu .material-icons{display:block;font-size:45px;margin-bottom:40px}.navigation .inside .menu .material-icons.active{color:#2196f3}.navigation .inside .menu .power:hover{color:#dc3545}.navigation .inside .menu .power .material-icons{font-weight:600;font-size:45px;display:block;margin-bottom:0}.navigation .inside .menu .avatar-xl:hover{border:3px solid #2196f3}.navigation .inside .menu .mode:hover{color:#2196f3}.requests{display:flex;display:-ms-flexbox;flex-direction:column;border-radius:6px;-webkit-box-shadow:0 0 20px rgba(0,0,0,0.04);-moz-box-shadow:0 0 20px rgba(0,0,0,0.04);box-shadow:0 0 20px rgba(0,0,0,0.04);position:relative;width:100%;background:#fff;pointer-events:auto}.requests .modal-title{width:100%}.requests .modal-title .title{display:flex;display:-ms-flexbox;justify-content:space-between;-ms-flex-align:center;align-items:center;padding:15px 20px;background:#fdfdfd}.requests .modal-title .title h1{font-weight:800;font-size:22px;color:#212529;margin-bottom:0}.requests .modal-title .title .material-icons{font-weight:800}.requests .modal-title .title .close:hover{color:#212529 !important}.requests .content{padding:18px 20px 20px}.requests .content .form-group{margin-bottom:30px}.requests .content .form-group:last-of-type{margin-bottom:33px}.requests .content .form-group .form-control{padding:0 18px;height:56px;font-weight:400;border:2px solid transparent}.requests .content .form-group .form-control:focus{border:2px solid #2196f3 !important}.requests .content .form-group .form-control::placeholder{font-weight:400}.requests .content .text-control{width:100%;height:130px;padding:14px 17px;background:#f5f5f5;font-weight:400;font-size:16px;color:#bdbac2 !important;border:2px solid transparent;border-radius:6px !important}.requests .content .text-control:focus{border:2px solid transparent;border-radius:6px;outline:0}.requests .content .text-control::placeholder{color:#bdbac2}.requests .content .members{position:absolute;top:28%;left:9%;width:82%;height:62px;display:flex;overflow:scroll;overflow-y:hidden}.requests .content .members .user{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;margin-right:7px;padding:15px;background:#fdfdfd;border-radius:6px;margin-bottom:30px;z-index:2}.requests .content .members .user .avatar-sm{margin-right:10px;box-shadow:0 0 10px 1px rgba(0,0,0,0.04)}.requests .content .members .user h5{font-weight:600;font-size:15px;color:#212529;line-height:1.7;margin-bottom:0;margin-right:6px;white-space:nowrap}.requests .content .members .user .btn .material-icons{font-weight:600;font-size:16px}.requests .content .button{padding:16px 25px;line-height:1.5}.requests .btn{padding:0;line-height:0}.fileContainer{background-color:#f5f5f5;color:#212529}.fileContainer .uploadPictureContainer{width:46%;margin:2%}.not-found{height:100vh;background:white}.not-found svg{position:absolute;top:50%;left:50%;margin-top:-250px;margin-left:-400px}.not-found-content{position:absolute;top:50%;left:50%;margin-top:-100px;margin-left:50px;width:380px;height:200px;font-weight:300;color:#212529;font-family:Roboto}.not-found-content h1{font-size:60px;line-height:46px;margin-bottom:40px}.not-found .buttons-con .action-link-wrap{margin-top:40px}.not-found .buttons-con .action-link-wrap a{padding:8px 25px;background:#20c997;border-radius:4px;font-weight:bold;font-size:14px;color:#fff;margin-right:10px;-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear;text-decoration:none;cursor:pointer}.not-found .buttons-con .action-link-wrap a:hover{background-color:#a0a0a0;color:#fff}.not-found #Polygon-1{animation:float 1s infinite ease-in-out alternate;animation-delay:0s}.not-found #Polygon-2{animation:float 1s infinite ease-in-out alternate;animation-delay:.2s}.not-found #Polygon-3{animation:float 1s infinite ease-in-out alternate;animation-delay:.4s}.not-found #Polygon-4{animation:float 1s infinite ease-in-out alternate;animation-delay:.6s}.not-found #Polygon-5{animation:float 1s infinite ease-in-out alternate;animation-delay:.8s}@media (max-width: 1200px){.aside{width:100%;min-width:auto;max-width:auto}}@media (min-width: 992px){.app{display:flex;display:-ms-flexbox;-ms-flex-align:flex-start;align-items:flex-start}.navigation{position:sticky;top:0;z-index:1020;overflow-x:hidden;overflow-y:auto;width:100%;min-width:100px;max-width:100px}.navigation .inside{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;flex-direction:column;padding:30px 0 0;height:100vh}.navigation .inside .menu{display:flex;display:-ms-flexbox;flex-direction:column;flex-basis:auto;flex-grow:1;flex-shrink:0;text-align:center}.navigation .inside .menu .f-grow1{flex-grow:1}.navigation .inside .menu .avatar-xl{margin-bottom:50px}.sidebar{position:sticky;top:0;z-index:1020;overflow-x:hidden;overflow-y:scroll;width:100%;height:95vh;max-width:25%;padding:30px 0;margin:auto 15px}.main{height:95vh;margin:auto 15px}.main .start{height:100vh}.main .start .content .callout{display:none}.main .start .content .form-parent{display:flex}.main .start .content .form-parent .form-group{margin-right:15px}.main .start .content .form-parent .form-group:last-child{margin-right:0}.main .start .content form.signup{max-width:466px}.main .call .content .inside{max-height:calc(100vh - 0)}.main .call .content .inside .panel{padding:30px 0}.navigation::-webkit-scrollbar{display:none}.sidebar::-webkit-scrollbar{width:5px}.sidebar::-webkit-scrollbar-thumb{background:#f5f5f5}}@media (max-width: 991px){body{padding-bottom:54px;background-image:none !important}.aside{display:none}.chat{height:93vh !important}.navigation{position:fixed;left:0;right:0;bottom:0;z-index:1030;box-shadow:0 0 20px 0 rgba(0,0,0,0.04)}.navigation .inside{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:flex-end;align-items:flex-end;padding:12px 15px;flex-wrap:wrap}.navigation .inside .menu{flex-wrap:unset !important;align-items:flex-end;width:100%}.navigation .inside .menu .avatar-xl{display:none}.navigation .inside .menu .mode{margin:auto}.navigation .inside .menu .power{margin-bottom:0 !important}.navigation .inside .menu .power .material-icons{font-size:35px}.navigation .inside .menu a{margin-left:auto;margin-right:auto}.navigation .inside .menu a:first-of-type{margin-left:0}.navigation .inside .menu a:last-of-type{margin-right:0}.navigation .inside .menu .material-icons{font-size:30px;margin-bottom:0}.sidebar{height:100%;min-height:600px;max-height:600px;padding:30px 0 0;overflow-x:hidden;overflow-y:auto}.sidebar::-webkit-scrollbar{display:none}.main .start{padding:73px 0 77px}.main .start .content .button{margin-bottom:20px}.main .start .content .callout{display:block}.main .chat .content{height:600px}.main .call .content{padding:60px 0;height:100%}}@media (min-width: 768px){.container{max-width:100%}}@media (max-width: 768px){.main .chat .content{height:100%}}@media (min-width: 576px){.container{max-width:100%}}@media (max-width: 468px){.container{padding-left:5px;padding-right:5px}.requests .title{padding:30px 20px}.requests .content{padding:34px 20px 40px}.requests .content .user{left:29px}.main .start .content h1{font-size:36px}.main .call .content .options .option{padding:0 15px}.not-found svg{position:absolute;top:50%;left:50%;margin-top:-250px;margin-left:-190px}.not-found-content{position:absolute;top:50%;left:50%;margin-top:-100px;margin-left:-190px;text-align:center}}@media (max-width: 350px){.main .call .content .options .option{padding:0 12px}.main .call .content .options .option.call-end{margin:0 15px}}.sidebar{border-radius:30px;-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);background:#fff}.sidebar .create{position:absolute;top:30px;right:20px;bottom:0;width:50px;height:50px;border-radius:100%;-webkit-box-shadow:0 0 30px 5px rgba(0,0,0,0.04);-moz-box-shadow:0 0 30px 5px rgba(0,0,0,0.04);box-shadow:0 0 30px 5px rgba(0,0,0,0.04);background:#fff;display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;padding:0;-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;float:right;cursor:pointer}.sidebar .create:hover{-webkit-transform:translateY(-5px) translateZ(0);-ms-transform:translateY(-5px) translateZ(0);transform:translateY(-5px) translateZ(0)}.sidebar .create .material-icons{font-size:22px;color:#bdbac2}.sidebar .create.btn:not(:disabled):not(.disabled).active{box-shadow:0 0 30px 5px rgba(0,0,0,0.04)}.sidebar .info{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;flex-direction:column;margin-bottom:20px}.sidebar .info .avatar-xl{height:auto;width:100%;min-width:100px;max-width:100px;margin-bottom:20px}.sidebar .info h4{color:#212529}.sidebar .contacts .contact .avatar-md{margin-right:15px}.sidebar .contacts .contact.active .material-icons{color:#2196f3}.sidebar .contacts .contact .status{position:absolute;left:4px;right:0;width:20px;height:20px;border:5px solid #fff;border-radius:100%}.sidebar .contacts .contact .status .online{color:#2196f3}.sidebar .contacts .contact .status .offline{color:#ccc}.sidebar .contacts .contact .status .material-icons{position:absolute;left:-3px;bottom:-3px;font-size:16px}.sidebar .contacts .contact.active,.sidebar .contacts .contact:hover{border-bottom:2px solid #2196f3}.sidebar .contacts a:hover{color:inherit}.sidebar .contacts .sort-members{display:flex;display:-ms-flexbox;justify-content:space-between;-ms-flex-align:center;align-items:center;margin-bottom:20px}.sidebar .contacts .sort-members h1{padding-bottom:0}.sidebar .discussions .single .avatar-md{margin-right:15px}.sidebar .discussions .single.active .material-icons{color:#2196f3}.sidebar .discussions .single .status{position:absolute;left:4px;right:0;width:20px;height:20px;border:5px solid #fff;border-radius:100%}.sidebar .discussions .single .status .online{color:#2196f3}.sidebar .discussions .single .status .offline{color:#ccc}.sidebar .discussions .single .status .material-icons{position:absolute;left:-3px;bottom:-3px;font-size:16px}.sidebar .discussions .single.active,.sidebar .discussions .single:hover{border-bottom:2px solid #2196f3}.sidebar .discussions a:hover{color:inherit}.sidebar .discussions .single .data{overflow:hidden}.sidebar .discussions .single .data p{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.sidebar .discussions .single .data span{font-weight:400;font-size:14px;float:right}.sidebar .discussions .single.active p,.sidebar .discussions .single.active span,.sidebar .discussions .single.unread p,.sidebar .discussions .single.unread span{font-weight:500 !important;color:#212529}.sidebar .discussions .single .new{position:absolute;left:39px;right:0;width:30px;height:30px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:5px 0 10px 0 rgba(0,0,0,0.04);-moz-box-shadow:5px 0 10px 0 rgba(0,0,0,0.04);box-shadow:5px 0 10px 0 rgba(0,0,0,0.04);margin-top:-23px;background:#f0d24b;display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center}.sidebar .discussions .single .new span{font-weight:500;font-size:12px;color:#fff !important}.sidebar .search{margin-bottom:30px}.sidebar .search .form-control{padding:0 15px 0 54px;height:56px}.sidebar .search .loop{position:absolute;top:0;left:0;bottom:0;padding:0 15px;margin-bottom:0 !important;line-height:0}.sidebar .search .loop .material-icons{font-weight:600;font-size:25px;color:#bdbac2}.sidebar .search .loop .material-icons.filter-list{font-weight:400}.sidebar .sort{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:baseline;align-items:baseline;flex-direction:row;margin-bottom:40px;text-align:center}.sidebar .sort .btn{font-weight:500;font-size:15px;color:inherit;padding:8px 20px;white-space:nowrap;border-radius:100px}.sidebar .sort .btn.active{padding:8px 20px;background:#f5f5f5;border-radius:100px;color:#2196f3}body{background-color:#fdfdfd;color:#bdbac2;display:initial;font-family:\'Maven Pro\', sans-serif;font-size:15px;background:url(\\"https://img.wallpapersafari.com/desktop/1920/1080/15/47/bld5Un.jpg\\") no-repeat center;background-size:cover}a{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;text-decoration:none;color:inherit}a:hover{text-decoration:none;color:#2196f3}img{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s}p{font-weight:500;line-height:1.7;margin-bottom:0}.app{overflow:auto}.bg-blue{background:#2196f3 !important}.bg-indigo{background:#6610f2 !important}.bg-purple{background:#6f42c1 !important}.bg-red{background:#dc3545 !important}.bg-pink{background:#e83e8c !important}.bg-orange{background:#fd7e14 !important}.bg-gray{background:#bdbac2 !important}.bg-green{background:#28a745 !important}.bg-teal{background:#20c997 !important}.bg-yellow{background:#ffc107 !important}.material-icons.md-18{font-size:18px}.material-icons.md-24{font-size:24px}.material-icons.md-30{font-size:30px}.material-icons.md-36{font-size:36px}.material-icons.md-42{font-size:42px}.material-icons.md-48{font-size:48px}.modal-dialog{max-width:450px}.modal-backdrop{opacity:0 !important}.start{padding-bottom:0}\\n", ""]);\n// Exports\nmodule.exports = exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///645\n')},650:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(19);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 22 modules\nvar es = __webpack_require__(5);\n\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(36);\n\n// EXTERNAL MODULE: ./node_modules/redux-thunk/es/index.js\nvar redux_thunk_es = __webpack_require__(119);\n\n// EXTERNAL MODULE: ./node_modules/@andyet/simplewebrtc/module.js + 15 modules\nvar simplewebrtc_module = __webpack_require__(26);\n\n// EXTERNAL MODULE: ./node_modules/@pusher/chatkit-server/target/src/index.js\nvar src = __webpack_require__(281);\nvar src_default = /*#__PURE__*/__webpack_require__.n(src);\n\n// CONCATENATED MODULE: ./src/config/index.mjs\n/* jshint esversion: 10 */\n/* eslint-disable */\n\nconst tokenUrl = \'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/caf4a583-8194-4510-adbe-c9879f060ffc/token\';\nconst instanceLocator = \'v1:us1:caf4a583-8194-4510-adbe-c9879f060ffc\';\nconst key = \'7ea5e986-72fe-4cec-ba0c-4d07252f5f5f:LUB9fZZjg7vdpaFZlJEPBbZfKAe7sPLr/fhtA1+c3Co=\';\n\nconst SWRTC_API_KEY = \'970b4e5a23e7c4400327a45d\';\nconst SWRTC_CONFIG_URL = `https://api.simplewebrtc.com/config/guest/${SWRTC_API_KEY}`\n\n\n\n/* eslint-enable */\n\n// CONCATENATED MODULE: ./src/reducers/chatkit/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nvar initialState = new src_default.a({\n  instanceLocator: instanceLocator,\n  key: key\n});\n\nvar chatkit_chatkit = function chatkit() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_chatkit = (chatkit_chatkit);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/constants/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\nvar SIGN_IN = \'SIGN_IN\';\nvar SIGN_OUT = \'SIGN_OUT\';\nvar NOT_FOUND = \'NOT_FOUND\';\nvar CONNECT = \'CONNECT\';\nvar UPDATE_ROOMS = \'UPDATE_ROOMS\';\nvar GET_ROOMS = \'GET_ROOMS\';\nvar ENTER_ROOM = \'ENTER_ROOM\';\nvar FILTER_ROOMS = \'FILTER_ROOMS\';\nvar SORT_MEMBERS = \'SORT_MEMBERS\';\nvar TOGGLE_USERS_BAR = \'TOGGLE_USERS_BAR\';\nvar TOGGLE_CALL = \'TOGGLE_CALL\';\nvar TOGGLE_PICKER = \'TOGGLE_PICKER\';\nvar ADD_EMOJI = \'ADD_EMOJI\';\nvar ON_MESSAGE = \'ON_MESSAGE\';\nvar CLEAR_MESSAGE = \'CLEAR_MESSAGE\';\nvar USER_STARTED_TYPING = \'USER_STARTED_TYPING\';\nvar USER_STOPED_TYPING = \'USER_STOPED_TYPING\';\nvar PRESENCE_CHANGED = \'PRESENCE_CHANGED\';\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/screen/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar screen_initialState = {\n  userId: \'\',\n  currentScreen: \'SignIn\'\n};\n\nvar screen_screen = function screen() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : screen_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SIGN_IN:\n      return {\n        userId: action.userId,\n        currentScreen: \'Chat\'\n      };\n\n    case SIGN_OUT:\n      return {\n        userId: \'\',\n        currentScreen: \'SignIn\'\n      };\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_screen = (screen_screen);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/videoChat/index.jsx\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar videoChat_initialState = {\n  show: false,\n  cam: false\n};\n\nvar videoChat_videoChat = function videoChat() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : videoChat_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_CALL:\n      var show = !state.show;\n      var cam = action.cam;\n      return _objectSpread({}, state, {\n        show: show,\n        cam: cam\n      });\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_videoChat = (videoChat_videoChat);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/messages.jsx\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar messages_initialState = [];\n\nvar messages_messages = function messages() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : messages_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ON_MESSAGE:\n      return [].concat(_toConsumableArray(state), [action.message]);\n\n    case CLEAR_MESSAGE:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_messages_messages = (messages_messages);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/isLoading.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar isLoading_initialState = true;\n\nvar isLoading_isLoading = function isLoading() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : isLoading_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ROOMS:\n      return false;\n\n    case CLEAR_MESSAGE:\n      return true;\n\n    case NOT_FOUND:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var messages_isLoading = (isLoading_isLoading);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/currentUser.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar currentUser_initialState = {};\n\nvar currentUser_currentUser = function currentUser() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : currentUser_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CONNECT:\n      return action.currentUser;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var users_currentUser = (currentUser_currentUser);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/typingUsers.jsx\nfunction typingUsers_toConsumableArray(arr) { return typingUsers_arrayWithoutHoles(arr) || typingUsers_iterableToArray(arr) || typingUsers_nonIterableSpread(); }\n\nfunction typingUsers_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction typingUsers_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction typingUsers_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar typingUsers_initialState = [];\n\nvar typingUsers_typingUsers = function typingUsers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : typingUsers_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_STARTED_TYPING:\n      return [].concat(typingUsers_toConsumableArray(state), [action.user]);\n\n    case USER_STOPED_TYPING:\n      return state.filter(function (user) {\n        return user.id !== action.user.id;\n      });\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var users_typingUsers = (typingUsers_typingUsers);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/roomUsers.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar roomUsers_initialState = [];\n\nvar roomUsers_roomUsers = function roomUsers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roomUsers_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ENTER_ROOM:\n      return action.roomActive.users;\n\n    case PRESENCE_CHANGED:\n      return action.roomActive.users.sort(function (a) {\n        if (a.presence.state === \'online\') return -1;else return 1;\n      });\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var users_roomUsers = (roomUsers_roomUsers);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/rooms/rooms.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar rooms_initialState = [];\n\nvar rooms_rooms = function rooms() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : rooms_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ROOMS:\n      return action.rooms;\n\n    case UPDATE_ROOMS:\n      return action.rooms;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_rooms_rooms = (rooms_rooms);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/rooms/roomActive.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar roomActive_initialState = {};\n\nvar roomActive_roomActive = function roomActive() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roomActive_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ENTER_ROOM:\n      return action.roomActive;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var rooms_roomActive = (roomActive_roomActive);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/rooms/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/roomFilter.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar roomFilter_initialState = {\n  name: \'\',\n  status: 0\n};\n\nvar roomFilter_roomFilter = function roomFilter() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roomFilter_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FILTER_ROOMS:\n      var name = action.name,\n          status = action.status;\n      if (status === null) status = state.status;\n      return {\n        name: name,\n        status: status\n      };\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_roomFilter = (roomFilter_roomFilter);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/userSort.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar userSort_initialState = {\n  by: \'status\',\n  value: 1\n};\n\nvar userSort_userSort = function userSort() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userSort_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SORT_MEMBERS:\n      var by = action.by,\n          value = action.value;\n      return {\n        by: by,\n        value: value\n      };\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_userSort = (userSort_userSort);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/showUsersBar.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar showUsersBar_initialState = false;\n\nvar showUsersBar_showUsersBar = function showUsersBar() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : showUsersBar_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_USERS_BAR:\n      return !state;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_showUsersBar = (showUsersBar_showUsersBar);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/showPicker.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar showPicker_initialState = false;\n\nvar showPicker_showPicker = function showPicker() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : showPicker_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_EMOJI:\n      return false;\n\n    case TOGGLE_PICKER:\n      return !state;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_showPicker = (showPicker_showPicker);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\n\nvar rootReducer = Object(redux["c" /* combineReducers */])({\n  simplewebrtc: simplewebrtc_module["m" /* reducer */],\n  chatkit: reducers_chatkit,\n  screen: reducers_screen,\n  videoChat: reducers_videoChat,\n  messages: reducers_messages_messages,\n  isLoading: messages_isLoading,\n  currentUser: users_currentUser,\n  typingUsers: users_typingUsers,\n  roomUsers: users_roomUsers,\n  rooms: reducers_rooms_rooms,\n  roomActive: rooms_roomActive,\n  roomFilter: controls_roomFilter,\n  userSort: controls_userSort,\n  showUsersBar: controls_showUsersBar,\n  showPicker: controls_showPicker\n});\nvar composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || redux["d" /* compose */];\nvar store = Object(redux["e" /* createStore */])(rootReducer, {\n  simplewebrtc: {}\n}, composeEnhancer(Object(redux["a" /* applyMiddleware */])(redux_thunk_es["a" /* default */])));\n/* harmony default export */ var reducers = (store);\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-router-dom/esm/react-router-dom.js\nvar react_router_dom = __webpack_require__(33);\n\n// EXTERNAL MODULE: ./node_modules/react-router/esm/react-router.js + 1 modules\nvar react_router = __webpack_require__(61);\n\n// CONCATENATED MODULE: ./src/components/FormControls/AuthInput.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nfunction AuthInput(props) {\n  var type = props.type,\n      id = props.id,\n      value = props.value,\n      placeholder = props.placeholder,\n      icon = props.icon;\n\n  var onChange = function onChange(event) {\n    return props.onChange(event);\n  };\n\n  return react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("input", {\n    type: type,\n    name: type,\n    id: id,\n    className: "form-control",\n    value: value,\n    placeholder: placeholder,\n    onChange: onChange,\n    required: true\n  }), react_default.a.createElement("button", {\n    className: "btn icon"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, icon)));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/@webscopeio/react-textarea-autocomplete/dist/react-textarea-autocomplete.es.js\nvar react_textarea_autocomplete_es = __webpack_require__(283);\n\n// EXTERNAL MODULE: ./node_modules/emoji-mart/dist-es/index.js + 29 modules\nvar dist_es = __webpack_require__(175);\n\n// EXTERNAL MODULE: ./node_modules/crypto-js/index.js\nvar crypto_js = __webpack_require__(171);\n\n// CONCATENATED MODULE: ./src/functions/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\nvar alertError = function alertError(title, err) {\n  try {\n    var error = err.error_description ? err.error_description : err.info.error_description;\n  } catch (_unused) {\n    error = err.error;\n  }\n\n  console.log(err);\n  alert(title + \': \' + error);\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/screen.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nvar screen_signUp = function signUp(name, email, password) {\n  return function (dispatch, getState) {\n    var chatkit = getState().chatkit;\n    var id = Object(crypto_js["HmacSHA1"])(email + \'@!?#?\' + password, key).toString();\n    var avatarURL = "https://avatars.dicebear.com/v2/avataaars/".concat(name, ".svg?options[eyes][]=squint&options[eyebrow][]=raised&options[mouth][]=smile");\n    chatkit.createUser({\n      id: id,\n      name: name,\n      avatarURL: avatarURL\n    }).then(function () {\n      return alert(\'User created successfully\');\n    })["catch"](function (err) {\n      return alertError(\'Error on sign up\', err);\n    });\n  };\n};\nvar screen_signIn = function signIn(email, password) {\n  return function (dispatch, getState) {\n    var chatkit = getState().chatkit;\n    var id = Object(crypto_js["HmacSHA1"])(email + \'@!?#?\' + password, key).toString();\n    chatkit.getUser({\n      id: id\n    }).then(function () {\n      return dispatch({\n        type: SIGN_IN,\n        userId: id\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on sign in\', err);\n    });\n  };\n};\nvar screen_signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/@pusher/chatkit-client/dist/web/chatkit.js\nvar web_chatkit = __webpack_require__(172);\n\n// CONCATENATED MODULE: ./src/actions/messages.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nvar messages_typingMessage = function typingMessage() {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        currentUser = _getState.currentUser,\n        roomActive = _getState.roomActive;\n\n    currentUser.isTypingIn({\n      roomId: roomActive.id\n    })["catch"](function (err) {\n      return alertError(\'Error on typing rooms\', err);\n    });\n  };\n};\nvar messages_sendMessage = function sendMessage(parts) {\n  var roomId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return function (dispatch, getState) {\n    var _getState2 = getState(),\n        currentUser = _getState2.currentUser,\n        roomActive = _getState2.roomActive;\n\n    if (roomId === null) roomId = "".concat(roomActive.id);\n    currentUser.sendMultipartMessage({\n      roomId: roomId,\n      parts: parts\n    })["catch"](function (err) {\n      return alertError(\'Error on sending message\', err);\n    });\n  };\n};\n// CONCATENATED MODULE: ./src/actions/rooms.jsx\nfunction rooms_toConsumableArray(arr) { return rooms_arrayWithoutHoles(arr) || rooms_iterableToArray(arr) || rooms_nonIterableSpread(); }\n\nfunction rooms_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction rooms_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction rooms_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nvar rooms_connect = function connect(userId) {\n  return function (dispatch, getState) {\n    var chatManager = new web_chatkit["ChatManager"]({\n      instanceLocator: instanceLocator,\n      userId: userId,\n      tokenProvider: new web_chatkit["TokenProvider"]({\n        url: tokenUrl\n      })\n    });\n    chatManager.connect({\n      onRoomUpdated: function onRoomUpdated(room) {\n        var _getState = getState(),\n            rooms = _getState.rooms;\n\n        var index = rooms.findIndex(function (r) {\n          return r.id === room.id;\n        });\n        rooms[index] = room;\n        dispatch({\n          type: UPDATE_ROOMS,\n          rooms: rooms\n        });\n      }\n    }).then(function (currentUser) {\n      dispatch({\n        type: CONNECT,\n        currentUser: currentUser\n      });\n      dispatch(rooms_getRooms(currentUser));\n    })["catch"](function (err) {\n      return alertError(\'Error on connection\', err);\n    });\n  };\n};\nvar rooms_getRooms = function getRooms(currentUser) {\n  return function (dispatch, getState) {\n    currentUser.getJoinableRooms().then(function (unjoinedRooms) {\n      var rooms = [].concat(rooms_toConsumableArray(currentUser.rooms), rooms_toConsumableArray(unjoinedRooms));\n      dispatch({\n        type: GET_ROOMS,\n        rooms: rooms\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on getting rooms\', err);\n    });\n  };\n};\nvar rooms_enterRoom = function enterRoom(roomId) {\n  return function (dispatch, getState) {\n    var _getState2 = getState(),\n        chatkit = _getState2.chatkit,\n        currentUser = _getState2.currentUser,\n        roomActive = _getState2.roomActive,\n        showCall = _getState2.showCall;\n\n    dispatch({\n      type: CLEAR_MESSAGE\n    });\n    if (!currentUser.id) return;\n\n    try {\n      currentUser.roomSubscriptions[roomActive.id].cancel();\n    } catch (_unused) {}\n\n    currentUser.subscribeToRoomMultipart({\n      roomId: roomId,\n      messageLimit: 50,\n      hooks: {\n        onMessage: function onMessage(message) {\n          dispatch({\n            type: ON_MESSAGE,\n            message: message\n          });\n          if (roomActive.id) return currentUser.setReadCursor({\n            roomId: roomActive.id,\n            position: message.id\n          });\n        },\n        onUserStartedTyping: function onUserStartedTyping(user) {\n          dispatch({\n            type: USER_STARTED_TYPING,\n            user: user\n          });\n        },\n        onUserStoppedTyping: function onUserStoppedTyping(user) {\n          dispatch({\n            type: USER_STOPED_TYPING,\n            user: user\n          });\n        },\n        onPresenceChanged: function onPresenceChanged() {\n          var _getState3 = getState(),\n              roomActive = _getState3.roomActive;\n\n          if (roomActive.id) dispatch({\n            type: PRESENCE_CHANGED,\n            roomActive: roomActive\n          });\n        }\n      }\n    }).then(function (roomActive) {\n      dispatch({\n        type: ENTER_ROOM,\n        roomActive: roomActive\n      });\n      dispatch(rooms_getRooms(currentUser));\n    })["catch"](function (err) {\n      var error = err.info.error;\n\n      if (error === \'services/chatkit/not_found/room_not_found\') {\n        chatkit.getUser({\n          id: roomId.replace(\'user=\', \'\')\n        }).then(function (user) {\n          var id = user.id,\n              name = user.name;\n          dispatch(rooms_createRoom(name, \'\', id, true));\n        })["catch"](function () {\n          alertError(\'Error on entering rooms: \', err);\n          dispatch({\n            type: NOT_FOUND\n          });\n        });\n      } else alertError(\'Error on entering rooms: \', err);\n    });\n  };\n};\nvar rooms_createRoom = function createRoom(name, message) {\n  var userId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var isPrivate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  return function (dispatch, getState) {\n    var _getState4 = getState(),\n        currentUser = _getState4.currentUser;\n\n    var accessNewRoom = function accessNewRoom(id) {\n      dispatch(rooms_enterRoom(id));\n      window.history.pushState(null, null, "room/".concat(id));\n      var parts = [];\n\n      if (message.trim()) {\n        parts.push({\n          type: \'text/plain\',\n          content: message\n        });\n        dispatch(messages_sendMessage(parts, "".concat(id)));\n      }\n    };\n\n    if (isPrivate) currentUser.createRoom({\n      id: \'user=\' + userId,\n      name: name,\n      "private": true,\n      addUserIds: [currentUser.id, userId]\n    }).then(function (room) {\n      return accessNewRoom(room.id);\n    })["catch"](function (err) {\n      var error = err.info.error;\n      if (error === \'services/chatkit/bad_request/duplicate_room_id\') dispatch(rooms_enterRoom(\'user=\' + userId));else lertError(\'Error on chatting 1 to 1\', err);\n    });else currentUser.createRoom({\n      name: name\n    }).then(function (room) {\n      return accessNewRoom(room.id);\n    })["catch"](function (err) {\n      return alertError(\'Error on creating rooms\', err);\n    });\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/controls.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar controls_filterRooms = function filterRooms(name) {\n  var status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return {\n    type: FILTER_ROOMS,\n    name: name,\n    status: status\n  };\n};\nvar controls_sortMembers = function sortMembers(by, value) {\n  return {\n    type: SORT_MEMBERS,\n    by: by,\n    value: value\n  };\n};\nvar controls_toggleUsersBar = function toggleUsersBar() {\n  return {\n    type: TOGGLE_USERS_BAR\n  };\n};\nvar controls_toggleCall = function toggleCall() {\n  var cam = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return {\n    type: TOGGLE_CALL,\n    cam: cam\n  };\n};\nvar controls_togglePicker = function togglePicker() {\n  return {\n    type: TOGGLE_PICKER\n  };\n};\nvar controls_addEmoji = function addEmoji(emoji, message) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: ADD_EMOJI\n    });\n    return "".concat(message).concat(emoji["native"]);\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-images-upload/compiled.js\nvar compiled = __webpack_require__(288);\nvar compiled_default = /*#__PURE__*/__webpack_require__.n(compiled);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/ButtonToolbar.js\nvar ButtonToolbar = __webpack_require__(652);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Button.js\nvar Button = __webpack_require__(290);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Modal.js + 21 modules\nvar Modal = __webpack_require__(656);\n\n// CONCATENATED MODULE: ./src/components/FormControls/Dialog.jsx\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Dialog(props) {\n  var _useState = Object(react["useState"])(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalShow = _useState2[0],\n      setModalShow = _useState2[1];\n\n  var type = props.type,\n      title = props.title,\n      icon = props.icon,\n      disabled = props.disabled,\n      children = props.children;\n\n  var onCloseModal = function onCloseModal() {\n    return setModalShow(false);\n  };\n\n  var onShowModal = function onShowModal() {\n    if (!disabled) setModalShow(true);\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    props.onSubmit();\n    onCloseModal();\n  };\n\n  return react_default.a.createElement(ButtonToolbar["a" /* default */], null, react_default.a.createElement(Button["a" /* default */], {\n    className: type,\n    onClick: onShowModal\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, icon)), react_default.a.createElement(Modal["a" /* default */], {\n    centered: true,\n    show: modalShow,\n    onHide: onCloseModal\n  }, react_default.a.createElement("div", {\n    className: "requests"\n  }, react_default.a.createElement(Modal["a" /* default */].Header, null, react_default.a.createElement(Modal["a" /* default */].Title, null, react_default.a.createElement("div", {\n    className: "title"\n  }, react_default.a.createElement("h1", null, title), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn",\n    onClick: onCloseModal\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "close"))))), react_default.a.createElement(Modal["a" /* default */].Body, null, react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("form", {\n    onSubmit: onSubmit\n  }, children, react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn button w-100"\n  }, title)))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/FormControls/UploadImage.jsx\nfunction UploadImage_slicedToArray(arr, i) { return UploadImage_arrayWithHoles(arr) || UploadImage_iterableToArrayLimit(arr, i) || UploadImage_nonIterableRest(); }\n\nfunction UploadImage_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction UploadImage_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction UploadImage_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction UploadImage() {\n  var roomActive = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomActive;\n  });\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])([]),\n      _useState2 = UploadImage_slicedToArray(_useState, 2),\n      pictures = _useState2[0],\n      setPictures = _useState2[1];\n\n  var _useState3 = Object(react["useState"])(\'\'),\n      _useState4 = UploadImage_slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var onDrop = function onDrop(pictureFiles) {\n    return setPictures(pictureFiles);\n  };\n\n  var onChange = function onChange(event) {\n    return setMessage(event.target.value);\n  };\n\n  var onSubmit = function onSubmit() {\n    if (pictures.length === 0) return;\n    var parts = [];\n    pictures.forEach(function (pic) {\n      return parts.push({\n        file: pic\n      });\n    });\n    if (message.trim()) parts.push({\n      type: \'text/plain\',\n      content: message\n    });\n    dispatch(messages_sendMessage(parts));\n    setPictures([]);\n    setMessage(\'\');\n  };\n\n  return react_default.a.createElement(Dialog, {\n    type: "attach d-sm-block d-none",\n    title: "Th\\xEAm \\u1EA3nh",\n    icon: "photo",\n    onSubmit: onSubmit,\n    disabled: !roomActive.id\n  }, react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "Tin nh\\u1EAFn:"), react_default.a.createElement(compiled_default.a, {\n    withIcon: true,\n    withPreview: true,\n    buttonText: "Ch\\u1ECDn \\u1EA3nh t\\u1EEB m\\xE1y",\n    imgExtension: [\'.jpg\', \'.jpeg\', \'.png\', \'.gif\'],\n    maxFileSize: 5242880,\n    onChange: onDrop\n  })), react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "Tin nh\\u1EAFn:"), react_default.a.createElement("input", {\n    type: "text",\n    name: "name",\n    value: message,\n    className: "form-control",\n    placeholder: "Th\\xEAm tin nh\\u1EAFn v\\u1EC1 \\u1EA3nh n\\xE0y...",\n    onChange: onChange\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/emoji-mart/css/emoji-mart.css\nvar emoji_mart = __webpack_require__(628);\n\n// CONCATENATED MODULE: ./src/components/FormControls/SendMessage.jsx\nfunction SendMessage_toConsumableArray(arr) { return SendMessage_arrayWithoutHoles(arr) || SendMessage_iterableToArray(arr) || SendMessage_nonIterableSpread(); }\n\nfunction SendMessage_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction SendMessage_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction SendMessage_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction SendMessage_slicedToArray(arr, i) { return SendMessage_arrayWithHoles(arr) || SendMessage_iterableToArrayLimit(arr, i) || SendMessage_nonIterableRest(); }\n\nfunction SendMessage_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction SendMessage_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction SendMessage_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction SendMessage() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive,\n      showPicker = _useSelector.showPicker;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])(\'\'),\n      _useState2 = SendMessage_slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var filterUserNames = function filterUserNames(token) {\n    return roomActive.users.filter(function (user) {\n      return user.name.includes(token);\n    });\n  };\n\n  var onTogglePicker = function onTogglePicker() {\n    return dispatch(controls_togglePicker());\n  };\n\n  var onAddEmoji = function onAddEmoji(emoji) {\n    return setMessage(dispatch(controls_addEmoji(emoji, message)));\n  };\n\n  var onChange = function onChange(event) {\n    setMessage(event.target.value);\n    dispatch(messages_typingMessage());\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    var parts = [];\n\n    if (message.trim()) {\n      parts.push({\n        type: \'text/plain\',\n        content: message\n      });\n      dispatch(messages_sendMessage(parts));\n      setMessage(\'\');\n    }\n  };\n\n  return react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "bottom"\n  }, react_default.a.createElement("form", {\n    className: "position-relative w-100",\n    onSubmit: onSubmit\n  }, react_default.a.createElement(react_textarea_autocomplete_es["a" /* default */], {\n    className: "form-control",\n    value: message,\n    loadingComponent: function loadingComponent() {\n      return react_default.a.createElement("p", null, "Loading...");\n    },\n    onChange: onChange,\n    placeholder: "Nh\\u1EADp tin nh\\u1EAFn...",\n    trigger: {\n      \'@\': {\n        dataProvider: function dataProvider(token) {\n          return SendMessage_toConsumableArray(filterUserNames(token));\n        },\n        component: function component(_ref) {\n          var name = _ref.entity.name;\n          return react_default.a.createElement("div", null, name);\n        },\n        output: function output(item) {\n          return "@".concat(item.name);\n        }\n      },\n      \':\': {\n        dataProvider: function dataProvider(token) {\n          return dist_es["b" /* emojiIndex */].search(token).map(function (o) {\n            return {\n              colons: o.colons,\n              "native": o["native"]\n            };\n          });\n        },\n        component: function component(_ref2) {\n          var _ref2$entity = _ref2.entity,\n              _native = _ref2$entity["native"],\n              colons = _ref2$entity.colons;\n          return react_default.a.createElement("div", null, "".concat(colons, " ").concat(_native));\n        },\n        output: function output(item) {\n          return "".concat(item["native"]);\n        }\n      }\n    },\n    disabled: !roomActive.id\n  }), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn emoticons",\n    onClick: onTogglePicker,\n    disabled: !roomActive.id\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "insert_emoticon")), react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn send"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "send")), showPicker && react_default.a.createElement(dist_es["a" /* Picker */], {\n    set: "emojione",\n    onSelect: onAddEmoji\n  })), react_default.a.createElement(UploadImage, null))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/FormControls/FilterRooms.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction FilterRooms() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomFilter;\n  }),\n      name = _useSelector.name,\n      status = _useSelector.status;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var onChange = function onChange(event) {\n    var roomName = event.target.value.toLowerCase().trim();\n    dispatch(controls_filterRooms(roomName));\n  };\n\n  return react_default.a.createElement("div", {\n    id: "room-filter"\n  }, react_default.a.createElement("div", {\n    className: "search"\n  }, react_default.a.createElement("form", {\n    className: "form-inline position-relative"\n  }, react_default.a.createElement("input", {\n    type: "search",\n    className: "form-control",\n    placeholder: "T\\xECm ki\\u1EBFm ph\\xF2ng chat...",\n    onChange: onChange\n  }), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn btn-link loop"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "search")))), react_default.a.createElement("div", {\n    className: "list-group sort"\n  }, react_default.a.createElement("button", {\n    className: "btn ".concat(status === 0 && \'active show\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(name, 0));\n    }\n  }, "T\\u1EA5t c\\u1EA3"), react_default.a.createElement("button", {\n    className: "btn ".concat(status === 1 && \'active show\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(name, 1));\n    }\n  }, "\\u0110\\xE3 \\u0111\\u1ECDc"), react_default.a.createElement("button", {\n    className: "btn ".concat(status === -1 && \'active show\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(name, -1));\n    }\n  }, "Ch\\u01B0a \\u0111\\u1ECDc")));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/DropdownButton.js\nvar DropdownButton = __webpack_require__(653);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Dropdown.js + 19 modules\nvar Dropdown = __webpack_require__(125);\n\n// CONCATENATED MODULE: ./src/components/FormControls/SortMembers.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction SortMembers() {\n  var userSort = Object(es["d" /* useSelector */])(function (state) {\n    return state.userSort;\n  });\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var by = userSort.by,\n      value = userSort.value;\n  return react_default.a.createElement(DropdownButton["a" /* default */], {\n    title: "S\\u1EAFp x\\u1EBFp theo",\n    size: "sm",\n    variant: "light"\n  }, react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      return dispatch(controls_sortMembers(\'status\', 1));\n    }\n  }, "\\u0110ang Online", by == \'status\' && value == 1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")), react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      return dispatch(controls_sortMembers(\'status\', -1));\n    }\n  }, "\\u0110ang Offline", by == \'status\' && value == -1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")), react_default.a.createElement(Dropdown["a" /* default */].Divider, null), react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      return dispatch(controls_sortMembers(\'name\', 1));\n    }\n  }, "A \\u0111\\u1EBFn Z", by == \'name\' && value == 1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")), react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      return dispatch(controls_sortMembers(\'name\', -1));\n    }\n  }, "Z \\u0111\\u1EBFn A", by == \'name\' && value == -1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/FormControls/CreateRoom.jsx\nfunction CreateRoom_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction CreateRoom_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { CreateRoom_ownKeys(Object(source), true).forEach(function (key) { CreateRoom_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { CreateRoom_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction CreateRoom_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction CreateRoom_slicedToArray(arr, i) { return CreateRoom_arrayWithHoles(arr) || CreateRoom_iterableToArrayLimit(arr, i) || CreateRoom_nonIterableRest(); }\n\nfunction CreateRoom_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction CreateRoom_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction CreateRoom_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction CreateRoom() {\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])({\n    name: \'\',\n    firstMessage: \'\'\n  }),\n      _useState2 = CreateRoom_slicedToArray(_useState, 2),\n      roomInfo = _useState2[0],\n      setRoomInfo = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var target = event.target;\n    var name = target.name,\n        value = target.value;\n    setRoomInfo(CreateRoom_objectSpread({}, roomInfo, CreateRoom_defineProperty({}, name, value)));\n  };\n\n  var onSubmit = function onSubmit() {\n    var name = roomInfo.name,\n        firstMessage = roomInfo.firstMessage;\n\n    if (name.trim()) {\n      dispatch(rooms_createRoom(name, firstMessage));\n      setRoomInfo(CreateRoom_objectSpread({}, roomInfo, {\n        name: \'\',\n        firstMessage: \'\'\n      }));\n    }\n  };\n\n  return react_default.a.createElement(Dialog, {\n    type: "create",\n    icon: "create",\n    title: "T\\u1EA1o ph\\xF2ng m\\u1EDBi",\n    onSubmit: onSubmit\n  }, react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "T\\xEAn ph\\xF2ng:"), react_default.a.createElement("input", {\n    type: "text",\n    name: "name",\n    value: roomInfo.name,\n    className: "form-control",\n    placeholder: "\\u0110\\u1EB7t t\\xEAn ph\\xF2ng...",\n    onChange: onChange,\n    required: true\n  })), react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "Tin nh\\u1EAFn:"), react_default.a.createElement("textarea", {\n    name: "firstMessage",\n    value: roomInfo.firstMessage,\n    className: "text-control",\n    placeholder: "Nh\\u1EADp tin nh\\u1EAFn \\u0111\\u1EA7u ti\\xEAn c\\u1EE7a b\\u1EA1n...",\n    onChange: onChange\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/FormControls/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Screen/SignIn.jsx\nfunction SignIn_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction SignIn_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { SignIn_ownKeys(Object(source), true).forEach(function (key) { SignIn_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { SignIn_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction SignIn_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction SignIn_slicedToArray(arr, i) { return SignIn_arrayWithHoles(arr) || SignIn_iterableToArrayLimit(arr, i) || SignIn_nonIterableRest(); }\n\nfunction SignIn_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction SignIn_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction SignIn_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction SignIn() {\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])({\n    email: \'\',\n    password: \'\'\n  }),\n      _useState2 = SignIn_slicedToArray(_useState, 2),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var target = event.target;\n    var name = target.name,\n        value = target.value;\n    setUserInfo(SignIn_objectSpread({}, userInfo, SignIn_defineProperty({}, name, value)));\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    var email = userInfo.email,\n        password = userInfo.password;\n    if (email.trim() && password.trim()) dispatch(screen_signIn(email, password, history));\n  };\n\n  return react_default.a.createElement("div", {\n    className: "app"\n  }, react_default.a.createElement("div", {\n    className: "main order-md-1"\n  }, react_default.a.createElement("div", {\n    className: "start"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("h1", null, "Sign in QuanChat"), react_default.a.createElement("div", {\n    className: "third-party"\n  }, react_default.a.createElement("button", {\n    className: "btn item bg-blue"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "pages")), react_default.a.createElement("button", {\n    className: "btn item bg-teal"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "party_mode")), react_default.a.createElement("button", {\n    className: "btn item bg-purple"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "whatshot"))), react_default.a.createElement("p", null, "S\\u1EED d\\u1EE5ng t\\xE0i kho\\u1EA3n email \\u0111\\xE3 \\u0111\\u0103ng k\\xED:"), react_default.a.createElement("form", {\n    onSubmit: onSubmit\n  }, react_default.a.createElement(AuthInput, {\n    type: "email",\n    id: "inputEmail",\n    value: userInfo.email,\n    placeholder: "email@domain.com",\n    icon: "mail_outline",\n    onChange: onChange\n  }), react_default.a.createElement(AuthInput, {\n    type: "password",\n    id: "inputPassword",\n    value: userInfo.password,\n    placeholder: "M\\u1EADt kh\\u1EA9u",\n    icon: "lock_outline",\n    onChange: onChange\n  }), react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn button"\n  }, "\\u0110\\u0103ng Nh\\u1EADp"), react_default.a.createElement("div", {\n    className: "callout"\n  }, react_default.a.createElement("span", null, "Ch\\u01B0a c\\xF3 t\\xE0i kho\\u1EA3n? \\xA0", react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/sign-up"\n  }, "T\\u1EA1o ngay"))))))))), react_default.a.createElement("div", {\n    className: "aside order-md-2"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "preference"\n  }, react_default.a.createElement("h2", null, "Hello, Friend!"), react_default.a.createElement("p", null, "Nh\\u1EADp th\\xF4ng tin t\\xE0i kho\\u1EA3n v\\xE0 b\\u1EAFt \\u0111\\u1EA7u h\\xE0nh tr\\xECnh v\\u1EDBi QuanChat ngay n\\xE0o."), react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/sign-up",\n    className: "btn button"\n  }, "\\u0110\\u0103ng k\\xED"))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Screen/SignUp.jsx\nfunction SignUp_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction SignUp_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { SignUp_ownKeys(Object(source), true).forEach(function (key) { SignUp_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { SignUp_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction SignUp_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction SignUp_slicedToArray(arr, i) { return SignUp_arrayWithHoles(arr) || SignUp_iterableToArrayLimit(arr, i) || SignUp_nonIterableRest(); }\n\nfunction SignUp_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction SignUp_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction SignUp_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction SignUp() {\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])({\n    name: \'\',\n    email: \'\',\n    password: \'\'\n  }),\n      _useState2 = SignUp_slicedToArray(_useState, 2),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var target = event.target;\n    var name = target.name,\n        value = target.value;\n    setUserInfo(SignUp_objectSpread({}, userInfo, SignUp_defineProperty({}, name, value)));\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    var name = userInfo.name,\n        email = userInfo.email,\n        password = userInfo.password;\n\n    if (name.trim() && email.trim() && password.trim()) {\n      dispatch(screen_signUp(name, email, password));\n      setUserInfo({\n        name: \'\',\n        email: \'\',\n        password: \'\'\n      });\n    }\n  };\n\n  return react_default.a.createElement("div", {\n    className: "app"\n  }, react_default.a.createElement("div", {\n    className: "main order-md-2"\n  }, react_default.a.createElement("div", {\n    className: "start"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("h1", null, "T\\u1EA1o t\\xE0i kho\\u1EA3n"), react_default.a.createElement("div", {\n    className: "third-party"\n  }, react_default.a.createElement("button", {\n    className: "btn item bg-blue"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "pages")), react_default.a.createElement("button", {\n    className: "btn item bg-teal"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "party_mode")), react_default.a.createElement("button", {\n    className: "btn item bg-purple"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "whatshot"))), react_default.a.createElement("p", null, "S\\u1EED d\\u1EE5ng email c\\u1EE7a b\\u1EA1n \\u0111\\u1EC3 \\u0111\\u0103ng k\\xED:"), react_default.a.createElement("form", {\n    className: "signup",\n    onSubmit: onSubmit\n  }, react_default.a.createElement("div", {\n    className: "form-parent"\n  }, react_default.a.createElement(AuthInput, {\n    type: "name",\n    id: "inputName",\n    value: userInfo.name,\n    placeholder: "T\\xEAn ng\\u01B0\\u1EDDi d\\xF9ng",\n    icon: "person_outline",\n    onChange: onChange\n  }), react_default.a.createElement(AuthInput, {\n    type: "email",\n    id: "inputEmail",\n    value: userInfo.email,\n    placeholder: "\\u0110\\u1ECBa ch\\u1EC9 Email",\n    icon: "mail_outline",\n    onChange: onChange\n  })), react_default.a.createElement(AuthInput, {\n    type: "password",\n    id: "inputPassword",\n    value: userInfo.password,\n    placeholder: "M\\u1EADt kh\\u1EA9u",\n    icon: "lock_outline",\n    onChange: onChange\n  }), react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn button"\n  }, "\\u0110\\u0103ng k\\xED"), react_default.a.createElement("div", {\n    className: "callout"\n  }, react_default.a.createElement("span", null, "\\u0110\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n? \\xA0", react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/"\n  }, "\\u0110\\u0103ng Nh\\u1EADp"))))))))), react_default.a.createElement("div", {\n    className: "aside order-md-1"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "preference"\n  }, react_default.a.createElement("h2", null, "Welcome Back!"), react_default.a.createElement("p", null, "\\u0110\\u1EC3 gi\\u1EEF k\\u1EBFt n\\u1ED1i v\\u1EDBi b\\u1EA1n b\\xE8, vui l\\xF2ng s\\u1EED d\\u1EE5ng th\\xF4ng tin t\\xE0i kho\\u1EA3n m\\xE0 b\\u1EA1n \\u0111\\xE3 \\u0111\\u0103ng k\\xED ."), react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/",\n    className: "btn button"\n  }, "\\u0110\\u0103ng nh\\u1EADp"))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Navigation/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction Navigation() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.currentUser;\n  }),\n      avatarURL = _useSelector.avatarURL;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var onPower = function onPower() {\n    return dispatch(screen_signOut());\n  };\n\n  return react_default.a.createElement("div", {\n    className: "navigation"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "inside"\n  }, react_default.a.createElement("div", {\n    className: "nav nav-tab menu"\n  }, react_default.a.createElement("button", {\n    className: "btn"\n  }, react_default.a.createElement("img", {\n    className: "avatar-xl",\n    src: avatarURL\n  })), react_default.a.createElement("a", {\n    href: "#discussions",\n    className: "active f-grow1",\n    "data-toggle": "tab"\n  }, react_default.a.createElement("i", {\n    className: "material-icons active"\n  }, "chat_bubble_outline")), react_default.a.createElement("button", {\n    className: "btn mode"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "brightness_2")), react_default.a.createElement("button", {\n    className: "btn power",\n    onClick: onPower\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "power_settings_new"))))));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/OverlayTrigger.js + 2 modules\nvar OverlayTrigger = __webpack_require__(657);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Tooltip.js\nvar Tooltip = __webpack_require__(654);\n\n// CONCATENATED MODULE: ./src/components/Avatar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Avatar(props) {\n  var name = props.name,\n      type = props.type,\n      tooltip = props.tooltip,\n      size = props.size;\n  var avatarSize = !size ? \'avatar-md\' : "avatar-".concat(size);\n  var avatarAPI = \'https://avatars.dicebear.com/v2\';\n\n  if (type === \'room\') {\n    avatarAPI = "".concat(avatarAPI, "/jdenticon/").concat(name, ".svg");\n  } else if (type === \'user\') {\n    var options = {\n      eyes: \'squint\',\n      eyebrow: \'raised\',\n      mouth: \'smile\'\n    };\n    options = Object.keys(options).reduce(function (res, key) {\n      return "".concat(res, "options[").concat(key, "][]=").concat(options[key], "&");\n    }, []);\n    avatarAPI = "".concat(avatarAPI, "/avataaars/").concat(name, ".svg?").concat(options);\n  }\n\n  return react_default.a.createElement(OverlayTrigger["a" /* default */], {\n    placement: tooltip,\n    overlay: react_default.a.createElement(Tooltip["a" /* default */], null, name)\n  }, react_default.a.createElement("img", {\n    className: avatarSize,\n    src: avatarAPI,\n    alt: name\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/TopBar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction TopBar() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomActive;\n  }),\n      id = _useSelector.id,\n      name = _useSelector.name,\n      isPrivate = _useSelector.isPrivate;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var avatarType = isPrivate ? \'user\' : \'room\';\n\n  var onPhoneChat = function onPhoneChat() {\n    if (id) dispatch(controls_toggleCall());\n  };\n\n  var onVideoChat = function onVideoChat() {\n    if (id) dispatch(controls_toggleCall(true));\n  };\n\n  var onShowMembers = function onShowMembers() {\n    if (id) dispatch(controls_toggleUsersBar());\n  };\n\n  return react_default.a.createElement("div", {\n    className: "top"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "inside"\n  }, react_default.a.createElement("a", {\n    href: "#"\n  }, react_default.a.createElement(Avatar, {\n    name: name,\n    type: avatarType,\n    tooltip: "bottom"\n  })), react_default.a.createElement("div", {\n    className: "status"\n  }, react_default.a.createElement("i", {\n    className: "material-icons online"\n  }, "fiber_manual_record")), react_default.a.createElement("div", {\n    className: "data"\n  }, react_default.a.createElement("h5", null, name), react_default.a.createElement("span", null, "Active now")), react_default.a.createElement("button", {\n    className: "btn",\n    onClick: onPhoneChat\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-30"\n  }, "phone_in_talk")), react_default.a.createElement("button", {\n    className: "btn",\n    onClick: onVideoChat\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-36"\n  }, "videocam")), react_default.a.createElement("button", {\n    className: "btn",\n    onClick: onShowMembers\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-30"\n  }, "info"))))));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-new-window/umd/react-new-window.js\nvar react_new_window = __webpack_require__(292);\nvar react_new_window_default = /*#__PURE__*/__webpack_require__.n(react_new_window);\n\n// CONCATENATED MODULE: ./src/components/VideoChat/LocalOptions.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction LocalOptions(props) {\n  return react_default.a.createElement(simplewebrtc_module["k" /* UserControls */], {\n    render: function render(_ref) {\n      var isMuted = _ref.isMuted,\n          isPaused = _ref.isPaused,\n          mute = _ref.mute,\n          unmute = _ref.unmute,\n          resumeVideo = _ref.resumeVideo,\n          pauseVideo = _ref.pauseVideo;\n      return react_default.a.createElement("div", {\n        className: "options"\n      }, react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: function onClick() {\n          return isPaused ? resumeVideo() : pauseVideo();\n        }\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, isPaused ? \'play_arrow\' : \'pause\')), props.children, react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: function onClick() {\n          return isMuted ? unmute() : mute();\n        }\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, isMuted ? \'volume_off\' : \'volume_up\')));\n    }\n  });\n}\n// CONCATENATED MODULE: ./src/components/VideoChat/Options.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction Options(props) {\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var localVideos = props.localVideos,\n      localScreen = props.localScreen;\n  return react_default.a.createElement(LocalOptions, null, localVideos && localVideos.length ? react_default.a.createElement(simplewebrtc_module["e" /* MediaControls */], {\n    media: localVideos[0],\n    autoRemove: true,\n    render: function render(_ref) {\n      var remove = _ref.remove;\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: remove\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "videocam_off"));\n    }\n  }) : react_default.a.createElement(simplewebrtc_module["i" /* RequestUserMedia */], {\n    video: true,\n    audio: true,\n    render: function render(getUserMedia) {\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: getUserMedia\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "videocam"));\n    }\n  }), react_default.a.createElement("button", {\n    className: "btn option call-end",\n    onClick: function onClick() {\n      return dispatch(controls_toggleCall());\n    }\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-30"\n  }, "call_end")), localScreen ? react_default.a.createElement(simplewebrtc_module["e" /* MediaControls */], {\n    media: localScreen,\n    autoRemove: true,\n    render: function render(_ref2) {\n      var stopSharing = _ref2.stopSharing;\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: stopSharing\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "stop_screen_share"));\n    }\n  }) : react_default.a.createElement(simplewebrtc_module["h" /* RequestDisplayMedia */], {\n    render: function render(getDisplayMedia) {\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: getDisplayMedia\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "screen_share"));\n    }\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/VideoChat/Status.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction Status(props) {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomActive;\n  }),\n      name = _useSelector.name,\n      isPrivate = _useSelector.isPrivate;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var avatarType = isPrivate ? \'user\' : \'room\';\n\n  var onCloseCall = function onCloseCall() {\n    return dispatch(controls_toggleCall());\n  };\n\n  return react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "inside"\n  }, react_default.a.createElement("div", {\n    className: "panel"\n  }, react_default.a.createElement("div", {\n    className: "participant"\n  }, react_default.a.createElement(Avatar, {\n    name: name,\n    type: avatarType,\n    tooltip: "bottom",\n    size: "xxl"\n  }), react_default.a.createElement("span", null, props.value)), react_default.a.createElement(Options, null), react_default.a.createElement("button", {\n    className: "btn back",\n    onClick: onCloseCall\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-24"\n  }, "chat")))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/VideoChat/index.jsx\nfunction VideoChat_toConsumableArray(arr) { return VideoChat_arrayWithoutHoles(arr) || VideoChat_iterableToArray(arr) || VideoChat_nonIterableSpread(); }\n\nfunction VideoChat_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction VideoChat_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction VideoChat_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\nfunction VideoChat() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive,\n      videoChat = _useSelector.videoChat;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var id = roomActive.id,\n      name = roomActive.name;\n\n  var onUnload = function onUnload() {\n    return dispatch(controls_toggleCall());\n  };\n\n  return react_default.a.createElement(react_new_window_default.a, {\n    title: name,\n    onUnload: onUnload\n  }, react_default.a.createElement("link", {\n    href: "https://fonts.googleapis.com/icon?family=Material+Icons",\n    rel: "stylesheet"\n  }), react_default.a.createElement("div", {\n    className: "call"\n  }, react_default.a.createElement(simplewebrtc_module["f" /* Provider */], {\n    configUrl: SWRTC_CONFIG_URL\n  }, react_default.a.createElement(simplewebrtc_module["b" /* Connecting */], null, react_default.a.createElement(Status, {\n    value: "\\u0110ang k\\u1EBFt n\\u1ED1i"\n  })), react_default.a.createElement(simplewebrtc_module["c" /* Disconnected */], null, react_default.a.createElement(Status, {\n    value: "Kh\\xF4ng c\\xF3 k\\u1EBFt n\\u1ED1i"\n  })), react_default.a.createElement(simplewebrtc_module["a" /* Connected */], null, react_default.a.createElement(simplewebrtc_module["g" /* RemoteAudioPlayer */], null), react_default.a.createElement(simplewebrtc_module["i" /* RequestUserMedia */], {\n    audio: true,\n    auto: true\n  }), videoChat.cam && react_default.a.createElement(simplewebrtc_module["i" /* RequestUserMedia */], {\n    video: true,\n    auto: true\n  }), react_default.a.createElement(simplewebrtc_module["j" /* Room */], {\n    roomAddress: id,\n    name: name,\n    password: key\n  }, function (_ref) {\n    var localMedia = _ref.localMedia,\n        remoteMedia = _ref.remoteMedia;\n    var remoteVideos = remoteMedia.filter(function (m) {\n      return m.kind === \'video\';\n    });\n    var localVideos = localMedia.filter(function (m) {\n      return m.kind === \'video\' && m.shared;\n    });\n    var localScreens = localVideos.filter(function (m) {\n      return m.screenCapture;\n    });\n    return react_default.a.createElement("div", {\n      className: "video-chat"\n    }, react_default.a.createElement(simplewebrtc_module["d" /* GridLayout */], {\n      className: "w-100",\n      items: [localVideos[0]].concat(VideoChat_toConsumableArray(localScreens), VideoChat_toConsumableArray(remoteVideos)),\n      renderCell: function renderCell(item) {\n        return item && react_default.a.createElement(simplewebrtc_module["l" /* Video */], {\n          media: item\n        });\n      }\n    }), react_default.a.createElement(Options, {\n      localVideos: localVideos,\n      localScreen: localScreens[0]\n    }));\n  })))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/UserList/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction UserList(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive,\n      roomUsers = _useSelector.roomUsers,\n      userSort = _useSelector.userSort,\n      showUsersBar = _useSelector.showUsersBar;\n\n  var name = roomActive.name,\n      createdByUserId = roomActive.createdByUserId,\n      isPrivate = roomActive.isPrivate;\n  var avatarType = isPrivate ? \'user\' : \'room\';\n  return react_default.a.createElement("div", {\n    className: "sidebar ".concat(!showUsersBar && \'d-none\')\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "info"\n  }, react_default.a.createElement(Avatar, {\n    name: name,\n    type: avatarType,\n    tooltip: "bottom",\n    size: "xl"\n  }), react_default.a.createElement("h4", null, name)), react_default.a.createElement("div", {\n    className: "contacts"\n  }, react_default.a.createElement("div", {\n    className: "sort-members"\n  }, react_default.a.createElement("h1", null, "Th\\xE0nh vi\\xEAn"), react_default.a.createElement(SortMembers, null)), react_default.a.createElement("div", {\n    className: "list-group"\n  }, roomUsers.sort(function (a, b) {\n    var by = userSort.by,\n        value = userSort.value;\n\n    if (by == \'name\') {\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return value;\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -value;\n      return 0;\n    } else if (by == \'status\') {\n      if (a.presence.state > b.presence.state) return -value;\n      if (a.presence.state < b.presence.state) return value;\n      return 0;\n    }\n  }).map(function (user) {\n    var id = user.id,\n        name = user.name,\n        presence = user.presence,\n        createdAt = user.createdAt;\n    var path = \'user=\' + id;\n    var createdDate = new Date(createdAt).toLocaleDateString(\'vi-VN\', {\n      year: \'2-digit\',\n      month: \'numeric\'\n    });\n    return react_default.a.createElement(react_router_dom["b" /* Link */], {\n      key: id,\n      to: "".concat(match.path, "/").concat(path),\n      className: "contact"\n    }, react_default.a.createElement(Avatar, {\n      name: name,\n      type: "user",\n      tooltip: "top"\n    }), react_default.a.createElement("div", {\n      className: "status"\n    }, react_default.a.createElement("i", {\n      className: "material-icons ".concat(presence.state)\n    }, "fiber_manual_record")), react_default.a.createElement("div", {\n      className: "data"\n    }, react_default.a.createElement("h5", null, name), react_default.a.createElement("p", null, createdByUserId === id ? \'Quản trị viên\' : "\\u0110\\u01B0\\u1EE3c t\\u1EA1o v\\xE0o th\\xE1ng ".concat(createdDate))), react_default.a.createElement("div", {\n      className: "person-add"\n    }, react_default.a.createElement("i", {\n      className: "material-icons"\n    }, "person")));\n  }))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/RoomList/RoomBrief.jsx\nfunction RoomBrief_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction RoomBrief_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { RoomBrief_ownKeys(Object(source), true).forEach(function (key) { RoomBrief_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { RoomBrief_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction RoomBrief_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nfunction RoomBrief_slicedToArray(arr, i) { return RoomBrief_arrayWithHoles(arr) || RoomBrief_iterableToArrayLimit(arr, i) || RoomBrief_nonIterableRest(); }\n\nfunction RoomBrief_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction RoomBrief_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction RoomBrief_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction RoomBrief(props) {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      chatkit = _useSelector.chatkit,\n      screen = _useSelector.screen,\n      currentUser = _useSelector.currentUser,\n      roomActive = _useSelector.roomActive,\n      messages = _useSelector.messages;\n\n  var _useState = Object(react["useState"])({\n    sender: {\n      id: \'\',\n      name: \'\'\n    },\n    content: \'Chưa có tin nhắn\',\n    updated_at: \'Được đề xuất\'\n  }),\n      _useState2 = RoomBrief_slicedToArray(_useState, 2),\n      lastMessage = _useState2[0],\n      setLastMessage = _useState2[1];\n\n  var id = props.id,\n      name = props.name;\n\n  var fetchLastMessage =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return chatkit.fetchMultipartMessages({\n                roomId: id,\n                limit: 1\n              }).then(function (message) {\n                if (message.length) {\n                  var _message$ = message[0],\n                      user_id = _message$.user_id,\n                      parts = _message$.parts,\n                      updated_at = _message$.updated_at;\n                  chatkit.getUser({\n                    id: user_id\n                  }).then(function (user) {\n                    setLastMessage(RoomBrief_objectSpread({}, lastMessage, {\n                      sender: {\n                        id: user.id,\n                        name: "".concat(user.name, ": ")\n                      },\n                      content: parts[0].content,\n                      updated_at: new Date(updated_at).toLocaleDateString(\'vi-Vn\', {\n                        weekday: \'narrow\',\n                        year: \'2-digit\',\n                        month: \'2-digit\',\n                        day: \'2-digit\'\n                      })\n                    }));\n                  });\n                }\n              });\n\n            case 2:\n            case "end":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchLastMessage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onShowLastMessage = function onShowLastMessage() {\n    var sender = lastMessage.sender,\n        content = lastMessage.content;\n    return react_default.a.createElement("p", null, currentUser.id === sender.id ? \'Bạn: \' : sender.name, content);\n  };\n\n  Object(react["useEffect"])(function () {\n    if (screen.currentScreen === \'Chat\' && roomActive.id && messages.length > 0) fetchLastMessage();\n  }, [roomActive, messages]);\n  return react_default.a.createElement("div", {\n    className: "data"\n  }, react_default.a.createElement("h5", null, name), react_default.a.createElement("span", null, lastMessage.updated_at), onShowLastMessage());\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/RoomList/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\nfunction RoomList(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      rooms = _useSelector.rooms,\n      roomActive = _useSelector.roomActive,\n      roomFilter = _useSelector.roomFilter;\n\n  var onUnreadCount = function onUnreadCount(unreadCount) {\n    if (unreadCount > 0) {\n      var color = unreadCount > 10 ? \'pink\' : \'yellow\';\n      return react_default.a.createElement("div", {\n        className: "new bg-".concat(color)\n      }, react_default.a.createElement("span", null, unreadCount));\n    }\n  };\n\n  return react_default.a.createElement("div", {\n    className: "sidebar"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement(FilterRooms, null), react_default.a.createElement(CreateRoom, null), react_default.a.createElement("div", {\n    className: "discussions"\n  }, react_default.a.createElement("h1", null, "C\\xE1c ph\\xF2ng chat"), react_default.a.createElement("div", {\n    className: "list-group"\n  }, rooms.filter(function (room) {\n    if (!room.id) return;\n    var roomName = room.name.toLowerCase();\n    var roomStatus = room.unreadCount > 0 ? -1 : 1;\n    var name = roomFilter.name,\n        status = roomFilter.status;\n    if (status === 0) return roomName.indexOf(name) !== -1;\n    return roomName.indexOf(name) !== -1 && roomStatus === status;\n  }).map(function (room) {\n    if (!room.id) return;\n    var id = room.id,\n        name = room.name,\n        userIds = room.userIds,\n        unreadCount = room.unreadCount,\n        isPrivate = room.isPrivate;\n    var unread = unreadCount > 0 && \'unread\';\n    var active = roomActive.id === id && \'active\';\n    var isJoined = userIds ? userIds.find(function (id) {\n      return currentUser.id === id;\n    }) : false;\n    var avatarType = isPrivate ? \'user\' : \'room\';\n    return react_default.a.createElement(react_router_dom["b" /* Link */], {\n      key: id,\n      to: "".concat(match.path, "/").concat(id),\n      className: "".concat(unread, " ").concat(active, " single")\n    }, react_default.a.createElement(Avatar, {\n      name: name,\n      type: avatarType,\n      tooltip: "top"\n    }), react_default.a.createElement("div", {\n      className: "status"\n    }, react_default.a.createElement("i", {\n      className: "material-icons ".concat(isJoined && \'online\')\n    }, "fiber_manual_record")), react_default.a.createElement(RoomBrief, {\n      id: id,\n      name: name\n    }), onUnreadCount(unreadCount));\n  }))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/Message.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Message(props) {\n  var userType = props.userType,\n      userName = props.userName,\n      updatedAt = props.updatedAt,\n      children = props.children;\n  var message = children.length ? children : [children];\n  return react_default.a.createElement("div", {\n    className: "message ".concat(userType)\n  }, userType !== \'me\' && react_default.a.createElement(Avatar, {\n    name: userName,\n    type: "user",\n    tooltip: "top"\n  }), react_default.a.createElement("div", {\n    className: "text-main"\n  }, react_default.a.createElement("div", {\n    className: "text-group ".concat(userType)\n  }, message.map(function (child, index) {\n    if (child.type === \'a\') return child;\n    return react_default.a.createElement("div", {\n      key: index,\n      className: "text ".concat(userType)\n    }, child);\n  })), updatedAt && react_default.a.createElement("span", null, new Date(updatedAt).toLocaleTimeString(\'en-US\', {\n    hour: \'2-digit\',\n    minute: \'2-digit\'\n  }))));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/@microlink/react/dist/microlink.m.js\nvar microlink_m = __webpack_require__(293);\n\n// CONCATENATED MODULE: ./src/components/MessageList/MessageText.jsx\nfunction MessageText_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction MessageText(props) {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomUsers = _useSelector.roomUsers;\n\n  var currentUserName = props.currentUserName,\n      text = props.text;\n\n  var insertTextAtIndices = function insertTextAtIndices(text, obj) {\n    return text.replace(/./g, function (character, index) {\n      return obj[index] ? obj[index] + character : character;\n    });\n  };\n\n  var messageText = text;\n  var roomUserNames = roomUsers.map(function (user) {\n    return "@".concat(user.name);\n  });\n  var urlMatches = text.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\n  var mentions = text.match(/@[a-zA-Z0-9]+/g) || [];\n  var LinkPreviews = urlMatches.map(function (link, index) {\n    return react_default.a.createElement(microlink_m["a" /* default */], {\n      key: index,\n      className: "mt-3",\n      url: link\n    });\n  });\n  var mentionedUsers = mentions.filter(function (username) {\n    return roomUserNames.includes(username);\n  });\n  urlMatches.forEach(function (link) {\n    var _insertTextAtIndices;\n\n    var startIndex = text.indexOf(link);\n    var endIndex = startIndex + link.length;\n    messageText = insertTextAtIndices(messageText, (_insertTextAtIndices = {}, MessageText_defineProperty(_insertTextAtIndices, startIndex, "<a class=\\"embedded-link\\" href=\\"".concat(link, "\\" target=\\"_blank\\">")), MessageText_defineProperty(_insertTextAtIndices, endIndex, \'</a>\'), _insertTextAtIndices));\n  });\n  mentionedUsers.forEach(function (user) {\n    var _insertTextAtIndices2;\n\n    var startIndex = messageText.indexOf(user);\n    var endIndex = startIndex + user.length;\n    var isMe = currentUserName === user.substring(1) ? \'danger\' : \'info\';\n    messageText = insertTextAtIndices(messageText, (_insertTextAtIndices2 = {}, MessageText_defineProperty(_insertTextAtIndices2, startIndex, "<span class=\\"badge badge-pill badge-".concat(isMe, "\\">")), MessageText_defineProperty(_insertTextAtIndices2, endIndex, \'</span>\'), _insertTextAtIndices2));\n  });\n  return react_default.a.createElement("div", null, react_default.a.createElement("p", {\n    dangerouslySetInnerHTML: {\n      __html: messageText\n    }\n  }), LinkPreviews);\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Spinner.js\nvar Spinner = __webpack_require__(655);\n\n// CONCATENATED MODULE: ./src/components/MessageList/NoMessages.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction NoMessages(props) {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      isLoading = _useSelector.isLoading;\n\n  return react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "no-messages"\n  }, !isLoading && react_default.a.createElement("i", {\n    className: "material-icons md-48"\n  }, "forum"), react_default.a.createElement("p", null, props.title), isLoading && react_default.a.createElement(Spinner["a" /* default */], {\n    animation: "border",\n    variant: "primary"\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction MessageList(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      roomUsers = _useSelector.roomUsers,\n      typingUsers = _useSelector.typingUsers,\n      messages = _useSelector.messages,\n      isLoading = _useSelector.isLoading;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var messageNode = Object(react["useRef"])(null);\n  var roomId = match.params.roomId;\n  var roomNotFound = !roomUsers.length;\n  Object(react["useEffect"])(function () {\n    dispatch(rooms_enterRoom(roomId));\n  }, [roomId]);\n  Object(react["useEffect"])(function () {\n    messageNode.current.scrollIntoView();\n  }, [isLoading]);\n  Object(react["useEffect"])(function () {\n    if (document.hasFocus() && roomId) messageNode.current.scrollIntoView({\n      behavior: \'smooth\'\n    });\n  }, [messages, typingUsers]);\n\n  var onShowMessage = function onShowMessage() {\n    if (messages.length === 0 && !isLoading && !roomNotFound) return react_default.a.createElement(NoMessages, {\n      title: "B\\u1EAFt \\u0111\\u1EA7u cu\\u1ED9c tr\\xF2 chuy\\u1EC7n m\\u1EDBi..."\n    });else if (isLoading) return react_default.a.createElement(NoMessages, {\n      title: "\\u0110ang t\\u1EA3i, \\u0111\\u1EE3i ch\\xFAt !"\n    });else if (!isLoading && roomNotFound) return react_default.a.createElement(NoMessages, {\n      title: "404 Not Found :("\n    });\n    return messages.map(function (message) {\n      var id = message.id,\n          sender = message.sender,\n          updatedAt = message.updatedAt,\n          parts = message.parts;\n      return react_default.a.createElement(Message, {\n        key: id,\n        userType: sender.id === currentUser.id && \'me\',\n        userName: sender.name,\n        updatedAt: updatedAt\n      }, parts.map(function (part, index) {\n        var partType = part.partType,\n            payload = part.payload;\n        if (partType === \'inline\') return react_default.a.createElement(MessageText, {\n          key: index,\n          currentUserName: currentUser.name,\n          text: payload.content\n        });\n        if (Date.now() > Date.parse(payload._expiration)) payload._fetchNewDownloadURL();\n        return react_default.a.createElement("a", {\n          key: index,\n          href: payload._downloadURL,\n          target: "_blank"\n        }, react_default.a.createElement("img", {\n          className: "w-25 rounded ".concat(index !== parts.length - 1 && \'mb-3\'),\n          src: payload._downloadURL,\n          alt: "attachment"\n        }));\n      }));\n    });\n  };\n\n  var onShowTypingUsers = function onShowTypingUsers() {\n    return typingUsers.map(function (user) {\n      var id = user.id,\n          name = user.name;\n      if (currentUser.id === id) return react_default.a.createElement("div", null);\n      return react_default.a.createElement(Message, {\n        key: id,\n        userType: "typing",\n        userName: name\n      }, react_default.a.createElement("div", {\n        className: "wave"\n      }, react_default.a.createElement("span", {\n        className: "dot"\n      }), "\\xA0", react_default.a.createElement("span", {\n        className: "dot"\n      }), "\\xA0", react_default.a.createElement("span", {\n        className: "dot"\n      })));\n    });\n  };\n\n  return react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, onShowMessage(), typingUsers.length > 0 && onShowTypingUsers(), react_default.a.createElement("div", {\n    ref: messageNode\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Screen/Chat.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\n\n\nfunction Chat(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      screen = _useSelector.screen,\n      rooms = _useSelector.rooms,\n      isLoading = _useSelector.isLoading,\n      videoChat = _useSelector.videoChat;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var chatNode = Object(react["useRef"])(null);\n  Object(react["useEffect"])(function () {\n    dispatch(rooms_connect(screen.userId));\n  }, []);\n  Object(react["useEffect"])(function () {\n    chatNode.current.scrollIntoView();\n  }, [isLoading]);\n  return react_default.a.createElement("div", {\n    className: "app"\n  }, react_default.a.createElement(Navigation, null), react_default.a.createElement(RoomList, {\n    match: match\n  }), react_default.a.createElement("div", {\n    className: "main"\n  }, react_default.a.createElement("div", {\n    className: "chat",\n    ref: chatNode\n  }, react_default.a.createElement(TopBar, null), react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement(react_router["d" /* Switch */], null, react_default.a.createElement(react_router["b" /* Route */], {\n    exact: true,\n    path: match.path\n  }, isLoading ? react_default.a.createElement(NoMessages, {\n    title: "\\u0110ang k\\u1EBFt n\\u1ED1i m\\xE1y ch\\u1EE7"\n  }) : react_default.a.createElement(NoMessages, {\n    title: "Ch\\u1ECDn ph\\xF2ng \\u0111\\u1EC3 b\\u1EAFt \\u0111\\u1EA7u chat n\\xE0o!"\n  })), rooms.map(function (room) {\n    return room.id && react_default.a.createElement(react_router["b" /* Route */], {\n      key: room.id,\n      path: "".concat(match.path, "/:roomId"),\n      component: MessageList\n    });\n  })))), react_default.a.createElement(SendMessage, null)), videoChat.show && react_default.a.createElement(VideoChat, null)), react_default.a.createElement(UserList, {\n    match: match\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Screen/NotFound.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction NotFound() {\n  return react_default.a.createElement("div", {\n    className: "not-found"\n  }, react_default.a.createElement("svg", {\n    width: "380px",\n    height: "500px",\n    viewBox: "0 0 837 1045"\n  }, react_default.a.createElement("g", {\n    id: "Page-1",\n    stroke: "none",\n    strokeWidth: 1,\n    fill: "none",\n    fillRule: "evenodd"\n  }, react_default.a.createElement("path", {\n    d: "M353,9 L626.664028,170 L626.664028,487 L353,642 L79.3359724,487 L79.3359724,170 L353,9 Z",\n    id: "Polygon-1",\n    stroke: "#007FB2",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M78.5,529 L147,569.186414 L147,648.311216 L78.5,687 L10,648.311216 L10,569.186414 L78.5,529 Z",\n    id: "Polygon-2",\n    stroke: "#EF4A5B",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M773,186 L827,217.538705 L827,279.636651 L773,310 L719,279.636651 L719,217.538705 L773,186 Z",\n    id: "Polygon-3",\n    stroke: "#795D9C",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M639,529 L773,607.846761 L773,763.091627 L639,839 L505,763.091627 L505,607.846761 L639,529 Z",\n    id: "Polygon-4",\n    stroke: "#F2773F",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M281,801 L383,861.025276 L383,979.21169 L281,1037 L179,979.21169 L179,861.025276 L281,801 Z",\n    id: "Polygon-5",\n    stroke: "#36B455",\n    strokeWidth: 6\n  }))), react_default.a.createElement("div", {\n    className: "not-found-content"\n  }, react_default.a.createElement("h1", null, "404"), react_default.a.createElement("p", null, "Kh\\xF4ng t\\xECm th\\u1EA5y trang b\\u1EA1n y\\xEAu c\\u1EA7u"), react_default.a.createElement("div", {\n    className: "buttons-con"\n  }, react_default.a.createElement("div", {\n    className: "action-link-wrap"\n  }, react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/"\n  }, "V\\u1EC1 trang ch\\u1EE7"), react_default.a.createElement("a", {\n    href: "https://github.com/18520339",\n    target: "_blank"\n  }, "Li\\xEAn h\\u1EC7")))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Screen/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n/* eslint-enable */\n// EXTERNAL MODULE: ./src/scss/style.scss\nvar style = __webpack_require__(643);\n\n// CONCATENATED MODULE: ./src/components/App/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction App() {\n  var screen = Object(es["d" /* useSelector */])(function (state) {\n    return state.screen;\n  });\n  var currentScreen = screen.currentScreen === \'SignIn\' ? SignIn : Chat;\n  return react_default.a.createElement(react_router_dom["a" /* HashRouter */], null, react_default.a.createElement(react_router["d" /* Switch */], null, react_default.a.createElement(react_router["a" /* Redirect */], {\n    exact: true,\n    from: "/",\n    to: "/room"\n  }), react_default.a.createElement(react_router["b" /* Route */], {\n    path: "/room",\n    component: currentScreen\n  }), react_default.a.createElement(react_router["b" /* Route */], {\n    path: "/sign-up",\n    component: SignUp\n  }), react_default.a.createElement(react_router["b" /* Route */], {\n    component: NotFound\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/material-design-icons/iconfont/material-icons.css\nvar material_icons = __webpack_require__(647);\n\n// EXTERNAL MODULE: ./node_modules/bootstrap/dist/css/bootstrap.min.css\nvar bootstrap_min = __webpack_require__(648);\n\n// EXTERNAL MODULE: ./node_modules/bootstrap/dist/js/bootstrap.bundle.min.js\nvar bootstrap_bundle_min = __webpack_require__(649);\n\n// EXTERNAL MODULE: ./node_modules/jquery/dist/jquery.js\nvar jquery = __webpack_require__(279);\n\n// CONCATENATED MODULE: ./src/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\nreact_dom_default.a.render(react_default.a.createElement(es["a" /* Provider */], {\n  store: reducers\n}, react_default.a.createElement(App, null)), document.getElementById(\'root\'));\n/* eslint-enable *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL2luZGV4Lm1qcz81MDFjIiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy9jaGF0a2l0L2luZGV4LmpzeD9mMzE4Iiwid2VicGFjazovLy8uL3NyYy9jb25zdGFudHMvaW5kZXguanN4Pzg2ZjQiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL3NjcmVlbi9pbmRleC5qc3g/MTAzYyIsIndlYnBhY2s6Ly8vLi9zcmMvcmVkdWNlcnMvdmlkZW9DaGF0L2luZGV4LmpzeD84MjVkIiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy9tZXNzYWdlcy9tZXNzYWdlcy5qc3g/MTBjYyIsIndlYnBhY2s6Ly8vLi9zcmMvcmVkdWNlcnMvbWVzc2FnZXMvaXNMb2FkaW5nLmpzeD8wYWFkIiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy9tZXNzYWdlcy9pbmRleC5qc3g/ODc3NCIsIndlYnBhY2s6Ly8vLi9zcmMvcmVkdWNlcnMvdXNlcnMvY3VycmVudFVzZXIuanN4PzU2MGMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL3VzZXJzL3R5cGluZ1VzZXJzLmpzeD81MDdjIiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy91c2Vycy9yb29tVXNlcnMuanN4P2RjMTIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL3VzZXJzL2luZGV4LmpzeD85MzY2Iiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy9yb29tcy9yb29tcy5qc3g/NWE2ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcmVkdWNlcnMvcm9vbXMvcm9vbUFjdGl2ZS5qc3g/MzA3ZCIsIndlYnBhY2s6Ly8vLi9zcmMvcmVkdWNlcnMvcm9vbXMvaW5kZXguanN4P2Y4MDUiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL2NvbnRyb2xzL3Jvb21GaWx0ZXIuanN4PzAzMzkiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL2NvbnRyb2xzL3VzZXJTb3J0LmpzeD9iNzE5Iiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy9jb250cm9scy9zaG93VXNlcnNCYXIuanN4PzRiNWIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL2NvbnRyb2xzL3Nob3dQaWNrZXIuanN4P2UxNDAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JlZHVjZXJzL2NvbnRyb2xzL2luZGV4LmpzeD9hMjE5Iiwid2VicGFjazovLy8uL3NyYy9yZWR1Y2Vycy9pbmRleC5qc3g/OWNhMSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Gb3JtQ29udHJvbHMvQXV0aElucHV0LmpzeD9lMDhlIiwid2VicGFjazovLy8uL3NyYy9mdW5jdGlvbnMvaW5kZXguanN4P2E5MzYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FjdGlvbnMvc2NyZWVuLmpzeD9kZmU0Iiwid2VicGFjazovLy8uL3NyYy9hY3Rpb25zL21lc3NhZ2VzLmpzeD80ZDNhIiwid2VicGFjazovLy8uL3NyYy9hY3Rpb25zL3Jvb21zLmpzeD85ZmMyIiwid2VicGFjazovLy8uL3NyYy9hY3Rpb25zL2NvbnRyb2xzLmpzeD8xYjZmIiwid2VicGFjazovLy8uL3NyYy9hY3Rpb25zL2luZGV4LmpzeD85ZjkzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0Zvcm1Db250cm9scy9EaWFsb2cuanN4P2RlZWUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvRm9ybUNvbnRyb2xzL1VwbG9hZEltYWdlLmpzeD9lMzZkIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0Zvcm1Db250cm9scy9TZW5kTWVzc2FnZS5qc3g/MzI3NiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Gb3JtQ29udHJvbHMvRmlsdGVyUm9vbXMuanN4P2ZjZTkiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvRm9ybUNvbnRyb2xzL1NvcnRNZW1iZXJzLmpzeD8zMTZjIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0Zvcm1Db250cm9scy9DcmVhdGVSb29tLmpzeD8wMzhlIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0Zvcm1Db250cm9scy9pbmRleC5qc3g/NzQ1NSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9TY3JlZW4vU2lnbkluLmpzeD83YzgzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1NjcmVlbi9TaWduVXAuanN4P2IyODAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvTmF2aWdhdGlvbi9pbmRleC5qc3g/ODU1MSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9BdmF0YXIvaW5kZXguanN4PzY4MTgiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvVG9wQmFyL2luZGV4LmpzeD9iMjNlIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1ZpZGVvQ2hhdC9Mb2NhbE9wdGlvbnMuanN4PzEwNDUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvVmlkZW9DaGF0L09wdGlvbnMuanN4PzU4Y2EiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvVmlkZW9DaGF0L1N0YXR1cy5qc3g/NjkxNSIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9WaWRlb0NoYXQvaW5kZXguanN4PzFlNzEiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvVXNlckxpc3QvaW5kZXguanN4PzJiMmUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvUm9vbUxpc3QvUm9vbUJyaWVmLmpzeD80NzU2Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL1Jvb21MaXN0L2luZGV4LmpzeD9kN2FiIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL01lc3NhZ2VMaXN0L01lc3NhZ2UuanN4PzcxYjkiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvTWVzc2FnZUxpc3QvTWVzc2FnZVRleHQuanN4PzY2YmMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvTWVzc2FnZUxpc3QvTm9NZXNzYWdlcy5qc3g/ZDNkOCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9NZXNzYWdlTGlzdC9pbmRleC5qc3g/ZTI3YiIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9TY3JlZW4vQ2hhdC5qc3g/ZDFiOCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9TY3JlZW4vTm90Rm91bmQuanN4PzM1MGQiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvU2NyZWVuL2luZGV4LmpzeD80OWY0Iiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL0FwcC9pbmRleC5qc3g/ODhlNyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanN4P2VkMTIiXSwibmFtZXMiOlsiaW5pdGlhbFN0YXRlIiwiQ2hhdGtpdCIsImluc3RhbmNlTG9jYXRvciIsImtleSIsImNoYXRraXQiLCJzdGF0ZSIsImFjdGlvbiIsInR5cGUiLCJTSUdOX0lOIiwiU0lHTl9PVVQiLCJOT1RfRk9VTkQiLCJDT05ORUNUIiwiVVBEQVRFX1JPT01TIiwiR0VUX1JPT01TIiwiRU5URVJfUk9PTSIsIkZJTFRFUl9ST09NUyIsIlNPUlRfTUVNQkVSUyIsIlRPR0dMRV9VU0VSU19CQVIiLCJUT0dHTEVfQ0FMTCIsIlRPR0dMRV9QSUNLRVIiLCJBRERfRU1PSkkiLCJPTl9NRVNTQUdFIiwiQ0xFQVJfTUVTU0FHRSIsIlVTRVJfU1RBUlRFRF9UWVBJTkciLCJVU0VSX1NUT1BFRF9UWVBJTkciLCJQUkVTRU5DRV9DSEFOR0VEIiwidXNlcklkIiwiY3VycmVudFNjcmVlbiIsInNjcmVlbiIsInNob3ciLCJjYW0iLCJ2aWRlb0NoYXQiLCJtZXNzYWdlcyIsIm1lc3NhZ2UiLCJpc0xvYWRpbmciLCJjdXJyZW50VXNlciIsInR5cGluZ1VzZXJzIiwidXNlciIsImZpbHRlciIsImlkIiwicm9vbVVzZXJzIiwicm9vbUFjdGl2ZSIsInVzZXJzIiwic29ydCIsImEiLCJwcmVzZW5jZSIsInJvb21zIiwibmFtZSIsInN0YXR1cyIsInJvb21GaWx0ZXIiLCJieSIsInZhbHVlIiwidXNlclNvcnQiLCJzaG93VXNlcnNCYXIiLCJzaG93UGlja2VyIiwicm9vdFJlZHVjZXIiLCJjb21iaW5lUmVkdWNlcnMiLCJzaW1wbGV3ZWJydGMiLCJyZWR1Y2VyIiwiY29tcG9zZUVuaGFuY2VyIiwid2luZG93IiwiX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fQ09NUE9TRV9fIiwiY29tcG9zZSIsInN0b3JlIiwiY3JlYXRlU3RvcmUiLCJhcHBseU1pZGRsZXdhcmUiLCJ0aHVuayIsIkF1dGhJbnB1dCIsInByb3BzIiwicGxhY2Vob2xkZXIiLCJpY29uIiwib25DaGFuZ2UiLCJldmVudCIsImFsZXJ0RXJyb3IiLCJ0aXRsZSIsImVyciIsImVycm9yIiwiZXJyb3JfZGVzY3JpcHRpb24iLCJpbmZvIiwiY29uc29sZSIsImxvZyIsImFsZXJ0Iiwic2lnblVwIiwiZW1haWwiLCJwYXNzd29yZCIsImRpc3BhdGNoIiwiZ2V0U3RhdGUiLCJIbWFjU0hBMSIsInRvU3RyaW5nIiwiYXZhdGFyVVJMIiwiY3JlYXRlVXNlciIsInRoZW4iLCJzaWduSW4iLCJnZXRVc2VyIiwic2lnbk91dCIsInR5cGluZ01lc3NhZ2UiLCJpc1R5cGluZ0luIiwicm9vbUlkIiwic2VuZE1lc3NhZ2UiLCJwYXJ0cyIsInNlbmRNdWx0aXBhcnRNZXNzYWdlIiwiY29ubmVjdCIsImNoYXRNYW5hZ2VyIiwiQ2hhdE1hbmFnZXIiLCJ0b2tlblByb3ZpZGVyIiwiVG9rZW5Qcm92aWRlciIsInVybCIsInRva2VuVXJsIiwib25Sb29tVXBkYXRlZCIsInJvb20iLCJpbmRleCIsImZpbmRJbmRleCIsInIiLCJ0eXBlcyIsImdldFJvb21zIiwiZ2V0Sm9pbmFibGVSb29tcyIsInVuam9pbmVkUm9vbXMiLCJlbnRlclJvb20iLCJzaG93Q2FsbCIsInJvb21TdWJzY3JpcHRpb25zIiwiY2FuY2VsIiwic3Vic2NyaWJlVG9Sb29tTXVsdGlwYXJ0IiwibWVzc2FnZUxpbWl0IiwiaG9va3MiLCJvbk1lc3NhZ2UiLCJzZXRSZWFkQ3Vyc29yIiwicG9zaXRpb24iLCJvblVzZXJTdGFydGVkVHlwaW5nIiwib25Vc2VyU3RvcHBlZFR5cGluZyIsIm9uUHJlc2VuY2VDaGFuZ2VkIiwicmVwbGFjZSIsImNyZWF0ZVJvb20iLCJpc1ByaXZhdGUiLCJhY2Nlc3NOZXdSb29tIiwiaGlzdG9yeSIsInB1c2hTdGF0ZSIsInRyaW0iLCJwdXNoIiwiY29udGVudCIsImFkZFVzZXJJZHMiLCJsZXJ0RXJyb3IiLCJmaWx0ZXJSb29tcyIsInNvcnRNZW1iZXJzIiwidG9nZ2xlVXNlcnNCYXIiLCJ0b2dnbGVDYWxsIiwidG9nZ2xlUGlja2VyIiwiYWRkRW1vamkiLCJlbW9qaSIsIkRpYWxvZyIsInVzZVN0YXRlIiwibW9kYWxTaG93Iiwic2V0TW9kYWxTaG93IiwiZGlzYWJsZWQiLCJjaGlsZHJlbiIsIm9uQ2xvc2VNb2RhbCIsIm9uU2hvd01vZGFsIiwib25TdWJtaXQiLCJwcmV2ZW50RGVmYXVsdCIsIlVwbG9hZEltYWdlIiwidXNlU2VsZWN0b3IiLCJ1c2VEaXNwYXRjaCIsInBpY3R1cmVzIiwic2V0UGljdHVyZXMiLCJzZXRNZXNzYWdlIiwib25Ecm9wIiwicGljdHVyZUZpbGVzIiwidGFyZ2V0IiwibGVuZ3RoIiwiZm9yRWFjaCIsInBpYyIsImZpbGUiLCJTZW5kTWVzc2FnZSIsImZpbHRlclVzZXJOYW1lcyIsInRva2VuIiwiaW5jbHVkZXMiLCJvblRvZ2dsZVBpY2tlciIsIm9uQWRkRW1vamkiLCJkYXRhUHJvdmlkZXIiLCJjb21wb25lbnQiLCJlbnRpdHkiLCJvdXRwdXQiLCJpdGVtIiwiZW1vamlJbmRleCIsInNlYXJjaCIsIm1hcCIsIm8iLCJjb2xvbnMiLCJuYXRpdmUiLCJGaWx0ZXJSb29tcyIsInJvb21OYW1lIiwidG9Mb3dlckNhc2UiLCJTb3J0TWVtYmVycyIsIkNyZWF0ZVJvb20iLCJmaXJzdE1lc3NhZ2UiLCJyb29tSW5mbyIsInNldFJvb21JbmZvIiwiU2lnbkluIiwidXNlckluZm8iLCJzZXRVc2VySW5mbyIsIlNpZ25VcCIsIk5hdmlnYXRpb24iLCJvblBvd2VyIiwiQXZhdGFyIiwidG9vbHRpcCIsInNpemUiLCJhdmF0YXJTaXplIiwiYXZhdGFyQVBJIiwib3B0aW9ucyIsImV5ZXMiLCJleWVicm93IiwibW91dGgiLCJPYmplY3QiLCJrZXlzIiwicmVkdWNlIiwicmVzIiwiVG9wQmFyIiwiYXZhdGFyVHlwZSIsIm9uUGhvbmVDaGF0Iiwib25WaWRlb0NoYXQiLCJvblNob3dNZW1iZXJzIiwiTG9jYWxPcHRpb25zIiwiaXNNdXRlZCIsImlzUGF1c2VkIiwibXV0ZSIsInVubXV0ZSIsInJlc3VtZVZpZGVvIiwicGF1c2VWaWRlbyIsIk9wdGlvbnMiLCJsb2NhbFZpZGVvcyIsImxvY2FsU2NyZWVuIiwicmVtb3ZlIiwiZ2V0VXNlck1lZGlhIiwic3RvcFNoYXJpbmciLCJnZXREaXNwbGF5TWVkaWEiLCJTdGF0dXMiLCJvbkNsb3NlQ2FsbCIsIlZpZGVvQ2hhdCIsIm9uVW5sb2FkIiwiU1dSVENfQ09ORklHX1VSTCIsImxvY2FsTWVkaWEiLCJyZW1vdGVNZWRpYSIsInJlbW90ZVZpZGVvcyIsIm0iLCJraW5kIiwic2hhcmVkIiwibG9jYWxTY3JlZW5zIiwic2NyZWVuQ2FwdHVyZSIsIlVzZXJMaXN0IiwibWF0Y2giLCJjcmVhdGVkQnlVc2VySWQiLCJiIiwiY3JlYXRlZEF0IiwicGF0aCIsImNyZWF0ZWREYXRlIiwiRGF0ZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsInllYXIiLCJtb250aCIsIlJvb21CcmllZiIsInNlbmRlciIsInVwZGF0ZWRfYXQiLCJsYXN0TWVzc2FnZSIsInNldExhc3RNZXNzYWdlIiwiZmV0Y2hMYXN0TWVzc2FnZSIsImZldGNoTXVsdGlwYXJ0TWVzc2FnZXMiLCJsaW1pdCIsInVzZXJfaWQiLCJ3ZWVrZGF5IiwiZGF5Iiwib25TaG93TGFzdE1lc3NhZ2UiLCJ1c2VFZmZlY3QiLCJSb29tTGlzdCIsIm9uVW5yZWFkQ291bnQiLCJ1bnJlYWRDb3VudCIsImNvbG9yIiwicm9vbVN0YXR1cyIsImluZGV4T2YiLCJ1c2VySWRzIiwidW5yZWFkIiwiYWN0aXZlIiwiaXNKb2luZWQiLCJmaW5kIiwiTWVzc2FnZSIsInVzZXJUeXBlIiwidXNlck5hbWUiLCJ1cGRhdGVkQXQiLCJjaGlsZCIsInRvTG9jYWxlVGltZVN0cmluZyIsImhvdXIiLCJtaW51dGUiLCJNZXNzYWdlVGV4dCIsImN1cnJlbnRVc2VyTmFtZSIsInRleHQiLCJpbnNlcnRUZXh0QXRJbmRpY2VzIiwib2JqIiwiY2hhcmFjdGVyIiwibWVzc2FnZVRleHQiLCJyb29tVXNlck5hbWVzIiwidXJsTWF0Y2hlcyIsIm1lbnRpb25zIiwiTGlua1ByZXZpZXdzIiwibGluayIsIm1lbnRpb25lZFVzZXJzIiwidXNlcm5hbWUiLCJzdGFydEluZGV4IiwiZW5kSW5kZXgiLCJpc01lIiwic3Vic3RyaW5nIiwiX19odG1sIiwiTm9NZXNzYWdlcyIsIk1lc3NhZ2VMaXN0IiwibWVzc2FnZU5vZGUiLCJ1c2VSZWYiLCJwYXJhbXMiLCJyb29tTm90Rm91bmQiLCJjdXJyZW50Iiwic2Nyb2xsSW50b1ZpZXciLCJkb2N1bWVudCIsImhhc0ZvY3VzIiwiYmVoYXZpb3IiLCJvblNob3dNZXNzYWdlIiwicGFydCIsInBhcnRUeXBlIiwicGF5bG9hZCIsIm5vdyIsInBhcnNlIiwiX2V4cGlyYXRpb24iLCJfZmV0Y2hOZXdEb3dubG9hZFVSTCIsIl9kb3dubG9hZFVSTCIsIm9uU2hvd1R5cGluZ1VzZXJzIiwiQ2hhdCIsImNoYXROb2RlIiwiTm90Rm91bmQiLCJBcHAiLCJSZWFjdERPTSIsInJlbmRlciIsImdldEVsZW1lbnRCeUlkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNFQUFzRSxjQUFjOztBQUV4Qjs7QUFFNUQ7OztBQ1pBOztBQUNBO0FBRUE7QUFDQTtBQUVBLElBQU1BLFlBQVksR0FBRyxJQUFJQyxhQUFKLENBQVk7QUFBRUMsaUJBQWUsRUFBZkEs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QyxHQUFULEdBQWU7QUFDN0IsTUFBTWpULE1BQU0sR0FBR21JLGlDQUFXLENBQUMsVUFBQTFKLEtBQUs7QUFBQSxXQUFJQSxLQUFLLENBQUN1QixNQUFWO0FBQUEsR0FBTixDQUExQjtBQUNBLE1BQU1ELGFBQWEsR0FBR0MsTUFBTSxDQUFDRCxhQUFQLEtBQXlCLFFBQXpCLEdBQW9DeUssTUFBcEMsR0FBNkNzSSxJQUFuRTtBQUNBLFNBQ0MsOEJBQUMsc0NBQUQsUUFDQyw4QkFBQyw4QkFBRCxRQUNDLDhCQUFDLGdDQUFEO0FBQVUsU0FBSyxNQUFmO0FBQWdCLFFBQUksRUFBQyxHQUFyQjtBQUF5QixNQUFFLEVBQUM7QUFBNUIsSUFERCxFQUVDLDhCQUFDLDZCQUFEO0FBQU8sUUFBSSxFQUFDLE9BQVo7QUFBb0IsYUFBUyxFQUFFL1M7QUFBL0IsSUFGRCxFQUdDLDhCQUFDLDZCQUFEO0FBQU8sUUFBSSxFQUFDLFVBQVo7QUFBdUIsYUFBUyxFQUFFNEssTUFBTUE7QUFBeEMsSUFIRCxFQUlDLDhCQUFDLDZCQUFEO0FBQU8sYUFBUyxFQUFFcUksUUFBUUE7QUFBMUIsSUFKRCxDQURELENBREQ7QUFVQTtBQUVELG1COzs7Ozs7Ozs7Ozs7OztBQ3pCQTs7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBRSxtQkFBUSxDQUFDQyxNQUFULENBQ0MsOEJBQUMsc0JBQUQ7QUFBVSxPQUFLLEVBQUVoUixRQUFLQTtBQUF0QixHQUNDLDhCQUFDLEdBQUQsT0FERCxDQURELEVBSUM4UCxRQUFRLENBQUNtQixjQUFULENBQXdCLE1BQXhCLENBSkQ7QUFPQSIsImZpbGUiOiI2NTAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cblxuY29uc3QgdG9rZW5VcmwgPSAnaHR0cHM6Ly91czEucHVzaGVycGxhdGZvcm0uaW8vc2VydmljZXMvY2hhdGtpdF90b2tlbl9wcm92aWRlci92MS9jYWY0YTU4My04MTk0LTQ1MTAtYWRiZS1jOTg3OWYwNjBmZmMvdG9rZW4nO1xuY29uc3QgaW5zdGFuY2VMb2NhdG9yID0gJ3YxOnVzMTpjYWY0YTU4My04MTk0LTQ1MTAtYWRiZS1jOTg3OWYwNjBmZmMnO1xuY29uc3Qga2V5ID0gJzdlYTVlOTg2LTcyZmUtNGNlYy1iYTBjLTRkMDcyNTJmNWY1ZjpMVUI5Zlpaamc3dmRwYUZabEpFUEJiWmZLQWU3c1BMci9maHRBMStjM0NvPSc7XG5cbmNvbnN0IFNXUlRDX0FQSV9LRVkgPSAnOTcwYjRlNWEyM2U3YzQ0MDAzMjdhNDVkJztcbmNvbnN0IFNXUlRDX0NPTkZJR19VUkwgPSBgaHR0cHM6Ly9hcGkuc2ltcGxld2VicnRjLmNvbS9jb25maWcvZ3Vlc3QvJHtTV1JUQ19BUElfS0VZfWBcblxuZXhwb3J0IHsgdG9rZW5VcmwsIGluc3RhbmNlTG9jYXRvciwga2V5LCBTV1JUQ19DT05GSUdfVVJMIH07XG5cbi8qIGVzbGludC1lbmFibGUgKi9cbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgQ2hhdGtpdCBmcm9tICdAcHVzaGVyL2NoYXRraXQtc2VydmVyJztcclxuaW1wb3J0IHsgaW5zdGFuY2VMb2NhdG9yLCBrZXkgfSBmcm9tICcuLi8uLi9jb25maWcnO1xyXG5cclxuY29uc3QgaW5pdGlhbFN0YXRlID0gbmV3IENoYXRraXQoeyBpbnN0YW5jZUxvY2F0b3IsIGtleSB9KTtcclxuY29uc3QgY2hhdGtpdCA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0ZGVmYXVsdDpcclxuXHRcdFx0cmV0dXJuIHN0YXRlO1xyXG5cdH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNoYXRraXQ7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5leHBvcnQgY29uc3QgU0lHTl9JTiA9ICdTSUdOX0lOJztcclxuZXhwb3J0IGNvbnN0IFNJR05fT1VUID0gJ1NJR05fT1VUJztcclxuZXhwb3J0IGNvbnN0IE5PVF9GT1VORCA9ICdOT1RfRk9VTkQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IENPTk5FQ1QgPSAnQ09OTkVDVCc7XHJcbmV4cG9ydCBjb25zdCBVUERBVEVfUk9PTVMgPSAnVVBEQVRFX1JPT01TJztcclxuZXhwb3J0IGNvbnN0IEdFVF9ST09NUyA9ICdHRVRfUk9PTVMnO1xyXG5leHBvcnQgY29uc3QgRU5URVJfUk9PTSA9ICdFTlRFUl9ST09NJztcclxuXHJcbmV4cG9ydCBjb25zdCBGSUxURVJfUk9PTVMgPSAnRklMVEVSX1JPT01TJztcclxuZXhwb3J0IGNvbnN0IFNPUlRfTUVNQkVSUyA9ICdTT1JUX01FTUJFUlMnO1xyXG5leHBvcnQgY29uc3QgVE9HR0xFX1VTRVJTX0JBUiA9ICdUT0dHTEVfVVNFUlNfQkFSJztcclxuZXhwb3J0IGNvbnN0IFRPR0dMRV9DQUxMID0gJ1RPR0dMRV9DQUxMJztcclxuZXhwb3J0IGNvbnN0IFRPR0dMRV9QSUNLRVIgPSAnVE9HR0xFX1BJQ0tFUic7XHJcbmV4cG9ydCBjb25zdCBBRERfRU1PSkkgPSAnQUREX0VNT0pJJztcclxuXHJcbmV4cG9ydCBjb25zdCBPTl9NRVNTQUdFID0gJ09OX01FU1NBR0UnO1xyXG5leHBvcnQgY29uc3QgQ0xFQVJfTUVTU0FHRSA9ICdDTEVBUl9NRVNTQUdFJztcclxuZXhwb3J0IGNvbnN0IFVTRVJfU1RBUlRFRF9UWVBJTkcgPSAnVVNFUl9TVEFSVEVEX1RZUElORyc7XHJcbmV4cG9ydCBjb25zdCBVU0VSX1NUT1BFRF9UWVBJTkcgPSAnVVNFUl9TVE9QRURfVFlQSU5HJztcclxuZXhwb3J0IGNvbnN0IFBSRVNFTkNFX0NIQU5HRUQgPSAnUFJFU0VOQ0VfQ0hBTkdFRCc7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgeyBTSUdOX0lOLCBTSUdOX09VVCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7IHVzZXJJZDogJycsIGN1cnJlbnRTY3JlZW46ICdTaWduSW4nIH07XHJcbmNvbnN0IHNjcmVlbiA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0Y2FzZSBTSUdOX0lOOlxyXG5cdFx0XHRyZXR1cm4geyB1c2VySWQ6IGFjdGlvbi51c2VySWQsIGN1cnJlbnRTY3JlZW46ICdDaGF0JyB9O1xyXG5cdFx0Y2FzZSBTSUdOX09VVDpcclxuXHRcdFx0cmV0dXJuIHsgdXNlcklkOiAnJywgY3VycmVudFNjcmVlbjogJ1NpZ25JbicgfTtcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBzY3JlZW47XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgeyBUT0dHTEVfQ0FMTCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7IHNob3c6IGZhbHNlLCBjYW06IGZhbHNlIH07XHJcbmNvbnN0IHZpZGVvQ2hhdCA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0Y2FzZSBUT0dHTEVfQ0FMTDpcclxuXHRcdFx0Y29uc3Qgc2hvdyA9ICFzdGF0ZS5zaG93O1xyXG5cdFx0XHRjb25zdCBjYW0gPSBhY3Rpb24uY2FtO1xyXG5cdFx0XHRyZXR1cm4geyAuLi5zdGF0ZSwgc2hvdywgY2FtIH07XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdmlkZW9DaGF0O1xyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IHsgT05fTUVTU0FHRSwgQ0xFQVJfTUVTU0FHRSB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSBbXTtcclxuY29uc3QgbWVzc2FnZXMgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgT05fTUVTU0FHRTpcclxuXHRcdFx0cmV0dXJuIFsuLi5zdGF0ZSwgYWN0aW9uLm1lc3NhZ2VdO1xyXG5cdFx0Y2FzZSBDTEVBUl9NRVNTQUdFOlxyXG5cdFx0XHRyZXR1cm4gW107XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbWVzc2FnZXM7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgeyBHRVRfUk9PTVMsIENMRUFSX01FU1NBR0UsIE5PVF9GT1VORCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSB0cnVlO1xyXG5jb25zdCBpc0xvYWRpbmcgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgR0VUX1JPT01TOlxyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRjYXNlIENMRUFSX01FU1NBR0U6XHJcblx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0Y2FzZSBOT1RfRk9VTkQ6XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBpc0xvYWRpbmc7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5leHBvcnQgeyBkZWZhdWx0IGFzIG1lc3NhZ2VzIH0gZnJvbSAnLi9tZXNzYWdlcyc7XHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgaXNMb2FkaW5nIH0gZnJvbSAnLi9pc0xvYWRpbmcnO1xyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IHsgQ09OTkVDVCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7fTtcclxuY29uc3QgY3VycmVudFVzZXIgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgQ09OTkVDVDpcclxuXHRcdFx0cmV0dXJuIGFjdGlvbi5jdXJyZW50VXNlcjtcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjdXJyZW50VXNlcjtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IFVTRVJfU1RBUlRFRF9UWVBJTkcsIFVTRVJfU1RPUEVEX1RZUElORyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSBbXTtcclxuY29uc3QgdHlwaW5nVXNlcnMgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgVVNFUl9TVEFSVEVEX1RZUElORzpcclxuXHRcdFx0cmV0dXJuIFsuLi5zdGF0ZSwgYWN0aW9uLnVzZXJdO1xyXG5cdFx0Y2FzZSBVU0VSX1NUT1BFRF9UWVBJTkc6XHJcblx0XHRcdHJldHVybiBzdGF0ZS5maWx0ZXIodXNlciA9PiB1c2VyLmlkICE9PSBhY3Rpb24udXNlci5pZCk7XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdHlwaW5nVXNlcnM7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgeyBFTlRFUl9ST09NLCBQUkVTRU5DRV9DSEFOR0VEIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJztcclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZSA9IFtdO1xyXG5jb25zdCByb29tVXNlcnMgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgRU5URVJfUk9PTTpcclxuXHRcdFx0cmV0dXJuIGFjdGlvbi5yb29tQWN0aXZlLnVzZXJzO1xyXG5cdFx0Y2FzZSBQUkVTRU5DRV9DSEFOR0VEOlxyXG5cdFx0XHRyZXR1cm4gYWN0aW9uLnJvb21BY3RpdmUudXNlcnMuc29ydChhID0+IHtcclxuXHRcdFx0XHRpZiAoYS5wcmVzZW5jZS5zdGF0ZSA9PT0gJ29ubGluZScpIHJldHVybiAtMTtcclxuXHRcdFx0XHRlbHNlIHJldHVybiAxO1xyXG5cdFx0XHR9KTtcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCByb29tVXNlcnM7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5leHBvcnQgeyBkZWZhdWx0IGFzIGN1cnJlbnRVc2VyIH0gZnJvbSAnLi9jdXJyZW50VXNlcic7XHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdHlwaW5nVXNlcnMgfSBmcm9tICcuL3R5cGluZ1VzZXJzJztcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyByb29tVXNlcnMgfSBmcm9tICcuL3Jvb21Vc2Vycyc7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgeyBHRVRfUk9PTVMsIFVQREFURV9ST09NUyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSBbXTtcclxuY29uc3Qgcm9vbXMgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgR0VUX1JPT01TOlxyXG5cdFx0XHRyZXR1cm4gYWN0aW9uLnJvb21zO1xyXG5cdFx0Y2FzZSBVUERBVEVfUk9PTVM6XHJcblx0XHRcdHJldHVybiBhY3Rpb24ucm9vbXM7XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm9vbXM7XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgeyBFTlRFUl9ST09NIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJztcclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHt9O1xyXG5jb25zdCByb29tQWN0aXZlID0gKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pID0+IHtcclxuXHRzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XHJcblx0XHRjYXNlIEVOVEVSX1JPT006XHJcblx0XHRcdHJldHVybiBhY3Rpb24ucm9vbUFjdGl2ZTtcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCByb29tQWN0aXZlO1xyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuZXhwb3J0IHsgZGVmYXVsdCBhcyByb29tcyB9IGZyb20gJy4vcm9vbXMnO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIHJvb21BY3RpdmUgfSBmcm9tICcuL3Jvb21BY3RpdmUnO1xyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IHsgRklMVEVSX1JPT01TIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJztcclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHsgbmFtZTogJycsIHN0YXR1czogMCB9O1xyXG5jb25zdCByb29tRmlsdGVyID0gKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pID0+IHtcclxuXHRzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XHJcblx0XHRjYXNlIEZJTFRFUl9ST09NUzpcclxuXHRcdFx0dmFyIHsgbmFtZSwgc3RhdHVzIH0gPSBhY3Rpb247XHJcblx0XHRcdGlmIChzdGF0dXMgPT09IG51bGwpIHN0YXR1cyA9IHN0YXRlLnN0YXR1cztcclxuXHRcdFx0cmV0dXJuIHsgbmFtZSwgc3RhdHVzIH07XHJcblx0XHRkZWZhdWx0OlxyXG5cdFx0XHRyZXR1cm4gc3RhdGU7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm9vbUZpbHRlcjtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IFNPUlRfTUVNQkVSUyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7IGJ5OiAnc3RhdHVzJywgdmFsdWU6IDEgfTtcclxuY29uc3QgdXNlclNvcnQgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG5cdHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuXHRcdGNhc2UgU09SVF9NRU1CRVJTOlxyXG5cdFx0XHRjb25zdCB7IGJ5LCB2YWx1ZSB9ID0gYWN0aW9uO1xyXG5cdFx0XHRyZXR1cm4geyBieSwgdmFsdWUgfTtcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCB1c2VyU29ydDtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IFRPR0dMRV9VU0VSU19CQVIgfSBmcm9tICcuLi8uLi9jb25zdGFudHMnO1xyXG5cclxuY29uc3QgaW5pdGlhbFN0YXRlID0gZmFsc2U7XHJcbmNvbnN0IHNob3dVc2Vyc0JhciA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0Y2FzZSBUT0dHTEVfVVNFUlNfQkFSOlxyXG5cdFx0XHRyZXR1cm4gIXN0YXRlO1xyXG5cdFx0ZGVmYXVsdDpcclxuXHRcdFx0cmV0dXJuIHN0YXRlO1xyXG5cdH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHNob3dVc2Vyc0JhcjtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IEFERF9FTU9KSSwgVE9HR0xFX1BJQ0tFUiB9IGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSBmYWxzZTtcclxuY29uc3Qgc2hvd1BpY2tlciA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcblx0c3dpdGNoIChhY3Rpb24udHlwZSkge1xyXG5cdFx0Y2FzZSBBRERfRU1PSkk6XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdGNhc2UgVE9HR0xFX1BJQ0tFUjpcclxuXHRcdFx0cmV0dXJuICFzdGF0ZTtcclxuXHRcdGRlZmF1bHQ6XHJcblx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHR9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBzaG93UGlja2VyO1xyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuZXhwb3J0IHsgZGVmYXVsdCBhcyByb29tRmlsdGVyIH0gZnJvbSAnLi9yb29tRmlsdGVyJztcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VyU29ydCB9IGZyb20gJy4vdXNlclNvcnQnO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIHNob3dVc2Vyc0JhciB9IGZyb20gJy4vc2hvd1VzZXJzQmFyJztcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBzaG93UGlja2VyIH0gZnJvbSAnLi9zaG93UGlja2VyJztcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IGNvbWJpbmVSZWR1Y2VycywgY3JlYXRlU3RvcmUsIGNvbXBvc2UsIGFwcGx5TWlkZGxld2FyZSB9IGZyb20gJ3JlZHV4JztcclxuaW1wb3J0IHRodW5rIGZyb20gJ3JlZHV4LXRodW5rJztcclxuaW1wb3J0IHsgcmVkdWNlciB9IGZyb20gJ0BhbmR5ZXQvc2ltcGxld2VicnRjJztcclxuXHJcbmltcG9ydCBjaGF0a2l0IGZyb20gJy4vY2hhdGtpdCc7XHJcbmltcG9ydCBzY3JlZW4gZnJvbSAnLi9zY3JlZW4nO1xyXG5pbXBvcnQgdmlkZW9DaGF0IGZyb20gJy4vdmlkZW9DaGF0JztcclxuXHJcbmltcG9ydCB7IG1lc3NhZ2VzLCBpc0xvYWRpbmcgfSBmcm9tICcuL21lc3NhZ2VzJztcclxuaW1wb3J0IHsgY3VycmVudFVzZXIsIHR5cGluZ1VzZXJzLCByb29tVXNlcnMgfSBmcm9tICcuL3VzZXJzJztcclxuaW1wb3J0IHsgcm9vbXMsIHJvb21BY3RpdmUgfSBmcm9tICcuL3Jvb21zJztcclxuaW1wb3J0IHsgcm9vbUZpbHRlciwgdXNlclNvcnQsIHNob3dVc2Vyc0Jhciwgc2hvd1BpY2tlciB9IGZyb20gJy4vY29udHJvbHMnO1xyXG5cclxuY29uc3Qgcm9vdFJlZHVjZXIgPSBjb21iaW5lUmVkdWNlcnMoe1xyXG5cdHNpbXBsZXdlYnJ0YzogcmVkdWNlcixcclxuXHRjaGF0a2l0LFxyXG5cdHNjcmVlbixcclxuXHR2aWRlb0NoYXQsXHJcblx0bWVzc2FnZXMsXHJcblx0aXNMb2FkaW5nLFxyXG5cdGN1cnJlbnRVc2VyLFxyXG5cdHR5cGluZ1VzZXJzLFxyXG5cdHJvb21Vc2VycyxcclxuXHRyb29tcyxcclxuXHRyb29tQWN0aXZlLFxyXG5cdHJvb21GaWx0ZXIsXHJcblx0dXNlclNvcnQsXHJcblx0c2hvd1VzZXJzQmFyLFxyXG5cdHNob3dQaWNrZXJcclxufSk7XHJcblxyXG5jb25zdCBjb21wb3NlRW5oYW5jZXIgPSB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fQ09NUE9TRV9fIHx8IGNvbXBvc2U7XHJcbmNvbnN0IHN0b3JlID0gY3JlYXRlU3RvcmUoXHJcblx0cm9vdFJlZHVjZXIsXHJcblx0eyBzaW1wbGV3ZWJydGM6IHt9IH0sXHJcblx0Y29tcG9zZUVuaGFuY2VyKGFwcGx5TWlkZGxld2FyZSh0aHVuaykpXHJcbik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBzdG9yZTtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBdXRoSW5wdXQocHJvcHMpIHtcclxuXHRjb25zdCB7IHR5cGUsIGlkLCB2YWx1ZSwgcGxhY2Vob2xkZXIsIGljb24gfSA9IHByb3BzO1xyXG5cdGNvbnN0IG9uQ2hhbmdlID0gZXZlbnQgPT4gcHJvcHMub25DaGFuZ2UoZXZlbnQpO1xyXG5cdHJldHVybiAoXHJcblx0XHQ8ZGl2IGNsYXNzTmFtZT0nZm9ybS1ncm91cCc+XHJcblx0XHRcdDxpbnB1dFxyXG5cdFx0XHRcdHR5cGU9e3R5cGV9XHJcblx0XHRcdFx0bmFtZT17dHlwZX1cclxuXHRcdFx0XHRpZD17aWR9XHJcblx0XHRcdFx0Y2xhc3NOYW1lPSdmb3JtLWNvbnRyb2wnXHJcblx0XHRcdFx0dmFsdWU9e3ZhbHVlfVxyXG5cdFx0XHRcdHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cclxuXHRcdFx0XHRvbkNoYW5nZT17b25DaGFuZ2V9XHJcblx0XHRcdFx0cmVxdWlyZWRcclxuXHRcdFx0Lz5cclxuXHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBpY29uJz5cclxuXHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zJz57aWNvbn08L2k+XHJcblx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuZXhwb3J0IGNvbnN0IGFsZXJ0RXJyb3IgPSAodGl0bGUsIGVycikgPT4ge1xyXG5cdHRyeSB7XHJcblx0XHR2YXIgZXJyb3IgPSBlcnIuZXJyb3JfZGVzY3JpcHRpb25cclxuXHRcdFx0PyBlcnIuZXJyb3JfZGVzY3JpcHRpb25cclxuXHRcdFx0OiBlcnIuaW5mby5lcnJvcl9kZXNjcmlwdGlvbjtcclxuXHR9IGNhdGNoIHtcclxuXHRcdGVycm9yID0gZXJyLmVycm9yO1xyXG5cdH1cclxuXHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdGFsZXJ0KHRpdGxlICsgJzogJyArIGVycm9yKTtcclxufTtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IGtleSB9IGZyb20gJy4uL2NvbmZpZyc7XHJcbmltcG9ydCB7IFNJR05fSU4sIFNJR05fT1VUIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcclxuXHJcbmltcG9ydCB7IEhtYWNTSEExIH0gZnJvbSAnY3J5cHRvLWpzJztcclxuaW1wb3J0IHsgYWxlcnRFcnJvciB9IGZyb20gJy4uL2Z1bmN0aW9ucyc7XHJcblxyXG5leHBvcnQgY29uc3Qgc2lnblVwID0gKG5hbWUsIGVtYWlsLCBwYXNzd29yZCkgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG5cdGNvbnN0IGNoYXRraXQgPSBnZXRTdGF0ZSgpLmNoYXRraXQ7XHJcblx0Y29uc3QgaWQgPSBIbWFjU0hBMShlbWFpbCArICdAIT8jPycgKyBwYXNzd29yZCwga2V5KS50b1N0cmluZygpO1xyXG5cdGNvbnN0IGF2YXRhclVSTCA9IGBodHRwczovL2F2YXRhcnMuZGljZWJlYXIuY29tL3YyL2F2YXRhYWFycy8ke25hbWV9LnN2Zz9vcHRpb25zW2V5ZXNdW109c3F1aW50Jm9wdGlvbnNbZXllYnJvd11bXT1yYWlzZWQmb3B0aW9uc1ttb3V0aF1bXT1zbWlsZWA7XHJcblxyXG5cdGNoYXRraXRcclxuXHRcdC5jcmVhdGVVc2VyKHsgaWQsIG5hbWUsIGF2YXRhclVSTCB9KVxyXG5cdFx0LnRoZW4oKCkgPT4gYWxlcnQoJ1VzZXIgY3JlYXRlZCBzdWNjZXNzZnVsbHknKSlcclxuXHRcdC5jYXRjaChlcnIgPT4gYWxlcnRFcnJvcignRXJyb3Igb24gc2lnbiB1cCcsIGVycikpO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHNpZ25JbiA9IChlbWFpbCwgcGFzc3dvcmQpID0+IHtcclxuXHRyZXR1cm4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG5cdFx0Y29uc3QgY2hhdGtpdCA9IGdldFN0YXRlKCkuY2hhdGtpdDtcclxuXHRcdGNvbnN0IGlkID0gSG1hY1NIQTEoZW1haWwgKyAnQCE/Iz8nICsgcGFzc3dvcmQsIGtleSkudG9TdHJpbmcoKTtcclxuXHJcblx0XHRjaGF0a2l0XHJcblx0XHRcdC5nZXRVc2VyKHsgaWQgfSlcclxuXHRcdFx0LnRoZW4oKCkgPT4gZGlzcGF0Y2goeyB0eXBlOiBTSUdOX0lOLCB1c2VySWQ6IGlkIH0pKVxyXG5cdFx0XHQuY2F0Y2goZXJyID0+IGFsZXJ0RXJyb3IoJ0Vycm9yIG9uIHNpZ24gaW4nLCBlcnIpKTtcclxuXHR9O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHNpZ25PdXQgPSAoKSA9PiB7XHJcblx0cmV0dXJuIHsgdHlwZTogU0lHTl9PVVQgfTtcclxufTtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCB7IGFsZXJ0RXJyb3IgfSBmcm9tICcuLi9mdW5jdGlvbnMnO1xyXG5pbXBvcnQgeyBlbnRlclJvb20gfSBmcm9tICcuL3Jvb21zJztcclxuXHJcbmV4cG9ydCBjb25zdCB0eXBpbmdNZXNzYWdlID0gKCkgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG5cdGNvbnN0IHsgY3VycmVudFVzZXIsIHJvb21BY3RpdmUgfSA9IGdldFN0YXRlKCk7XHJcblx0Y3VycmVudFVzZXJcclxuXHRcdC5pc1R5cGluZ0luKHsgcm9vbUlkOiByb29tQWN0aXZlLmlkIH0pXHJcblx0XHQuY2F0Y2goZXJyID0+IGFsZXJ0RXJyb3IoJ0Vycm9yIG9uIHR5cGluZyByb29tcycsIGVycikpO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHNlbmRNZXNzYWdlID0gKHBhcnRzLCByb29tSWQgPSBudWxsKSA9PiAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiB7XHJcblx0Y29uc3QgeyBjdXJyZW50VXNlciwgcm9vbUFjdGl2ZSB9ID0gZ2V0U3RhdGUoKTtcclxuXHRpZiAocm9vbUlkID09PSBudWxsKSByb29tSWQgPSBgJHtyb29tQWN0aXZlLmlkfWA7XHJcblx0Y3VycmVudFVzZXJcclxuXHRcdC5zZW5kTXVsdGlwYXJ0TWVzc2FnZSh7IHJvb21JZCwgcGFydHMgfSlcclxuXHRcdC5jYXRjaChlcnIgPT4gYWxlcnRFcnJvcignRXJyb3Igb24gc2VuZGluZyBtZXNzYWdlJywgZXJyKSk7XHJcbn07XHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgeyBDaGF0TWFuYWdlciwgVG9rZW5Qcm92aWRlciB9IGZyb20gJ0BwdXNoZXIvY2hhdGtpdC1jbGllbnQnO1xyXG5pbXBvcnQgeyB0b2tlblVybCwgaW5zdGFuY2VMb2NhdG9yIH0gZnJvbSAnLi4vY29uZmlnJztcclxuXHJcbmltcG9ydCAqIGFzIHR5cGVzIGZyb20gJy4uL2NvbnN0YW50cyc7XHJcbmltcG9ydCB7IGFsZXJ0RXJyb3IgfSBmcm9tICcuLi9mdW5jdGlvbnMnO1xyXG5pbXBvcnQgeyBzZW5kTWVzc2FnZSB9IGZyb20gJy4vbWVzc2FnZXMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbm5lY3QgPSB1c2VySWQgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG5cdGNvbnN0IGNoYXRNYW5hZ2VyID0gbmV3IENoYXRNYW5hZ2VyKHtcclxuXHRcdGluc3RhbmNlTG9jYXRvcixcclxuXHRcdHVzZXJJZCxcclxuXHRcdHRva2VuUHJvdmlkZXI6IG5ldyBUb2tlblByb3ZpZGVyKHsgdXJsOiB0b2tlblVybCB9KVxyXG5cdH0pO1xyXG5cdGNoYXRNYW5hZ2VyXHJcblx0XHQuY29ubmVjdCh7XHJcblx0XHRcdG9uUm9vbVVwZGF0ZWQ6IHJvb20gPT4ge1xyXG5cdFx0XHRcdGNvbnN0IHsgcm9vbXMgfSA9IGdldFN0YXRlKCk7XHJcblx0XHRcdFx0Y29uc3QgaW5kZXggPSByb29tcy5maW5kSW5kZXgociA9PiByLmlkID09PSByb29tLmlkKTtcclxuXHRcdFx0XHRyb29tc1tpbmRleF0gPSByb29tO1xyXG5cdFx0XHRcdGRpc3BhdGNoKHsgdHlwZTogdHlwZXMuVVBEQVRFX1JPT01TLCByb29tcyB9KTtcclxuXHRcdFx0fVxyXG5cdFx0fSlcclxuXHRcdC50aGVuKGN1cnJlbnRVc2VyID0+IHtcclxuXHRcdFx0ZGlzcGF0Y2goeyB0eXBlOiB0eXBlcy5DT05ORUNULCBjdXJyZW50VXNlciB9KTtcclxuXHRcdFx0ZGlzcGF0Y2goZ2V0Um9vbXMoY3VycmVudFVzZXIpKTtcclxuXHRcdH0pXHJcblx0XHQuY2F0Y2goZXJyID0+IGFsZXJ0RXJyb3IoJ0Vycm9yIG9uIGNvbm5lY3Rpb24nLCBlcnIpKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRSb29tcyA9IGN1cnJlbnRVc2VyID0+IChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcclxuXHRjdXJyZW50VXNlclxyXG5cdFx0LmdldEpvaW5hYmxlUm9vbXMoKVxyXG5cdFx0LnRoZW4odW5qb2luZWRSb29tcyA9PiB7XHJcblx0XHRcdGNvbnN0IHJvb21zID0gWy4uLmN1cnJlbnRVc2VyLnJvb21zLCAuLi51bmpvaW5lZFJvb21zXTtcclxuXHRcdFx0ZGlzcGF0Y2goeyB0eXBlOiB0eXBlcy5HRVRfUk9PTVMsIHJvb21zIH0pO1xyXG5cdFx0fSlcclxuXHRcdC5jYXRjaChlcnIgPT4gYWxlcnRFcnJvcignRXJyb3Igb24gZ2V0dGluZyByb29tcycsIGVycikpO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGVudGVyUm9vbSA9IHJvb21JZCA9PiAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiB7XHJcblx0Y29uc3QgeyBjaGF0a2l0LCBjdXJyZW50VXNlciwgcm9vbUFjdGl2ZSwgc2hvd0NhbGwgfSA9IGdldFN0YXRlKCk7XHJcblx0ZGlzcGF0Y2goeyB0eXBlOiB0eXBlcy5DTEVBUl9NRVNTQUdFIH0pO1xyXG5cclxuXHRpZiAoIWN1cnJlbnRVc2VyLmlkKSByZXR1cm47XHJcblx0dHJ5IHtcclxuXHRcdGN1cnJlbnRVc2VyLnJvb21TdWJzY3JpcHRpb25zW3Jvb21BY3RpdmUuaWRdLmNhbmNlbCgpO1xyXG5cdH0gY2F0Y2gge31cclxuXHJcblx0Y3VycmVudFVzZXJcclxuXHRcdC5zdWJzY3JpYmVUb1Jvb21NdWx0aXBhcnQoe1xyXG5cdFx0XHRyb29tSWQsXHJcblx0XHRcdG1lc3NhZ2VMaW1pdDogNTAsXHJcblx0XHRcdGhvb2tzOiB7XHJcblx0XHRcdFx0b25NZXNzYWdlOiBtZXNzYWdlID0+IHtcclxuXHRcdFx0XHRcdGRpc3BhdGNoKHsgdHlwZTogdHlwZXMuT05fTUVTU0FHRSwgbWVzc2FnZSB9KTtcclxuXHRcdFx0XHRcdGlmIChyb29tQWN0aXZlLmlkKVxyXG5cdFx0XHRcdFx0XHRyZXR1cm4gY3VycmVudFVzZXIuc2V0UmVhZEN1cnNvcih7XHJcblx0XHRcdFx0XHRcdFx0cm9vbUlkOiByb29tQWN0aXZlLmlkLFxyXG5cdFx0XHRcdFx0XHRcdHBvc2l0aW9uOiBtZXNzYWdlLmlkXHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0b25Vc2VyU3RhcnRlZFR5cGluZzogdXNlciA9PiB7XHJcblx0XHRcdFx0XHRkaXNwYXRjaCh7IHR5cGU6IHR5cGVzLlVTRVJfU1RBUlRFRF9UWVBJTkcsIHVzZXIgfSk7XHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHRvblVzZXJTdG9wcGVkVHlwaW5nOiB1c2VyID0+IHtcclxuXHRcdFx0XHRcdGRpc3BhdGNoKHsgdHlwZTogdHlwZXMuVVNFUl9TVE9QRURfVFlQSU5HLCB1c2VyIH0pO1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0b25QcmVzZW5jZUNoYW5nZWQ6ICgpID0+IHtcclxuXHRcdFx0XHRcdGNvbnN0IHsgcm9vbUFjdGl2ZSB9ID0gZ2V0U3RhdGUoKTtcclxuXHRcdFx0XHRcdGlmIChyb29tQWN0aXZlLmlkKVxyXG5cdFx0XHRcdFx0XHRkaXNwYXRjaCh7IHR5cGU6IHR5cGVzLlBSRVNFTkNFX0NIQU5HRUQsIHJvb21BY3RpdmUgfSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9KVxyXG5cdFx0LnRoZW4ocm9vbUFjdGl2ZSA9PiB7XHJcblx0XHRcdGRpc3BhdGNoKHsgdHlwZTogdHlwZXMuRU5URVJfUk9PTSwgcm9vbUFjdGl2ZSB9KTtcclxuXHRcdFx0ZGlzcGF0Y2goZ2V0Um9vbXMoY3VycmVudFVzZXIpKTtcclxuXHRcdH0pXHJcblx0XHQuY2F0Y2goZXJyID0+IHtcclxuXHRcdFx0Y29uc3QgeyBlcnJvciB9ID0gZXJyLmluZm87XHJcblx0XHRcdGlmIChlcnJvciA9PT0gJ3NlcnZpY2VzL2NoYXRraXQvbm90X2ZvdW5kL3Jvb21fbm90X2ZvdW5kJykge1xyXG5cdFx0XHRcdGNoYXRraXRcclxuXHRcdFx0XHRcdC5nZXRVc2VyKHsgaWQ6IHJvb21JZC5yZXBsYWNlKCd1c2VyPScsICcnKSB9KVxyXG5cdFx0XHRcdFx0LnRoZW4odXNlciA9PiB7XHJcblx0XHRcdFx0XHRcdGNvbnN0IHsgaWQsIG5hbWUgfSA9IHVzZXI7XHJcblx0XHRcdFx0XHRcdGRpc3BhdGNoKGNyZWF0ZVJvb20obmFtZSwgJycsIGlkLCB0cnVlKSk7XHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0LmNhdGNoKCgpID0+IHtcclxuXHRcdFx0XHRcdFx0YWxlcnRFcnJvcignRXJyb3Igb24gZW50ZXJpbmcgcm9vbXM6ICcsIGVycik7XHJcblx0XHRcdFx0XHRcdGRpc3BhdGNoKHsgdHlwZTogdHlwZXMuTk9UX0ZPVU5EIH0pO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdH0gZWxzZSBhbGVydEVycm9yKCdFcnJvciBvbiBlbnRlcmluZyByb29tczogJywgZXJyKTtcclxuXHRcdH0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNyZWF0ZVJvb20gPSAobmFtZSwgbWVzc2FnZSwgdXNlcklkID0gbnVsbCwgaXNQcml2YXRlID0gZmFsc2UpID0+IHtcclxuXHRyZXR1cm4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG5cdFx0Y29uc3QgeyBjdXJyZW50VXNlciB9ID0gZ2V0U3RhdGUoKTtcclxuXHRcdGNvbnN0IGFjY2Vzc05ld1Jvb20gPSBpZCA9PiB7XHJcblx0XHRcdGRpc3BhdGNoKGVudGVyUm9vbShpZCkpO1xyXG5cdFx0XHR3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGUobnVsbCwgbnVsbCwgYHJvb20vJHtpZH1gKTtcclxuXHJcblx0XHRcdGNvbnN0IHBhcnRzID0gW107XHJcblx0XHRcdGlmIChtZXNzYWdlLnRyaW0oKSkge1xyXG5cdFx0XHRcdHBhcnRzLnB1c2goeyB0eXBlOiAndGV4dC9wbGFpbicsIGNvbnRlbnQ6IG1lc3NhZ2UgfSk7XHJcblx0XHRcdFx0ZGlzcGF0Y2goc2VuZE1lc3NhZ2UocGFydHMsIGAke2lkfWApKTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0XHRpZiAoaXNQcml2YXRlKVxyXG5cdFx0XHRjdXJyZW50VXNlclxyXG5cdFx0XHRcdC5jcmVhdGVSb29tKHtcclxuXHRcdFx0XHRcdGlkOiAndXNlcj0nICsgdXNlcklkLFxyXG5cdFx0XHRcdFx0bmFtZSxcclxuXHRcdFx0XHRcdHByaXZhdGU6IHRydWUsXHJcblx0XHRcdFx0XHRhZGRVc2VySWRzOiBbY3VycmVudFVzZXIuaWQsIHVzZXJJZF1cclxuXHRcdFx0XHR9KVxyXG5cdFx0XHRcdC50aGVuKHJvb20gPT4gYWNjZXNzTmV3Um9vbShyb29tLmlkKSlcclxuXHRcdFx0XHQuY2F0Y2goZXJyID0+IHtcclxuXHRcdFx0XHRcdGNvbnN0IHsgZXJyb3IgfSA9IGVyci5pbmZvO1xyXG5cdFx0XHRcdFx0aWYgKFxyXG5cdFx0XHRcdFx0XHRlcnJvciA9PT1cclxuXHRcdFx0XHRcdFx0J3NlcnZpY2VzL2NoYXRraXQvYmFkX3JlcXVlc3QvZHVwbGljYXRlX3Jvb21faWQnXHJcblx0XHRcdFx0XHQpXHJcblx0XHRcdFx0XHRcdGRpc3BhdGNoKGVudGVyUm9vbSgndXNlcj0nICsgdXNlcklkKSk7XHJcblx0XHRcdFx0XHRlbHNlIGxlcnRFcnJvcignRXJyb3Igb24gY2hhdHRpbmcgMSB0byAxJywgZXJyKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdGVsc2VcclxuXHRcdFx0Y3VycmVudFVzZXJcclxuXHRcdFx0XHQuY3JlYXRlUm9vbSh7IG5hbWUgfSlcclxuXHRcdFx0XHQudGhlbihyb29tID0+IGFjY2Vzc05ld1Jvb20ocm9vbS5pZCkpXHJcblx0XHRcdFx0LmNhdGNoKGVyciA9PiBhbGVydEVycm9yKCdFcnJvciBvbiBjcmVhdGluZyByb29tcycsIGVycikpO1xyXG5cdH07XHJcbn07XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgKiBhcyB0eXBlcyBmcm9tICcuLi9jb25zdGFudHMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZpbHRlclJvb21zID0gKG5hbWUsIHN0YXR1cyA9IG51bGwpID0+IHtcclxuXHRyZXR1cm4geyB0eXBlOiB0eXBlcy5GSUxURVJfUk9PTVMsIG5hbWUsIHN0YXR1cyB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHNvcnRNZW1iZXJzID0gKGJ5LCB2YWx1ZSkgPT4ge1xyXG5cdHJldHVybiB7IHR5cGU6IHR5cGVzLlNPUlRfTUVNQkVSUywgYnksIHZhbHVlIH07XHJcbn07XHJcbmV4cG9ydCBjb25zdCB0b2dnbGVVc2Vyc0JhciA9ICgpID0+IHtcclxuXHRyZXR1cm4geyB0eXBlOiB0eXBlcy5UT0dHTEVfVVNFUlNfQkFSIH07XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgdG9nZ2xlQ2FsbCA9IChjYW0gPSBmYWxzZSkgPT4ge1xyXG5cdHJldHVybiB7IHR5cGU6IHR5cGVzLlRPR0dMRV9DQUxMLCBjYW0gfTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB0b2dnbGVQaWNrZXIgPSAoKSA9PiB7XHJcblx0cmV0dXJuIHsgdHlwZTogdHlwZXMuVE9HR0xFX1BJQ0tFUiB9O1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGFkZEVtb2ppID0gKGVtb2ppLCBtZXNzYWdlKSA9PiAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiB7XHJcblx0ZGlzcGF0Y2goeyB0eXBlOiB0eXBlcy5BRERfRU1PSkkgfSk7XHJcblx0cmV0dXJuIGAke21lc3NhZ2V9JHtlbW9qaS5uYXRpdmV9YDtcclxufTtcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmV4cG9ydCB7IHNpZ25VcCwgc2lnbkluLCBzaWduT3V0IH0gZnJvbSAnLi9zY3JlZW4nO1xyXG5leHBvcnQgeyBjb25uZWN0LCBnZXRSb29tcywgZW50ZXJSb29tLCBjcmVhdGVSb29tIH0gZnJvbSAnLi9yb29tcyc7XHJcbmV4cG9ydCB7IHR5cGluZ01lc3NhZ2UsIHNlbmRNZXNzYWdlIH0gZnJvbSAnLi9tZXNzYWdlcyc7XHJcbmV4cG9ydCB7XHJcblx0ZmlsdGVyUm9vbXMsXHJcblx0c29ydE1lbWJlcnMsXHJcblx0dG9nZ2xlVXNlcnNCYXIsXHJcblx0dG9nZ2xlQ2FsbCxcclxuXHR0b2dnbGVQaWNrZXIsXHJcblx0YWRkRW1vamlcclxufSBmcm9tICcuL2NvbnRyb2xzJztcclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgTW9kYWwsIEJ1dHRvblRvb2xiYXIsIEJ1dHRvbiB9IGZyb20gJ3JlYWN0LWJvb3RzdHJhcCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEaWFsb2cocHJvcHMpIHtcclxuXHRjb25zdCBbbW9kYWxTaG93LCBzZXRNb2RhbFNob3ddID0gdXNlU3RhdGUoZmFsc2UpO1xyXG5cdGNvbnN0IHsgdHlwZSwgdGl0bGUsIGljb24sIGRpc2FibGVkLCBjaGlsZHJlbiB9ID0gcHJvcHM7XHJcblxyXG5cdGNvbnN0IG9uQ2xvc2VNb2RhbCA9ICgpID0+IHNldE1vZGFsU2hvdyhmYWxzZSk7XHJcblx0Y29uc3Qgb25TaG93TW9kYWwgPSAoKSA9PiB7XHJcblx0XHRpZiAoIWRpc2FibGVkKSBzZXRNb2RhbFNob3codHJ1ZSk7XHJcblx0fTtcclxuXHJcblx0Y29uc3Qgb25TdWJtaXQgPSBldmVudCA9PiB7XHJcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0cHJvcHMub25TdWJtaXQoKTtcclxuXHRcdG9uQ2xvc2VNb2RhbCgpO1xyXG5cdH07XHJcblxyXG5cdHJldHVybiAoXHJcblx0XHQ8QnV0dG9uVG9vbGJhcj5cclxuXHRcdFx0PEJ1dHRvbiBjbGFzc05hbWU9e3R5cGV9IG9uQ2xpY2s9e29uU2hvd01vZGFsfT5cclxuXHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zJz57aWNvbn08L2k+XHJcblx0XHRcdDwvQnV0dG9uPlxyXG5cdFx0XHQ8TW9kYWwgY2VudGVyZWQgc2hvdz17bW9kYWxTaG93fSBvbkhpZGU9e29uQ2xvc2VNb2RhbH0+XHJcblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3JlcXVlc3RzJz5cclxuXHRcdFx0XHRcdDxNb2RhbC5IZWFkZXI+XHJcblx0XHRcdFx0XHRcdDxNb2RhbC5UaXRsZT5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ndGl0bGUnPlxyXG5cdFx0XHRcdFx0XHRcdFx0PGgxPnt0aXRsZX08L2gxPlxyXG5cdFx0XHRcdFx0XHRcdFx0PGJ1dHRvblxyXG5cdFx0XHRcdFx0XHRcdFx0XHR0eXBlPSdidXR0b24nXHJcblx0XHRcdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT0nYnRuJ1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRvbkNsaWNrPXtvbkNsb3NlTW9kYWx9XHJcblx0XHRcdFx0XHRcdFx0XHQ+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMnPmNsb3NlPC9pPlxyXG5cdFx0XHRcdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDwvTW9kYWwuVGl0bGU+XHJcblx0XHRcdFx0XHQ8L01vZGFsLkhlYWRlcj5cclxuXHRcdFx0XHRcdDxNb2RhbC5Cb2R5PlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29udGVudCc+XHJcblx0XHRcdFx0XHRcdFx0PGZvcm0gb25TdWJtaXQ9e29uU3VibWl0fT5cclxuXHRcdFx0XHRcdFx0XHRcdHtjaGlsZHJlbn1cclxuXHRcdFx0XHRcdFx0XHRcdDxidXR0b25cclxuXHRcdFx0XHRcdFx0XHRcdFx0dHlwZT0nc3VibWl0J1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9J2J0biBidXR0b24gdy0xMDAnXHJcblx0XHRcdFx0XHRcdFx0XHQ+XHJcblx0XHRcdFx0XHRcdFx0XHRcdHt0aXRsZX1cclxuXHRcdFx0XHRcdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdDwvZm9ybT5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHQ8L01vZGFsLkJvZHk+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvTW9kYWw+XHJcblx0XHQ8L0J1dHRvblRvb2xiYXI+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VTZWxlY3RvciwgdXNlRGlzcGF0Y2ggfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcbmltcG9ydCBJbWFnZVVwbG9hZGVyIGZyb20gJ3JlYWN0LWltYWdlcy11cGxvYWQnO1xyXG5pbXBvcnQgeyBzZW5kTWVzc2FnZSB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xyXG5pbXBvcnQgRGlhbG9nIGZyb20gJy4vRGlhbG9nJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFVwbG9hZEltYWdlKCkge1xyXG5cdGNvbnN0IHJvb21BY3RpdmUgPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS5yb29tQWN0aXZlKVxyXG5cdGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcclxuXHJcblx0Y29uc3QgW3BpY3R1cmVzLCBzZXRQaWN0dXJlc10gPSB1c2VTdGF0ZShbXSk7XHJcblx0Y29uc3QgW21lc3NhZ2UsIHNldE1lc3NhZ2VdID0gdXNlU3RhdGUoJycpO1xyXG5cclxuXHRjb25zdCBvbkRyb3AgPSBwaWN0dXJlRmlsZXMgPT4gc2V0UGljdHVyZXMocGljdHVyZUZpbGVzKTtcclxuXHRjb25zdCBvbkNoYW5nZSA9IGV2ZW50ID0+IHNldE1lc3NhZ2UoZXZlbnQudGFyZ2V0LnZhbHVlKTtcclxuXHJcblx0Y29uc3Qgb25TdWJtaXQgPSAoKSA9PiB7XHJcblx0XHRpZiAocGljdHVyZXMubGVuZ3RoID09PSAwKSByZXR1cm47XHJcblxyXG5cdFx0Y29uc3QgcGFydHMgPSBbXTtcclxuXHRcdHBpY3R1cmVzLmZvckVhY2gocGljID0+IHBhcnRzLnB1c2goeyBmaWxlOiBwaWMgfSkpO1xyXG5cclxuXHRcdGlmIChtZXNzYWdlLnRyaW0oKSlcclxuXHRcdFx0cGFydHMucHVzaCh7IHR5cGU6ICd0ZXh0L3BsYWluJywgY29udGVudDogbWVzc2FnZSB9KTtcclxuXHJcblx0XHRkaXNwYXRjaChzZW5kTWVzc2FnZShwYXJ0cykpO1xyXG5cdFx0c2V0UGljdHVyZXMoW10pO1xyXG5cdFx0c2V0TWVzc2FnZSgnJyk7XHJcblx0fTtcclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxEaWFsb2dcclxuXHRcdFx0dHlwZT0nYXR0YWNoIGQtc20tYmxvY2sgZC1ub25lJ1xyXG5cdFx0XHR0aXRsZT0nVGjDqm0g4bqjbmgnXHJcblx0XHRcdGljb249J3Bob3RvJ1xyXG5cdFx0XHRvblN1Ym1pdD17b25TdWJtaXR9XHJcblx0XHRcdGRpc2FibGVkPXshcm9vbUFjdGl2ZS5pZH1cclxuXHRcdD5cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J2Zvcm0tZ3JvdXAnPlxyXG5cdFx0XHRcdDxsYWJlbD5UaW4gbmjhuq9uOjwvbGFiZWw+XHJcblx0XHRcdFx0PEltYWdlVXBsb2FkZXJcclxuXHRcdFx0XHRcdHdpdGhJY29uPXt0cnVlfVxyXG5cdFx0XHRcdFx0d2l0aFByZXZpZXc9e3RydWV9XHJcblx0XHRcdFx0XHRidXR0b25UZXh0PSdDaOG7jW4g4bqjbmggdOG7qyBtw6F5J1xyXG5cdFx0XHRcdFx0aW1nRXh0ZW5zaW9uPXtbJy5qcGcnLCAnLmpwZWcnLCAnLnBuZycsICcuZ2lmJ119XHJcblx0XHRcdFx0XHRtYXhGaWxlU2l6ZT17NTI0Mjg4MH1cclxuXHRcdFx0XHRcdG9uQ2hhbmdlPXtvbkRyb3B9XHJcblx0XHRcdFx0Lz5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdmb3JtLWdyb3VwJz5cclxuXHRcdFx0XHQ8bGFiZWw+VGluIG5o4bqvbjo8L2xhYmVsPlxyXG5cdFx0XHRcdDxpbnB1dFxyXG5cdFx0XHRcdFx0dHlwZT0ndGV4dCdcclxuXHRcdFx0XHRcdG5hbWU9J25hbWUnXHJcblx0XHRcdFx0XHR2YWx1ZT17bWVzc2FnZX1cclxuXHRcdFx0XHRcdGNsYXNzTmFtZT0nZm9ybS1jb250cm9sJ1xyXG5cdFx0XHRcdFx0cGxhY2Vob2xkZXI9J1Row6ptIHRpbiBuaOG6r24gduG7gSDhuqNuaCBuw6B5Li4uJ1xyXG5cdFx0XHRcdFx0b25DaGFuZ2U9e29uQ2hhbmdlfVxyXG5cdFx0XHRcdC8+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9EaWFsb2c+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cblxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlU2VsZWN0b3IsIHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuXG5pbXBvcnQgUmVhY3RUZXh0YXJlYUF1dG9jb21wbGV0ZSBmcm9tICdAd2Vic2NvcGVpby9yZWFjdC10ZXh0YXJlYS1hdXRvY29tcGxldGUnO1xuaW1wb3J0IHsgUGlja2VyLCBlbW9qaUluZGV4IH0gZnJvbSAnZW1vamktbWFydCc7XG5pbXBvcnQge1xuXHR0eXBpbmdNZXNzYWdlLFxuXHRzZW5kTWVzc2FnZSxcblx0YWRkRW1vamksXG5cdHRvZ2dsZVBpY2tlclxufSBmcm9tICcuLi8uLi9hY3Rpb25zJztcblxuaW1wb3J0IFVwbG9hZEltYWdlIGZyb20gJy4vVXBsb2FkSW1hZ2UnO1xuaW1wb3J0ICdlbW9qaS1tYXJ0L2Nzcy9lbW9qaS1tYXJ0LmNzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNlbmRNZXNzYWdlKCkge1xuXHRjb25zdCB7IHJvb21BY3RpdmUsIHNob3dQaWNrZXIgfSA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlKTtcblx0Y29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuXHRjb25zdCBbbWVzc2FnZSwgc2V0TWVzc2FnZV0gPSB1c2VTdGF0ZSgnJyk7XG5cblx0Y29uc3QgZmlsdGVyVXNlck5hbWVzID0gdG9rZW4gPT4ge1xuXHRcdHJldHVybiByb29tQWN0aXZlLnVzZXJzLmZpbHRlcih1c2VyID0+IHVzZXIubmFtZS5pbmNsdWRlcyh0b2tlbikpO1xuXHR9O1xuXG5cdGNvbnN0IG9uVG9nZ2xlUGlja2VyID0gKCkgPT4gZGlzcGF0Y2godG9nZ2xlUGlja2VyKCkpO1xuXHRjb25zdCBvbkFkZEVtb2ppID0gZW1vamkgPT4gc2V0TWVzc2FnZShkaXNwYXRjaChhZGRFbW9qaShlbW9qaSwgbWVzc2FnZSkpKTtcblxuXHRjb25zdCBvbkNoYW5nZSA9IGV2ZW50ID0+IHtcblx0XHRzZXRNZXNzYWdlKGV2ZW50LnRhcmdldC52YWx1ZSk7XG5cdFx0ZGlzcGF0Y2godHlwaW5nTWVzc2FnZSgpKTtcblx0fTtcblxuXHRjb25zdCBvblN1Ym1pdCA9IGV2ZW50ID0+IHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGNvbnN0IHBhcnRzID0gW107XG5cdFx0aWYgKG1lc3NhZ2UudHJpbSgpKSB7XG5cdFx0XHRwYXJ0cy5wdXNoKHsgdHlwZTogJ3RleHQvcGxhaW4nLCBjb250ZW50OiBtZXNzYWdlIH0pO1xuXHRcdFx0ZGlzcGF0Y2goc2VuZE1lc3NhZ2UocGFydHMpKTtcblx0XHRcdHNldE1lc3NhZ2UoJycpO1xuXHRcdH1cblx0fTtcblxuXHRyZXR1cm4gKFxuXHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J2NvbC1tZC0xMic+XG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdib3R0b20nPlxuXHRcdFx0XHRcdDxmb3JtXG5cdFx0XHRcdFx0XHRjbGFzc05hbWU9J3Bvc2l0aW9uLXJlbGF0aXZlIHctMTAwJ1xuXHRcdFx0XHRcdFx0b25TdWJtaXQ9e29uU3VibWl0fVxuXHRcdFx0XHRcdD5cblx0XHRcdFx0XHRcdDxSZWFjdFRleHRhcmVhQXV0b2NvbXBsZXRlXG5cdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT0nZm9ybS1jb250cm9sJ1xuXHRcdFx0XHRcdFx0XHR2YWx1ZT17bWVzc2FnZX1cblx0XHRcdFx0XHRcdFx0bG9hZGluZ0NvbXBvbmVudD17KCkgPT4gPHA+TG9hZGluZy4uLjwvcD59XG5cdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXtvbkNoYW5nZX1cblx0XHRcdFx0XHRcdFx0cGxhY2Vob2xkZXI9J05o4bqtcCB0aW4gbmjhuq9uLi4uJ1xuXHRcdFx0XHRcdFx0XHR0cmlnZ2VyPXt7XG5cdFx0XHRcdFx0XHRcdFx0J0AnOiB7XG5cdFx0XHRcdFx0XHRcdFx0XHRkYXRhUHJvdmlkZXI6IHRva2VuID0+IFtcblx0XHRcdFx0XHRcdFx0XHRcdFx0Li4uZmlsdGVyVXNlck5hbWVzKHRva2VuKVxuXHRcdFx0XHRcdFx0XHRcdFx0XSxcblx0XHRcdFx0XHRcdFx0XHRcdGNvbXBvbmVudDogKHsgZW50aXR5OiB7IG5hbWUgfSB9KSA9PiAoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxkaXY+e25hbWV9PC9kaXY+XG5cdFx0XHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0XHRcdFx0b3V0cHV0OiBpdGVtID0+IGBAJHtpdGVtLm5hbWV9YFxuXHRcdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdFx0JzonOiB7XG5cdFx0XHRcdFx0XHRcdFx0XHRkYXRhUHJvdmlkZXI6IHRva2VuID0+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGVtb2ppSW5kZXguc2VhcmNoKHRva2VuKS5tYXAobyA9PiAoe1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGNvbG9uczogby5jb2xvbnMsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bmF0aXZlOiBvLm5hdGl2ZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9KSksXG5cdFx0XHRcdFx0XHRcdFx0XHRjb21wb25lbnQ6ICh7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGVudGl0eTogeyBuYXRpdmUsIGNvbG9ucyB9XG5cdFx0XHRcdFx0XHRcdFx0XHR9KSA9PiA8ZGl2PntgJHtjb2xvbnN9ICR7bmF0aXZlfWB9PC9kaXY+LFxuXHRcdFx0XHRcdFx0XHRcdFx0b3V0cHV0OiBpdGVtID0+IGAke2l0ZW0ubmF0aXZlfWBcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH19XG5cdFx0XHRcdFx0XHRcdGRpc2FibGVkPXshcm9vbUFjdGl2ZS5pZH1cblx0XHRcdFx0XHRcdC8+XG5cblx0XHRcdFx0XHRcdDxidXR0b25cblx0XHRcdFx0XHRcdFx0dHlwZT0nYnV0dG9uJ1xuXHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9J2J0biBlbW90aWNvbnMnXG5cdFx0XHRcdFx0XHRcdG9uQ2xpY2s9e29uVG9nZ2xlUGlja2VyfVxuXHRcdFx0XHRcdFx0XHRkaXNhYmxlZD17IXJvb21BY3RpdmUuaWR9XG5cdFx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMnPmluc2VydF9lbW90aWNvbjwvaT5cblx0XHRcdFx0XHRcdDwvYnV0dG9uPlxuXHRcdFx0XHRcdFx0PGJ1dHRvbiB0eXBlPSdzdWJtaXQnIGNsYXNzTmFtZT0nYnRuIHNlbmQnPlxuXHRcdFx0XHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zJz5zZW5kPC9pPlxuXHRcdFx0XHRcdFx0PC9idXR0b24+XG5cdFx0XHRcdFx0XHR7c2hvd1BpY2tlciAmJiAoXG5cdFx0XHRcdFx0XHRcdDxQaWNrZXIgc2V0PSdlbW9qaW9uZScgb25TZWxlY3Q9e29uQWRkRW1vaml9IC8+XG5cdFx0XHRcdFx0XHQpfVxuXHRcdFx0XHRcdDwvZm9ybT5cblx0XHRcdFx0XHQ8VXBsb2FkSW1hZ2UgLz5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L2Rpdj5cblx0XHQ8L2Rpdj5cblx0KTtcbn1cblxuLyogZXNsaW50LWVuYWJsZSAqL1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVNlbGVjdG9yLCB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IHsgZmlsdGVyUm9vbXMgfSBmcm9tICcuLi8uLi9hY3Rpb25zJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEZpbHRlclJvb21zKCkge1xyXG5cdGNvbnN0IHsgbmFtZSwgc3RhdHVzIH0gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS5yb29tRmlsdGVyKTtcclxuXHRjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XHJcblx0Y29uc3Qgb25DaGFuZ2UgPSBldmVudCA9PiB7XHJcblx0XHRjb25zdCByb29tTmFtZSA9IGV2ZW50LnRhcmdldC52YWx1ZS50b0xvd2VyQ2FzZSgpLnRyaW0oKTtcclxuXHRcdGRpc3BhdGNoKGZpbHRlclJvb21zKHJvb21OYW1lKSk7XHJcblx0fTtcclxuXHRyZXR1cm4gKFxyXG5cdFx0PGRpdiBpZD0ncm9vbS1maWx0ZXInPlxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nc2VhcmNoJz5cclxuXHRcdFx0XHQ8Zm9ybSBjbGFzc05hbWU9J2Zvcm0taW5saW5lIHBvc2l0aW9uLXJlbGF0aXZlJz5cclxuXHRcdFx0XHRcdDxpbnB1dFxyXG5cdFx0XHRcdFx0XHR0eXBlPSdzZWFyY2gnXHJcblx0XHRcdFx0XHRcdGNsYXNzTmFtZT0nZm9ybS1jb250cm9sJ1xyXG5cdFx0XHRcdFx0XHRwbGFjZWhvbGRlcj0nVMOsbSBraeG6v20gcGjDsm5nIGNoYXQuLi4nXHJcblx0XHRcdFx0XHRcdG9uQ2hhbmdlPXtvbkNoYW5nZX1cclxuXHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHQ8YnV0dG9uIHR5cGU9J2J1dHRvbicgY2xhc3NOYW1lPSdidG4gYnRuLWxpbmsgbG9vcCc+XHJcblx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMnPnNlYXJjaDwvaT5cclxuXHRcdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdDwvZm9ybT5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdsaXN0LWdyb3VwIHNvcnQnPlxyXG5cdFx0XHRcdDxidXR0b25cclxuXHRcdFx0XHRcdGNsYXNzTmFtZT17YGJ0biAke3N0YXR1cyA9PT0gMCAmJiAnYWN0aXZlIHNob3cnfWB9XHJcblx0XHRcdFx0XHRvbkNsaWNrPXsoKSA9PiBkaXNwYXRjaChmaWx0ZXJSb29tcyhuYW1lLCAwKSl9XHJcblx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0VOG6pXQgY+G6o1xyXG5cdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdDxidXR0b25cclxuXHRcdFx0XHRcdGNsYXNzTmFtZT17YGJ0biAke3N0YXR1cyA9PT0gMSAmJiAnYWN0aXZlIHNob3cnfWB9XHJcblx0XHRcdFx0XHRvbkNsaWNrPXsoKSA9PiBkaXNwYXRjaChmaWx0ZXJSb29tcyhuYW1lLCAxKSl9XHJcblx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0xJDDoyDEkeG7jWNcclxuXHRcdFx0XHQ8L2J1dHRvbj5cclxuXHRcdFx0XHQ8YnV0dG9uXHJcblx0XHRcdFx0XHRjbGFzc05hbWU9e2BidG4gJHtzdGF0dXMgPT09IC0xICYmICdhY3RpdmUgc2hvdyd9YH1cclxuXHRcdFx0XHRcdG9uQ2xpY2s9eygpID0+IGRpc3BhdGNoKGZpbHRlclJvb21zKG5hbWUsIC0xKSl9XHJcblx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0Q2jGsGEgxJHhu41jXHJcblx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IsIHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xyXG5pbXBvcnQgeyBEcm9wZG93bkJ1dHRvbiwgRHJvcGRvd24gfSBmcm9tICdyZWFjdC1ib290c3RyYXAnO1xyXG5pbXBvcnQgeyBzb3J0TWVtYmVycyB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU29ydE1lbWJlcnMoKSB7XHJcblx0Y29uc3QgdXNlclNvcnQgPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS51c2VyU29ydCk7XHJcblx0Y29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG5cdGNvbnN0IHsgYnksIHZhbHVlIH0gPSB1c2VyU29ydDtcclxuXHRyZXR1cm4gKFxyXG5cdFx0PERyb3Bkb3duQnV0dG9uIHRpdGxlPSdT4bqvcCB44bq/cCB0aGVvJyBzaXplPSdzbScgdmFyaWFudD0nbGlnaHQnPlxyXG5cdFx0XHQ8RHJvcGRvd24uSXRlbVxyXG5cdFx0XHRcdGFzPSdidXR0b24nXHJcblx0XHRcdFx0b25DbGljaz17KCkgPT4gZGlzcGF0Y2goc29ydE1lbWJlcnMoJ3N0YXR1cycsIDEpKX1cclxuXHRcdFx0PlxyXG5cdFx0XHRcdMSQYW5nIE9ubGluZVxyXG5cdFx0XHRcdHtieSA9PSAnc3RhdHVzJyAmJiB2YWx1ZSA9PSAxICYmIChcclxuXHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWwtYXV0byc+Y2hlY2s8L2k+XHJcblx0XHRcdFx0KX1cclxuXHRcdFx0PC9Ecm9wZG93bi5JdGVtPlxyXG5cdFx0XHQ8RHJvcGRvd24uSXRlbVxyXG5cdFx0XHRcdGFzPSdidXR0b24nXHJcblx0XHRcdFx0b25DbGljaz17KCkgPT4gZGlzcGF0Y2goc29ydE1lbWJlcnMoJ3N0YXR1cycsIC0xKSl9XHJcblx0XHRcdD5cclxuXHRcdFx0XHTEkGFuZyBPZmZsaW5lXHJcblx0XHRcdFx0e2J5ID09ICdzdGF0dXMnICYmIHZhbHVlID09IC0xICYmIChcclxuXHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWwtYXV0byc+Y2hlY2s8L2k+XHJcblx0XHRcdFx0KX1cclxuXHRcdFx0PC9Ecm9wZG93bi5JdGVtPlxyXG5cdFx0XHQ8RHJvcGRvd24uRGl2aWRlciAvPlxyXG5cdFx0XHQ8RHJvcGRvd24uSXRlbVxyXG5cdFx0XHRcdGFzPSdidXR0b24nXHJcblx0XHRcdFx0b25DbGljaz17KCkgPT4gZGlzcGF0Y2goc29ydE1lbWJlcnMoJ25hbWUnLCAxKSl9XHJcblx0XHRcdD5cclxuXHRcdFx0XHRBIMSR4bq/biBaXHJcblx0XHRcdFx0e2J5ID09ICduYW1lJyAmJiB2YWx1ZSA9PSAxICYmIChcclxuXHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWwtYXV0byc+Y2hlY2s8L2k+XHJcblx0XHRcdFx0KX1cclxuXHRcdFx0PC9Ecm9wZG93bi5JdGVtPlxyXG5cdFx0XHQ8RHJvcGRvd24uSXRlbVxyXG5cdFx0XHRcdGFzPSdidXR0b24nXHJcblx0XHRcdFx0b25DbGljaz17KCkgPT4gZGlzcGF0Y2goc29ydE1lbWJlcnMoJ25hbWUnLCAtMSkpfVxyXG5cdFx0XHQ+XHJcblx0XHRcdFx0WiDEkeG6v24gQVxyXG5cdFx0XHRcdHtieSA9PSAnbmFtZScgJiYgdmFsdWUgPT0gLTEgJiYgKFxyXG5cdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBtbC1hdXRvJz5jaGVjazwvaT5cclxuXHRcdFx0XHQpfVxyXG5cdFx0XHQ8L0Ryb3Bkb3duLkl0ZW0+XHJcblx0XHQ8L0Ryb3Bkb3duQnV0dG9uPlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IERpYWxvZyBmcm9tICcuL0RpYWxvZyc7XG5pbXBvcnQgeyBjcmVhdGVSb29tIH0gZnJvbSAnLi4vLi4vYWN0aW9ucyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENyZWF0ZVJvb20oKSB7XG5cdGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcblx0Y29uc3QgW3Jvb21JbmZvLCBzZXRSb29tSW5mb10gPSB1c2VTdGF0ZSh7IG5hbWU6ICcnLCBmaXJzdE1lc3NhZ2U6ICcnIH0pO1xuXG5cdGNvbnN0IG9uQ2hhbmdlID0gZXZlbnQgPT4ge1xuXHRcdGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcblx0XHRjb25zdCB7IG5hbWUsIHZhbHVlIH0gPSB0YXJnZXQ7XG5cdFx0c2V0Um9vbUluZm8oeyAuLi5yb29tSW5mbywgW25hbWVdOiB2YWx1ZSB9KTtcblx0fTtcblxuXHRjb25zdCBvblN1Ym1pdCA9ICgpID0+IHtcblx0XHRjb25zdCB7IG5hbWUsIGZpcnN0TWVzc2FnZSB9ID0gcm9vbUluZm87XG5cdFx0aWYgKG5hbWUudHJpbSgpKSB7XG5cdFx0XHRkaXNwYXRjaChjcmVhdGVSb29tKG5hbWUsIGZpcnN0TWVzc2FnZSkpO1xuXHRcdFx0c2V0Um9vbUluZm8oeyAuLi5yb29tSW5mbywgbmFtZTogJycsIGZpcnN0TWVzc2FnZTogJycgfSk7XG5cdFx0fVxuXHR9O1xuXG5cdHJldHVybiAoXG5cdFx0PERpYWxvZ1xuXHRcdFx0dHlwZT0nY3JlYXRlJ1xuXHRcdFx0aWNvbj0nY3JlYXRlJ1xuXHRcdFx0dGl0bGU9J1ThuqFvIHBow7JuZyBt4bubaSdcblx0XHRcdG9uU3VibWl0PXtvblN1Ym1pdH1cblx0XHQ+XG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nZm9ybS1ncm91cCc+XG5cdFx0XHRcdDxsYWJlbD5Uw6puIHBow7JuZzo8L2xhYmVsPlxuXHRcdFx0XHQ8aW5wdXRcblx0XHRcdFx0XHR0eXBlPSd0ZXh0J1xuXHRcdFx0XHRcdG5hbWU9J25hbWUnXG5cdFx0XHRcdFx0dmFsdWU9e3Jvb21JbmZvLm5hbWV9XG5cdFx0XHRcdFx0Y2xhc3NOYW1lPSdmb3JtLWNvbnRyb2wnXG5cdFx0XHRcdFx0cGxhY2Vob2xkZXI9J8SQ4bq3dCB0w6puIHBow7JuZy4uLidcblx0XHRcdFx0XHRvbkNoYW5nZT17b25DaGFuZ2V9XG5cdFx0XHRcdFx0cmVxdWlyZWRcblx0XHRcdFx0Lz5cblx0XHRcdDwvZGl2PlxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J2Zvcm0tZ3JvdXAnPlxuXHRcdFx0XHQ8bGFiZWw+VGluIG5o4bqvbjo8L2xhYmVsPlxuXHRcdFx0XHQ8dGV4dGFyZWFcblx0XHRcdFx0XHRuYW1lPSdmaXJzdE1lc3NhZ2UnXG5cdFx0XHRcdFx0dmFsdWU9e3Jvb21JbmZvLmZpcnN0TWVzc2FnZX1cblx0XHRcdFx0XHRjbGFzc05hbWU9J3RleHQtY29udHJvbCdcblx0XHRcdFx0XHRwbGFjZWhvbGRlcj0nTmjhuq1wIHRpbiBuaOG6r24gxJHhuqd1IHRpw6puIGPhu6dhIGLhuqFuLi4uJ1xuXHRcdFx0XHRcdG9uQ2hhbmdlPXtvbkNoYW5nZX1cblx0XHRcdFx0PjwvdGV4dGFyZWE+XG5cdFx0XHQ8L2Rpdj5cblx0XHQ8L0RpYWxvZz5cblx0KTtcbn1cblxuLyogZXNsaW50LWVuYWJsZSAqL1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgQXV0aElucHV0IH0gZnJvbSAnLi9BdXRoSW5wdXQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBTZW5kTWVzc2FnZSB9IGZyb20gJy4vU2VuZE1lc3NhZ2UnO1xuXG5leHBvcnQgeyBkZWZhdWx0IGFzIEZpbHRlclJvb21zIH0gZnJvbSAnLi9GaWx0ZXJSb29tcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFNvcnRNZW1iZXJzIH0gZnJvbSAnLi9Tb3J0TWVtYmVycyc7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgQ3JlYXRlUm9vbSB9IGZyb20gJy4vQ3JlYXRlUm9vbSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFVwbG9hZEltYWdlIH0gZnJvbSAnLi9VcGxvYWRJbWFnZSc7XG5cbi8qIGVzbGludC1lbmFibGUgKi9cbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuaW1wb3J0IHsgQXV0aElucHV0IH0gZnJvbSAnLi4vRm9ybUNvbnRyb2xzJztcbmltcG9ydCB7IHNpZ25JbiB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTaWduSW4oKSB7XG5cdGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcblx0Y29uc3QgW3VzZXJJbmZvLCBzZXRVc2VySW5mb10gPSB1c2VTdGF0ZSh7IGVtYWlsOiAnJywgcGFzc3dvcmQ6ICcnIH0pO1xuXG5cdGNvbnN0IG9uQ2hhbmdlID0gZXZlbnQgPT4ge1xuXHRcdGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcblx0XHRjb25zdCB7IG5hbWUsIHZhbHVlIH0gPSB0YXJnZXQ7XG5cdFx0c2V0VXNlckluZm8oeyAuLi51c2VySW5mbywgW25hbWVdOiB2YWx1ZSB9KTtcblx0fTtcblxuXHRjb25zdCBvblN1Ym1pdCA9IGV2ZW50ID0+IHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSB1c2VySW5mbztcblxuXHRcdGlmIChlbWFpbC50cmltKCkgJiYgcGFzc3dvcmQudHJpbSgpKVxuXHRcdFx0ZGlzcGF0Y2goc2lnbkluKGVtYWlsLCBwYXNzd29yZCwgaGlzdG9yeSkpO1xuXHR9O1xuXG5cdHJldHVybiAoXG5cdFx0PGRpdiBjbGFzc05hbWU9J2FwcCc+XG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nbWFpbiBvcmRlci1tZC0xJz5cblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3N0YXJ0Jz5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29udGFpbmVyJz5cblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb2wtbWQtMTInPlxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29udGVudCc+XG5cdFx0XHRcdFx0XHRcdFx0PGgxPlNpZ24gaW4gUXVhbkNoYXQ8L2gxPlxuXHRcdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSd0aGlyZC1wYXJ0eSc+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uIGNsYXNzTmFtZT0nYnRuIGl0ZW0gYmctYmx1ZSc+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMnPnBhZ2VzPC9pPlxuXHRcdFx0XHRcdFx0XHRcdFx0PC9idXR0b24+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uIGNsYXNzTmFtZT0nYnRuIGl0ZW0gYmctdGVhbCc+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMnPlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHBhcnR5X21vZGVcblx0XHRcdFx0XHRcdFx0XHRcdFx0PC9pPlxuXHRcdFx0XHRcdFx0XHRcdFx0PC9idXR0b24+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uIGNsYXNzTmFtZT0nYnRuIGl0ZW0gYmctcHVycGxlJz5cblx0XHRcdFx0XHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyc+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0d2hhdHNob3Rcblx0XHRcdFx0XHRcdFx0XHRcdFx0PC9pPlxuXHRcdFx0XHRcdFx0XHRcdFx0PC9idXR0b24+XG5cdFx0XHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0XHRcdFx0PHA+U+G7rSBk4bulbmcgdMOgaSBraG/huqNuIGVtYWlsIMSRw6MgxJHEg25nIGvDrTo8L3A+XG5cdFx0XHRcdFx0XHRcdFx0PGZvcm0gb25TdWJtaXQ9e29uU3VibWl0fT5cblx0XHRcdFx0XHRcdFx0XHRcdDxBdXRoSW5wdXRcblx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZT0nZW1haWwnXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlkPSdpbnB1dEVtYWlsJ1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR2YWx1ZT17dXNlckluZm8uZW1haWx9XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHBsYWNlaG9sZGVyPSdlbWFpbEBkb21haW4uY29tJ1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRpY29uPSdtYWlsX291dGxpbmUnXG5cdFx0XHRcdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXtvbkNoYW5nZX1cblx0XHRcdFx0XHRcdFx0XHRcdC8+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8QXV0aElucHV0XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU9J3Bhc3N3b3JkJ1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZD0naW5wdXRQYXNzd29yZCdcblx0XHRcdFx0XHRcdFx0XHRcdFx0dmFsdWU9e3VzZXJJbmZvLnBhc3N3b3JkfVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRwbGFjZWhvbGRlcj0nTeG6rXQga2jhuql1J1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRpY29uPSdsb2NrX291dGxpbmUnXG5cdFx0XHRcdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXtvbkNoYW5nZX1cblx0XHRcdFx0XHRcdFx0XHRcdC8+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU9J3N1Ym1pdCdcblx0XHRcdFx0XHRcdFx0XHRcdFx0Y2xhc3NOYW1lPSdidG4gYnV0dG9uJ1xuXHRcdFx0XHRcdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0XHRcdFx0XHTEkMSDbmcgTmjhuq1wXG5cdFx0XHRcdFx0XHRcdFx0XHQ8L2J1dHRvbj5cblx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjYWxsb3V0Jz5cblx0XHRcdFx0XHRcdFx0XHRcdFx0PHNwYW4+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Q2jGsGEgY8OzIHTDoGkga2hv4bqjbj8gJm5ic3A7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0PExpbmsgdG89Jy9zaWduLXVwJz5U4bqhbyBuZ2F5PC9MaW5rPlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8L3NwYW4+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHRcdFx0XHQ8L2Zvcm0+XG5cdFx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0PC9kaXY+XG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nYXNpZGUgb3JkZXItbWQtMic+XG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb2wtbWQtMTInPlxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3ByZWZlcmVuY2UnPlxuXHRcdFx0XHRcdFx0XHQ8aDI+SGVsbG8sIEZyaWVuZCE8L2gyPlxuXHRcdFx0XHRcdFx0XHQ8cD5cblx0XHRcdFx0XHRcdFx0XHROaOG6rXAgdGjDtG5nIHRpbiB0w6BpIGtob+G6o24gdsOgIGLhuq90IMSR4bqndSBow6BuaCB0csOsbmhcblx0XHRcdFx0XHRcdFx0XHR24bubaSBRdWFuQ2hhdCBuZ2F5IG7DoG8uXG5cdFx0XHRcdFx0XHRcdDwvcD5cblx0XHRcdFx0XHRcdFx0PExpbmsgdG89Jy9zaWduLXVwJyBjbGFzc05hbWU9J2J0biBidXR0b24nPlxuXHRcdFx0XHRcdFx0XHRcdMSQxINuZyBrw61cblx0XHRcdFx0XHRcdFx0PC9MaW5rPlxuXHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0PC9kaXY+XG5cdFx0PC9kaXY+XG5cdCk7XG59XG5cbi8qIGVzbGludC1lbmFibGUgKi9cbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xyXG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XHJcblxyXG5pbXBvcnQgeyBBdXRoSW5wdXQgfSBmcm9tICcuLi9Gb3JtQ29udHJvbHMnO1xyXG5pbXBvcnQgeyBzaWduVXAgfSBmcm9tICcuLi8uLi9hY3Rpb25zJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNpZ25VcCgpIHtcclxuXHRjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XHJcblx0Y29uc3QgW3VzZXJJbmZvLCBzZXRVc2VySW5mb10gPSB1c2VTdGF0ZSh7XHJcblx0XHRuYW1lOiAnJyxcclxuXHRcdGVtYWlsOiAnJyxcclxuXHRcdHBhc3N3b3JkOiAnJ1xyXG5cdH0pO1xyXG5cclxuXHRjb25zdCBvbkNoYW5nZSA9IGV2ZW50ID0+IHtcclxuXHRcdGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcclxuXHRcdGNvbnN0IHsgbmFtZSwgdmFsdWUgfSA9IHRhcmdldDtcclxuXHRcdHNldFVzZXJJbmZvKHsgLi4udXNlckluZm8sIFtuYW1lXTogdmFsdWUgfSk7XHJcblx0fTtcclxuXHJcblx0Y29uc3Qgb25TdWJtaXQgPSBldmVudCA9PiB7XHJcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0Y29uc3QgeyBuYW1lLCBlbWFpbCwgcGFzc3dvcmQgfSA9IHVzZXJJbmZvO1xyXG5cclxuXHRcdGlmIChuYW1lLnRyaW0oKSAmJiBlbWFpbC50cmltKCkgJiYgcGFzc3dvcmQudHJpbSgpKSB7XHJcblx0XHRcdGRpc3BhdGNoKHNpZ25VcChuYW1lLCBlbWFpbCwgcGFzc3dvcmQpKTtcclxuXHRcdFx0c2V0VXNlckluZm8oeyBuYW1lOiAnJywgZW1haWw6ICcnLCBwYXNzd29yZDogJycgfSk7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxkaXYgY2xhc3NOYW1lPSdhcHAnPlxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nbWFpbiBvcmRlci1tZC0yJz5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nc3RhcnQnPlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2NvbnRhaW5lcic+XHJcblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb2wtbWQtMTInPlxyXG5cdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250ZW50Jz5cclxuXHRcdFx0XHRcdFx0XHRcdDxoMT5U4bqhbyB0w6BpIGtob+G6o248L2gxPlxyXG5cdFx0XHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3RoaXJkLXBhcnR5Jz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBpdGVtIGJnLWJsdWUnPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMnPnBhZ2VzPC9pPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8L2J1dHRvbj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBpdGVtIGJnLXRlYWwnPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMnPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0cGFydHlfbW9kZVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDwvaT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxidXR0b24gY2xhc3NOYW1lPSdidG4gaXRlbSBiZy1wdXJwbGUnPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMnPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0d2hhdHNob3RcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8L2k+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHQ8cD5T4butIGThu6VuZyBlbWFpbCBj4bunYSBi4bqhbiDEkeG7gyDEkcSDbmcga8OtOjwvcD5cclxuXHRcdFx0XHRcdFx0XHRcdDxmb3JtIGNsYXNzTmFtZT0nc2lnbnVwJyBvblN1Ym1pdD17b25TdWJtaXR9PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nZm9ybS1wYXJlbnQnPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxBdXRoSW5wdXRcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU9J25hbWUnXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZD0naW5wdXROYW1lJ1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dmFsdWU9e3VzZXJJbmZvLm5hbWV9XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwbGFjZWhvbGRlcj0nVMOqbiBuZ8aw4budaSBkw7luZydcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGljb249J3BlcnNvbl9vdXRsaW5lJ1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0b25DaGFuZ2U9e29uQ2hhbmdlfVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0PEF1dGhJbnB1dFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZT0nZW1haWwnXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZD0naW5wdXRFbWFpbCdcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHZhbHVlPXt1c2VySW5mby5lbWFpbH1cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHBsYWNlaG9sZGVyPSfEkOG7i2EgY2jhu4kgRW1haWwnXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpY29uPSdtYWlsX291dGxpbmUnXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRvbkNoYW5nZT17b25DaGFuZ2V9XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxBdXRoSW5wdXRcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlPSdwYXNzd29yZCdcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZD0naW5wdXRQYXNzd29yZCdcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR2YWx1ZT17dXNlckluZm8ucGFzc3dvcmR9XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0cGxhY2Vob2xkZXI9J03huq10IGto4bqpdSdcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpY29uPSdsb2NrX291dGxpbmUnXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0b25DaGFuZ2U9e29uQ2hhbmdlfVxyXG5cdFx0XHRcdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZT0nc3VibWl0J1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT0nYnRuIGJ1dHRvbidcclxuXHRcdFx0XHRcdFx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdMSQxINuZyBrw61cclxuXHRcdFx0XHRcdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjYWxsb3V0Jz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8c3Bhbj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdMSQw6MgY8OzIHTDoGkga2hv4bqjbj8gJm5ic3A7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8TGluayB0bz0nLyc+xJDEg25nIE5o4bqtcDwvTGluaz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8L3NwYW4+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0PC9mb3JtPlxyXG5cdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J2FzaWRlIG9yZGVyLW1kLTEnPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2NvbC1tZC0xMic+XHJcblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdwcmVmZXJlbmNlJz5cclxuXHRcdFx0XHRcdFx0XHQ8aDI+V2VsY29tZSBCYWNrITwvaDI+XHJcblx0XHRcdFx0XHRcdFx0PHA+XHJcblx0XHRcdFx0XHRcdFx0XHTEkOG7gyBnaeG7ryBr4bq/dCBu4buRaSB24bubaSBi4bqhbiBiw6gsIHZ1aSBsw7JuZyBz4butIGThu6VuZ1xyXG5cdFx0XHRcdFx0XHRcdFx0dGjDtG5nIHRpbiB0w6BpIGtob+G6o24gbcOgIGLhuqFuIMSRw6MgxJHEg25nIGvDrSAuXHJcblx0XHRcdFx0XHRcdFx0PC9wPlxyXG5cdFx0XHRcdFx0XHRcdDxMaW5rIHRvPScvJyBjbGFzc05hbWU9J2J0biBidXR0b24nPlxyXG5cdFx0XHRcdFx0XHRcdFx0xJDEg25nIG5o4bqtcFxyXG5cdFx0XHRcdFx0XHRcdDwvTGluaz5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQ8L2Rpdj5cclxuXHQpO1xyXG59XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VTZWxlY3RvciwgdXNlRGlzcGF0Y2ggfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcbmltcG9ydCB7IHNpZ25PdXQgfSBmcm9tICcuLi8uLi9hY3Rpb25zJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5hdmlnYXRpb24oKSB7XHJcblx0Y29uc3QgeyBhdmF0YXJVUkwgfSA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlLmN1cnJlbnRVc2VyKTtcclxuXHRjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XHJcblx0Y29uc3Qgb25Qb3dlciA9ICgpID0+IGRpc3BhdGNoKHNpZ25PdXQoKSk7XHJcblxyXG5cdHJldHVybiAoXHJcblx0XHQ8ZGl2IGNsYXNzTmFtZT0nbmF2aWdhdGlvbic+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdpbnNpZGUnPlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J25hdiBuYXYtdGFiIG1lbnUnPlxyXG5cdFx0XHRcdFx0XHQ8YnV0dG9uIGNsYXNzTmFtZT0nYnRuJz5cclxuXHRcdFx0XHRcdFx0XHQ8aW1nIGNsYXNzTmFtZT0nYXZhdGFyLXhsJyBzcmM9e2F2YXRhclVSTH0gLz5cclxuXHRcdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0XHRcdDxhXHJcblx0XHRcdFx0XHRcdFx0aHJlZj0nI2Rpc2N1c3Npb25zJ1xyXG5cdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT0nYWN0aXZlIGYtZ3JvdzEnXHJcblx0XHRcdFx0XHRcdFx0ZGF0YS10b2dnbGU9J3RhYidcclxuXHRcdFx0XHRcdFx0PlxyXG5cdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgYWN0aXZlJz5cclxuXHRcdFx0XHRcdFx0XHRcdGNoYXRfYnViYmxlX291dGxpbmVcclxuXHRcdFx0XHRcdFx0XHQ8L2k+XHJcblx0XHRcdFx0XHRcdDwvYT5cclxuXHRcdFx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBtb2RlJz5cclxuXHRcdFx0XHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zJz5icmlnaHRuZXNzXzI8L2k+XHJcblx0XHRcdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHQ8YnV0dG9uIGNsYXNzTmFtZT0nYnRuIHBvd2VyJyBvbkNsaWNrPXtvblBvd2VyfT5cclxuXHRcdFx0XHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zJz5wb3dlcl9zZXR0aW5nc19uZXc8L2k+XHJcblx0XHRcdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgT3ZlcmxheVRyaWdnZXIsIFRvb2x0aXAgfSBmcm9tICdyZWFjdC1ib290c3RyYXAnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXZhdGFyKHByb3BzKSB7XHJcblx0Y29uc3QgeyBuYW1lLCB0eXBlLCB0b29sdGlwLCBzaXplIH0gPSBwcm9wcztcclxuXHRjb25zdCBhdmF0YXJTaXplID0gIXNpemUgPyAnYXZhdGFyLW1kJyA6IGBhdmF0YXItJHtzaXplfWA7XHJcblx0dmFyIGF2YXRhckFQSSA9ICdodHRwczovL2F2YXRhcnMuZGljZWJlYXIuY29tL3YyJztcclxuXHJcblx0aWYgKHR5cGUgPT09ICdyb29tJykge1xyXG5cdFx0YXZhdGFyQVBJID0gYCR7YXZhdGFyQVBJfS9qZGVudGljb24vJHtuYW1lfS5zdmdgO1xyXG5cdH0gZWxzZSBpZiAodHlwZSA9PT0gJ3VzZXInKSB7XHJcblx0XHR2YXIgb3B0aW9ucyA9IHsgZXllczogJ3NxdWludCcsIGV5ZWJyb3c6ICdyYWlzZWQnLCBtb3V0aDogJ3NtaWxlJyB9O1xyXG5cdFx0b3B0aW9ucyA9IE9iamVjdC5rZXlzKG9wdGlvbnMpLnJlZHVjZSgocmVzLCBrZXkpID0+IHtcclxuXHRcdFx0cmV0dXJuIGAke3Jlc31vcHRpb25zWyR7a2V5fV1bXT0ke29wdGlvbnNba2V5XX0mYDtcclxuXHRcdH0sIFtdKTtcclxuXHRcdGF2YXRhckFQSSA9IGAke2F2YXRhckFQSX0vYXZhdGFhYXJzLyR7bmFtZX0uc3ZnPyR7b3B0aW9uc31gO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxPdmVybGF5VHJpZ2dlciBwbGFjZW1lbnQ9e3Rvb2x0aXB9IG92ZXJsYXk9ezxUb29sdGlwPntuYW1lfTwvVG9vbHRpcD59PlxyXG5cdFx0XHQ8aW1nIGNsYXNzTmFtZT17YXZhdGFyU2l6ZX0gc3JjPXthdmF0YXJBUEl9IGFsdD17bmFtZX0gLz5cclxuXHRcdDwvT3ZlcmxheVRyaWdnZXI+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xyXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IsIHVzZURpc3BhdGNoIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xyXG5pbXBvcnQgeyB0b2dnbGVDYWxsLCB0b2dnbGVVc2Vyc0JhciB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xyXG5pbXBvcnQgQXZhdGFyIGZyb20gJy4uL0F2YXRhcic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUb3BCYXIoKSB7XHJcblx0Y29uc3QgeyBpZCwgbmFtZSwgaXNQcml2YXRlIH0gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS5yb29tQWN0aXZlKTtcclxuXHRjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XHJcblx0Y29uc3QgYXZhdGFyVHlwZSA9IGlzUHJpdmF0ZSA/ICd1c2VyJyA6ICdyb29tJztcclxuXHJcblx0Y29uc3Qgb25QaG9uZUNoYXQgPSAoKSA9PiB7XHJcblx0XHRpZiAoaWQpIGRpc3BhdGNoKHRvZ2dsZUNhbGwoKSk7XHJcblx0fTtcclxuXHRjb25zdCBvblZpZGVvQ2hhdCA9ICgpID0+IHtcclxuXHRcdGlmIChpZCkgZGlzcGF0Y2godG9nZ2xlQ2FsbCh0cnVlKSk7XHJcblx0fTtcclxuXHRjb25zdCBvblNob3dNZW1iZXJzID0gKCkgPT4ge1xyXG5cdFx0aWYgKGlkKSBkaXNwYXRjaCh0b2dnbGVVc2Vyc0JhcigpKTtcclxuXHR9O1xyXG5cclxuXHRyZXR1cm4gKFxyXG5cdFx0PGRpdiBjbGFzc05hbWU9J3RvcCc+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb2wtbWQtMTInPlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2luc2lkZSc+XHJcblx0XHRcdFx0XHRcdDxhIGhyZWY9JyMnPlxyXG5cdFx0XHRcdFx0XHRcdDxBdmF0YXJcclxuXHRcdFx0XHRcdFx0XHRcdG5hbWU9e25hbWV9XHJcblx0XHRcdFx0XHRcdFx0XHR0eXBlPXthdmF0YXJUeXBlfVxyXG5cdFx0XHRcdFx0XHRcdFx0dG9vbHRpcD0nYm90dG9tJ1xyXG5cdFx0XHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHRcdDwvYT5cclxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3N0YXR1cyc+XHJcblx0XHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBvbmxpbmUnPlxyXG5cdFx0XHRcdFx0XHRcdFx0ZmliZXJfbWFudWFsX3JlY29yZFxyXG5cdFx0XHRcdFx0XHRcdDwvaT5cclxuXHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdkYXRhJz5cclxuXHRcdFx0XHRcdFx0XHQ8aDU+e25hbWV9PC9oNT5cclxuXHRcdFx0XHRcdFx0XHQ8c3Bhbj5BY3RpdmUgbm93PC9zcGFuPlxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0bicgb25DbGljaz17b25QaG9uZUNoYXR9PlxyXG5cdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWQtMzAnPlxyXG5cdFx0XHRcdFx0XHRcdFx0cGhvbmVfaW5fdGFsa1xyXG5cdFx0XHRcdFx0XHRcdDwvaT5cclxuXHRcdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0XHRcdDxidXR0b24gY2xhc3NOYW1lPSdidG4nIG9uQ2xpY2s9e29uVmlkZW9DaGF0fT5cclxuXHRcdFx0XHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zIG1kLTM2Jz52aWRlb2NhbTwvaT5cclxuXHRcdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0XHRcdDxidXR0b24gY2xhc3NOYW1lPSdidG4nIG9uQ2xpY2s9e29uU2hvd01lbWJlcnN9PlxyXG5cdFx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWQtMzAnPmluZm88L2k+XHJcblx0XHRcdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFVzZXJDb250cm9scyB9IGZyb20gJ0BhbmR5ZXQvc2ltcGxld2VicnRjJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTG9jYWxPcHRpb25zKHByb3BzKSB7XG5cdHJldHVybiAoXG5cdFx0PFVzZXJDb250cm9sc1xuXHRcdFx0cmVuZGVyPXsoe1xuXHRcdFx0XHRpc011dGVkLFxuXHRcdFx0XHRpc1BhdXNlZCxcblx0XHRcdFx0bXV0ZSxcblx0XHRcdFx0dW5tdXRlLFxuXHRcdFx0XHRyZXN1bWVWaWRlbyxcblx0XHRcdFx0cGF1c2VWaWRlb1xuXHRcdFx0fSkgPT4gKFxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nb3B0aW9ucyc+XG5cdFx0XHRcdFx0PGJ1dHRvblxuXHRcdFx0XHRcdFx0Y2xhc3NOYW1lPSdidG4gb3B0aW9uJ1xuXHRcdFx0XHRcdFx0b25DbGljaz17KCkgPT5cblx0XHRcdFx0XHRcdFx0aXNQYXVzZWQgPyByZXN1bWVWaWRlbygpIDogcGF1c2VWaWRlbygpXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBtZC0zMCc+XG5cdFx0XHRcdFx0XHRcdHtpc1BhdXNlZCA/ICdwbGF5X2Fycm93JyA6ICdwYXVzZSd9XG5cdFx0XHRcdFx0XHQ8L2k+XG5cdFx0XHRcdFx0PC9idXR0b24+XG5cdFx0XHRcdFx0e3Byb3BzLmNoaWxkcmVufVxuXHRcdFx0XHRcdDxidXR0b25cblx0XHRcdFx0XHRcdGNsYXNzTmFtZT0nYnRuIG9wdGlvbidcblx0XHRcdFx0XHRcdG9uQ2xpY2s9eygpID0+IChpc011dGVkID8gdW5tdXRlKCkgOiBtdXRlKCkpfVxuXHRcdFx0XHRcdD5cblx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0nbWF0ZXJpYWwtaWNvbnMgbWQtMzAnPlxuXHRcdFx0XHRcdFx0XHR7aXNNdXRlZCA/ICd2b2x1bWVfb2ZmJyA6ICd2b2x1bWVfdXAnfVxuXHRcdFx0XHRcdFx0PC9pPlxuXHRcdFx0XHRcdDwvYnV0dG9uPlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdCl9XG5cdFx0Lz5cblx0KTtcbn1cbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IHtcclxuXHRSZXF1ZXN0RGlzcGxheU1lZGlhLFxyXG5cdFJlcXVlc3RVc2VyTWVkaWEsXHJcblx0TWVkaWFDb250cm9sc1xyXG59IGZyb20gJ0BhbmR5ZXQvc2ltcGxld2VicnRjJztcclxuXHJcbmltcG9ydCB7IHRvZ2dsZUNhbGwgfSBmcm9tICcuLi8uLi9hY3Rpb25zJztcclxuaW1wb3J0IExvY2FsT3B0aW9ucyBmcm9tICcuL0xvY2FsT3B0aW9ucyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBPcHRpb25zKHByb3BzKSB7XHJcblx0Y29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xyXG5cdGNvbnN0IHsgbG9jYWxWaWRlb3MsIGxvY2FsU2NyZWVuIH0gPSBwcm9wcztcclxuXHRyZXR1cm4gKFxyXG5cdFx0PExvY2FsT3B0aW9ucz5cclxuXHRcdFx0e2xvY2FsVmlkZW9zICYmIGxvY2FsVmlkZW9zLmxlbmd0aCA/IChcclxuXHRcdFx0XHQ8TWVkaWFDb250cm9sc1xyXG5cdFx0XHRcdFx0bWVkaWE9e2xvY2FsVmlkZW9zWzBdfVxyXG5cdFx0XHRcdFx0YXV0b1JlbW92ZVxyXG5cdFx0XHRcdFx0cmVuZGVyPXsoeyByZW1vdmUgfSkgPT4gKFxyXG5cdFx0XHRcdFx0XHQ8YnV0dG9uIGNsYXNzTmFtZT0nYnRuIG9wdGlvbicgb25DbGljaz17cmVtb3ZlfT5cclxuXHRcdFx0XHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zIG1kLTMwJz52aWRlb2NhbV9vZmY8L2k+XHJcblx0XHRcdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0KX1cclxuXHRcdFx0XHQvPlxyXG5cdFx0XHQpIDogKFxyXG5cdFx0XHRcdDxSZXF1ZXN0VXNlck1lZGlhXHJcblx0XHRcdFx0XHR2aWRlb1xyXG5cdFx0XHRcdFx0YXVkaW9cclxuXHRcdFx0XHRcdHJlbmRlcj17Z2V0VXNlck1lZGlhID0+IChcclxuXHRcdFx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBvcHRpb24nIG9uQ2xpY2s9e2dldFVzZXJNZWRpYX0+XHJcblx0XHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBtZC0zMCc+dmlkZW9jYW08L2k+XHJcblx0XHRcdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0KX1cclxuXHRcdFx0XHQvPlxyXG5cdFx0XHQpfVxyXG5cdFx0XHQ8YnV0dG9uXHJcblx0XHRcdFx0Y2xhc3NOYW1lPSdidG4gb3B0aW9uIGNhbGwtZW5kJ1xyXG5cdFx0XHRcdG9uQ2xpY2s9eygpID0+IGRpc3BhdGNoKHRvZ2dsZUNhbGwoKSl9XHJcblx0XHRcdD5cclxuXHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zIG1kLTMwJz5jYWxsX2VuZDwvaT5cclxuXHRcdFx0PC9idXR0b24+XHJcblx0XHRcdHtsb2NhbFNjcmVlbiA/IChcclxuXHRcdFx0XHQ8TWVkaWFDb250cm9sc1xyXG5cdFx0XHRcdFx0bWVkaWE9e2xvY2FsU2NyZWVufVxyXG5cdFx0XHRcdFx0YXV0b1JlbW92ZVxyXG5cdFx0XHRcdFx0cmVuZGVyPXsoeyBzdG9wU2hhcmluZyB9KSA9PiAoXHJcblx0XHRcdFx0XHRcdDxidXR0b24gY2xhc3NOYW1lPSdidG4gb3B0aW9uJyBvbkNsaWNrPXtzdG9wU2hhcmluZ30+XHJcblx0XHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBtZC0zMCc+XHJcblx0XHRcdFx0XHRcdFx0XHRzdG9wX3NjcmVlbl9zaGFyZVxyXG5cdFx0XHRcdFx0XHRcdDwvaT5cclxuXHRcdFx0XHRcdFx0PC9idXR0b24+XHJcblx0XHRcdFx0XHQpfVxyXG5cdFx0XHRcdC8+XHJcblx0XHRcdCkgOiAoXHJcblx0XHRcdFx0PFJlcXVlc3REaXNwbGF5TWVkaWFcclxuXHRcdFx0XHRcdHJlbmRlcj17Z2V0RGlzcGxheU1lZGlhID0+IChcclxuXHRcdFx0XHRcdFx0PGJ1dHRvblxyXG5cdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT0nYnRuIG9wdGlvbidcclxuXHRcdFx0XHRcdFx0XHRvbkNsaWNrPXtnZXREaXNwbGF5TWVkaWF9XHJcblx0XHRcdFx0XHRcdD5cclxuXHRcdFx0XHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zIG1kLTMwJz5zY3JlZW5fc2hhcmU8L2k+XHJcblx0XHRcdFx0XHRcdDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0KX1cclxuXHRcdFx0XHQvPlxyXG5cdFx0XHQpfVxyXG5cdFx0PC9Mb2NhbE9wdGlvbnM+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVNlbGVjdG9yLCB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcblxuaW1wb3J0IHsgdG9nZ2xlQ2FsbCB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xuaW1wb3J0IEF2YXRhciBmcm9tICcuLi9BdmF0YXInO1xuaW1wb3J0IE9wdGlvbnMgZnJvbSAnLi9PcHRpb25zJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU3RhdHVzKHByb3BzKSB7XG5cdGNvbnN0IHsgbmFtZSwgaXNQcml2YXRlIH0gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS5yb29tQWN0aXZlKTtcblx0Y29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuXG5cdGNvbnN0IGF2YXRhclR5cGUgPSBpc1ByaXZhdGUgPyAndXNlcicgOiAncm9vbSc7XG5cdGNvbnN0IG9uQ2xvc2VDYWxsID0gKCkgPT4gZGlzcGF0Y2godG9nZ2xlQ2FsbCgpKTtcblxuXHRyZXR1cm4gKFxuXHRcdDxkaXYgY2xhc3NOYW1lPSdjb250ZW50Jz5cblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29sLW1kLTEyJz5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0naW5zaWRlJz5cblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdwYW5lbCc+XG5cdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdwYXJ0aWNpcGFudCc+XG5cdFx0XHRcdFx0XHRcdFx0PEF2YXRhclxuXHRcdFx0XHRcdFx0XHRcdFx0bmFtZT17bmFtZX1cblx0XHRcdFx0XHRcdFx0XHRcdHR5cGU9e2F2YXRhclR5cGV9XG5cdFx0XHRcdFx0XHRcdFx0XHR0b29sdGlwPSdib3R0b20nXG5cdFx0XHRcdFx0XHRcdFx0XHRzaXplPSd4eGwnXG5cdFx0XHRcdFx0XHRcdFx0Lz5cblx0XHRcdFx0XHRcdFx0XHQ8c3Bhbj57cHJvcHMudmFsdWV9PC9zcGFuPlxuXHRcdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHRcdFx0PE9wdGlvbnMgLz5cblx0XHRcdFx0XHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9J2J0biBiYWNrJyBvbkNsaWNrPXtvbkNsb3NlQ2FsbH0+XG5cdFx0XHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPSdtYXRlcmlhbC1pY29ucyBtZC0yNCc+Y2hhdDwvaT5cblx0XHRcdFx0XHRcdFx0PC9idXR0b24+XG5cdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L2Rpdj5cblx0XHQ8L2Rpdj5cblx0KTtcbn1cblxuLyogZXNsaW50LWVuYWJsZSAqL1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVNlbGVjdG9yLCB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IE5ld1dpbmRvdyBmcm9tICdyZWFjdC1uZXctd2luZG93JztcclxuaW1wb3J0IHtcclxuXHRSb29tLFxyXG5cdFZpZGVvLFxyXG5cdFByb3ZpZGVyLFxyXG5cdENvbm5lY3RlZCxcclxuXHRHcmlkTGF5b3V0LFxyXG5cdENvbm5lY3RpbmcsXHJcblx0RGlzY29ubmVjdGVkLFxyXG5cdFJlcXVlc3RVc2VyTWVkaWEsXHJcblx0UmVtb3RlQXVkaW9QbGF5ZXJcclxufSBmcm9tICdAYW5keWV0L3NpbXBsZXdlYnJ0Yyc7XHJcblxyXG5pbXBvcnQgeyBrZXksIFNXUlRDX0NPTkZJR19VUkwgfSBmcm9tICcuLi8uLi9jb25maWcnO1xyXG5pbXBvcnQgeyB0b2dnbGVDYWxsIH0gZnJvbSAnLi4vLi4vYWN0aW9ucyc7XHJcblxyXG5pbXBvcnQgU3RhdHVzIGZyb20gJy4vU3RhdHVzJztcclxuaW1wb3J0IE9wdGlvbnMgZnJvbSAnLi9PcHRpb25zJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFZpZGVvQ2hhdCgpIHtcclxuXHRjb25zdCB7IHJvb21BY3RpdmUsIHZpZGVvQ2hhdCB9ID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUpO1xyXG5cdGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcclxuXHJcblx0Y29uc3QgeyBpZCwgbmFtZSB9ID0gcm9vbUFjdGl2ZTtcclxuXHRjb25zdCBvblVubG9hZCA9ICgpID0+IGRpc3BhdGNoKHRvZ2dsZUNhbGwoKSk7XHJcblxyXG5cdHJldHVybiAoXHJcblx0XHQ8TmV3V2luZG93IHRpdGxlPXtuYW1lfSBvblVubG9hZD17b25VbmxvYWR9PlxyXG5cdFx0XHQ8bGlua1xyXG5cdFx0XHRcdGhyZWY9J2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vaWNvbj9mYW1pbHk9TWF0ZXJpYWwrSWNvbnMnXHJcblx0XHRcdFx0cmVsPSdzdHlsZXNoZWV0J1xyXG5cdFx0XHQ+PC9saW5rPlxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY2FsbCc+XHJcblx0XHRcdFx0PFByb3ZpZGVyIGNvbmZpZ1VybD17U1dSVENfQ09ORklHX1VSTH0+XHJcblx0XHRcdFx0XHQ8Q29ubmVjdGluZz5cclxuXHRcdFx0XHRcdFx0PFN0YXR1cyB2YWx1ZT0nxJBhbmcga+G6v3QgbuG7kWknIC8+XHJcblx0XHRcdFx0XHQ8L0Nvbm5lY3Rpbmc+XHJcblx0XHRcdFx0XHQ8RGlzY29ubmVjdGVkPlxyXG5cdFx0XHRcdFx0XHQ8U3RhdHVzIHZhbHVlPSdLaMO0bmcgY8OzIGvhur90IG7hu5FpJyAvPlxyXG5cdFx0XHRcdFx0PC9EaXNjb25uZWN0ZWQ+XHJcblx0XHRcdFx0XHQ8Q29ubmVjdGVkPlxyXG5cdFx0XHRcdFx0XHQ8UmVtb3RlQXVkaW9QbGF5ZXIgLz5cclxuXHRcdFx0XHRcdFx0PFJlcXVlc3RVc2VyTWVkaWEgYXVkaW8gYXV0byAvPlxyXG5cdFx0XHRcdFx0XHR7dmlkZW9DaGF0LmNhbSAmJiA8UmVxdWVzdFVzZXJNZWRpYSB2aWRlbyBhdXRvIC8+fVxyXG5cdFx0XHRcdFx0XHQ8Um9vbSByb29tQWRkcmVzcz17aWR9IG5hbWU9e25hbWV9IHBhc3N3b3JkPXtrZXl9PlxyXG5cdFx0XHRcdFx0XHRcdHsoeyBsb2NhbE1lZGlhLCByZW1vdGVNZWRpYSB9KSA9PiB7XHJcblx0XHRcdFx0XHRcdFx0XHRjb25zdCByZW1vdGVWaWRlb3MgPSByZW1vdGVNZWRpYS5maWx0ZXIoXHJcblx0XHRcdFx0XHRcdFx0XHRcdG0gPT4gbS5raW5kID09PSAndmlkZW8nXHJcblx0XHRcdFx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0XHRcdFx0Y29uc3QgbG9jYWxWaWRlb3MgPSBsb2NhbE1lZGlhLmZpbHRlcihcclxuXHRcdFx0XHRcdFx0XHRcdFx0bSA9PiBtLmtpbmQgPT09ICd2aWRlbycgJiYgbS5zaGFyZWRcclxuXHRcdFx0XHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0XHRcdFx0XHRjb25zdCBsb2NhbFNjcmVlbnMgPSBsb2NhbFZpZGVvcy5maWx0ZXIoXHJcblx0XHRcdFx0XHRcdFx0XHRcdG0gPT4gbS5zY3JlZW5DYXB0dXJlXHJcblx0XHRcdFx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIChcclxuXHRcdFx0XHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J3ZpZGVvLWNoYXQnPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxHcmlkTGF5b3V0XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9J3ctMTAwJ1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aXRlbXM9e1tcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0bG9jYWxWaWRlb3NbMF0sXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdC4uLmxvY2FsU2NyZWVucyxcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Li4ucmVtb3RlVmlkZW9zXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRdfVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVuZGVyQ2VsbD17aXRlbSA9PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpdGVtICYmIDxWaWRlbyBtZWRpYT17aXRlbX0gLz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxPcHRpb25zXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRsb2NhbFZpZGVvcz17bG9jYWxWaWRlb3N9XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRsb2NhbFNjcmVlbj17bG9jYWxTY3JlZW5zWzBdfVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0KTtcclxuXHRcdFx0XHRcdFx0XHR9fVxyXG5cdFx0XHRcdFx0XHQ8L1Jvb20+XHJcblx0XHRcdFx0XHQ8L0Nvbm5lY3RlZD5cclxuXHRcdFx0XHQ8L1Byb3ZpZGVyPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvTmV3V2luZG93PlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCBBdmF0YXIgZnJvbSAnLi4vQXZhdGFyJztcbmltcG9ydCB7IFNvcnRNZW1iZXJzIH0gZnJvbSAnLi4vRm9ybUNvbnRyb2xzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVXNlckxpc3QoeyBtYXRjaCB9KSB7XG5cdGNvbnN0IHsgcm9vbUFjdGl2ZSwgcm9vbVVzZXJzLCB1c2VyU29ydCwgc2hvd1VzZXJzQmFyIH0gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZSk7XG5cdGNvbnN0IHsgbmFtZSwgY3JlYXRlZEJ5VXNlcklkLCBpc1ByaXZhdGUgfSA9IHJvb21BY3RpdmU7XG5cdGNvbnN0IGF2YXRhclR5cGUgPSBpc1ByaXZhdGUgPyAndXNlcicgOiAncm9vbSc7XG5cdHJldHVybiAoXG5cdFx0PGRpdiBjbGFzc05hbWU9e2BzaWRlYmFyICR7IXNob3dVc2Vyc0JhciAmJiAnZC1ub25lJ31gfT5cblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29sLW1kLTEyJz5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0naW5mbyc+XG5cdFx0XHRcdFx0XHQ8QXZhdGFyXG5cdFx0XHRcdFx0XHRcdG5hbWU9e25hbWV9XG5cdFx0XHRcdFx0XHRcdHR5cGU9e2F2YXRhclR5cGV9XG5cdFx0XHRcdFx0XHRcdHRvb2x0aXA9J2JvdHRvbSdcblx0XHRcdFx0XHRcdFx0c2l6ZT0neGwnXG5cdFx0XHRcdFx0XHQvPlxuXHRcdFx0XHRcdFx0PGg0PntuYW1lfTwvaDQ+XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2NvbnRhY3RzJz5cblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdzb3J0LW1lbWJlcnMnPlxuXHRcdFx0XHRcdFx0XHQ8aDE+VGjDoG5oIHZpw6puPC9oMT5cblx0XHRcdFx0XHRcdFx0PFNvcnRNZW1iZXJzIC8+XG5cdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdsaXN0LWdyb3VwJz5cblx0XHRcdFx0XHRcdFx0e3Jvb21Vc2Vyc1xuXHRcdFx0XHRcdFx0XHRcdC5zb3J0KChhLCBiKSA9PiB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb25zdCB7IGJ5LCB2YWx1ZSB9ID0gdXNlclNvcnQ7XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoYnkgPT0gJ25hbWUnKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmIChhLm5hbWUudG9Mb3dlckNhc2UoKSA+IGIubmFtZS50b0xvd2VyQ2FzZSgpKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKGEubmFtZS50b0xvd2VyQ2FzZSgpIDwgYi5uYW1lLnRvTG93ZXJDYXNlKCkpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIC12YWx1ZTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIDA7XG5cdFx0XHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKGJ5ID09ICdzdGF0dXMnKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmIChhLnByZXNlbmNlLnN0YXRlID4gYi5wcmVzZW5jZS5zdGF0ZSlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gLXZhbHVlO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoYS5wcmVzZW5jZS5zdGF0ZSA8IGIucHJlc2VuY2Uuc3RhdGUpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gMDtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdFx0XHRcdC5tYXAodXNlciA9PiB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb25zdCB7IGlkLCBuYW1lLCBwcmVzZW5jZSwgY3JlYXRlZEF0IH0gPSB1c2VyO1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29uc3QgcGF0aCA9ICd1c2VyPScgKyBpZDtcblx0XHRcdFx0XHRcdFx0XHRcdGNvbnN0IGNyZWF0ZWREYXRlID0gbmV3IERhdGUoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNyZWF0ZWRBdFxuXHRcdFx0XHRcdFx0XHRcdFx0KS50b0xvY2FsZURhdGVTdHJpbmcoJ3ZpLVZOJywge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR5ZWFyOiAnMi1kaWdpdCcsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdG1vbnRoOiAnbnVtZXJpYydcblx0XHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIChcblx0XHRcdFx0XHRcdFx0XHRcdFx0PExpbmsga2V5PXtpZH0gdG89e2Ake21hdGNoLnBhdGh9LyR7cGF0aH1gfSBjbGFzc05hbWU9J2NvbnRhY3QnPlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxBdmF0YXIgbmFtZT17bmFtZX0gdHlwZT0ndXNlcicgdG9vbHRpcD0ndG9wJyAvPlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdzdGF0dXMnPlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPXtgbWF0ZXJpYWwtaWNvbnMgJHtwcmVzZW5jZS5zdGF0ZX1gfT5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZmliZXJfbWFudWFsX3JlY29yZFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0PC9pPlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdkYXRhJz5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxoNT57bmFtZX08L2g1PlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0PHA+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHtjcmVhdGVkQnlVc2VySWQgPT09IGlkXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0PyAnUXXhuqNuIHRy4buLIHZpw6puJ1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdDogYMSQxrDhu6NjIHThuqFvIHbDoG8gdGjDoW5nICR7Y3JlYXRlZERhdGV9YH1cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdDwvcD5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ncGVyc29uLWFkZCc+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zJz5wZXJzb248L2k+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdDwvTGluaz5cblx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0fSl9XG5cdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHQ8L2Rpdj5cblx0XHQ8L2Rpdj5cblx0KTtcbn1cblxuLyogZXNsaW50LWVuYWJsZSAqL1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFJvb21CcmllZihwcm9wcykge1xyXG5cdGNvbnN0IHsgY2hhdGtpdCwgc2NyZWVuLCBjdXJyZW50VXNlciwgcm9vbUFjdGl2ZSwgbWVzc2FnZXMgfSA9IHVzZVNlbGVjdG9yKFxyXG5cdFx0c3RhdGUgPT4gc3RhdGVcclxuXHQpO1xyXG5cdGNvbnN0IFtsYXN0TWVzc2FnZSwgc2V0TGFzdE1lc3NhZ2VdID0gdXNlU3RhdGUoe1xyXG5cdFx0c2VuZGVyOiB7IGlkOiAnJywgbmFtZTogJycgfSxcclxuXHRcdGNvbnRlbnQ6ICdDaMawYSBjw7MgdGluIG5o4bqvbicsXHJcblx0XHR1cGRhdGVkX2F0OiAnxJDGsOG7o2MgxJHhu4EgeHXhuqV0J1xyXG5cdH0pO1xyXG5cdGNvbnN0IHsgaWQsIG5hbWUgfSA9IHByb3BzO1xyXG5cclxuXHRjb25zdCBmZXRjaExhc3RNZXNzYWdlID0gYXN5bmMgKCkgPT4ge1xyXG5cdFx0YXdhaXQgY2hhdGtpdFxyXG5cdFx0XHQuZmV0Y2hNdWx0aXBhcnRNZXNzYWdlcyh7IHJvb21JZDogaWQsIGxpbWl0OiAxIH0pXHJcblx0XHRcdC50aGVuKG1lc3NhZ2UgPT4ge1xyXG5cdFx0XHRcdGlmIChtZXNzYWdlLmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0Y29uc3QgeyB1c2VyX2lkLCBwYXJ0cywgdXBkYXRlZF9hdCB9ID0gbWVzc2FnZVswXTtcclxuXHRcdFx0XHRcdGNoYXRraXQuZ2V0VXNlcih7IGlkOiB1c2VyX2lkIH0pLnRoZW4odXNlciA9PiB7XHJcblx0XHRcdFx0XHRcdHNldExhc3RNZXNzYWdlKHtcclxuXHRcdFx0XHRcdFx0XHQuLi5sYXN0TWVzc2FnZSxcclxuXHRcdFx0XHRcdFx0XHRzZW5kZXI6IHsgaWQ6IHVzZXIuaWQsIG5hbWU6IGAke3VzZXIubmFtZX06IGAgfSxcclxuXHRcdFx0XHRcdFx0XHRjb250ZW50OiBwYXJ0c1swXS5jb250ZW50LFxyXG5cdFx0XHRcdFx0XHRcdHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKHVwZGF0ZWRfYXQpLnRvTG9jYWxlRGF0ZVN0cmluZyhcclxuXHRcdFx0XHRcdFx0XHRcdCd2aS1WbicsXHJcblx0XHRcdFx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHdlZWtkYXk6ICduYXJyb3cnLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHR5ZWFyOiAnMi1kaWdpdCcsXHJcblx0XHRcdFx0XHRcdFx0XHRcdG1vbnRoOiAnMi1kaWdpdCcsXHJcblx0XHRcdFx0XHRcdFx0XHRcdGRheTogJzItZGlnaXQnXHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0KVxyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0fTtcclxuXHJcblx0Y29uc3Qgb25TaG93TGFzdE1lc3NhZ2UgPSAoKSA9PiB7XHJcblx0XHRjb25zdCB7IHNlbmRlciwgY29udGVudCB9ID0gbGFzdE1lc3NhZ2U7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8cD5cclxuXHRcdFx0XHR7Y3VycmVudFVzZXIuaWQgPT09IHNlbmRlci5pZCA/ICdC4bqhbjogJyA6IHNlbmRlci5uYW1lfVxyXG5cdFx0XHRcdHtjb250ZW50fVxyXG5cdFx0XHQ8L3A+XHJcblx0XHQpO1xyXG5cdH07XHJcblxyXG5cdHVzZUVmZmVjdCgoKSA9PiB7XHJcblx0XHRpZiAoXHJcblx0XHRcdHNjcmVlbi5jdXJyZW50U2NyZWVuID09PSAnQ2hhdCcgJiZcclxuXHRcdFx0cm9vbUFjdGl2ZS5pZCAmJlxyXG5cdFx0XHRtZXNzYWdlcy5sZW5ndGggPiAwXHJcblx0XHQpXHJcblx0XHRcdGZldGNoTGFzdE1lc3NhZ2UoKTtcclxuXHR9LCBbcm9vbUFjdGl2ZSwgbWVzc2FnZXNdKTtcclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxkaXYgY2xhc3NOYW1lPSdkYXRhJz5cclxuXHRcdFx0PGg1PntuYW1lfTwvaDU+XHJcblx0XHRcdDxzcGFuPntsYXN0TWVzc2FnZS51cGRhdGVkX2F0fTwvc3Bhbj5cclxuXHRcdFx0e29uU2hvd0xhc3RNZXNzYWdlKCl9XHJcblx0XHQ8L2Rpdj5cclxuXHQpO1xyXG59XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xyXG5cclxuaW1wb3J0IHsgQ3JlYXRlUm9vbSwgRmlsdGVyUm9vbXMgfSBmcm9tICcuLi9Gb3JtQ29udHJvbHMnO1xyXG5pbXBvcnQgQXZhdGFyIGZyb20gJy4uL0F2YXRhcic7XHJcbmltcG9ydCBSb29tQnJpZWYgZnJvbSAnLi9Sb29tQnJpZWYnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUm9vbUxpc3QoeyBtYXRjaCB9KSB7XHJcblx0Y29uc3QgeyBjdXJyZW50VXNlciwgcm9vbXMsIHJvb21BY3RpdmUsIHJvb21GaWx0ZXIgfSA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlKTtcclxuXHRjb25zdCBvblVucmVhZENvdW50ID0gdW5yZWFkQ291bnQgPT4ge1xyXG5cdFx0aWYgKHVucmVhZENvdW50ID4gMCkge1xyXG5cdFx0XHRjb25zdCBjb2xvciA9IHVucmVhZENvdW50ID4gMTAgPyAncGluaycgOiAneWVsbG93JztcclxuXHRcdFx0cmV0dXJuIChcclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT17YG5ldyBiZy0ke2NvbG9yfWB9PlxyXG5cdFx0XHRcdFx0PHNwYW4+e3VucmVhZENvdW50fTwvc3Bhbj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHR9O1xyXG5cdHJldHVybiAoXHJcblx0XHQ8ZGl2IGNsYXNzTmFtZT0nc2lkZWJhcic+XHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb2wtbWQtMTInPlxyXG5cdFx0XHRcdFx0PEZpbHRlclJvb21zIC8+XHJcblx0XHRcdFx0XHQ8Q3JlYXRlUm9vbSAvPlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2Rpc2N1c3Npb25zJz5cclxuXHRcdFx0XHRcdFx0PGgxPkPDoWMgcGjDsm5nIGNoYXQ8L2gxPlxyXG5cdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nbGlzdC1ncm91cCc+XHJcblx0XHRcdFx0XHRcdFx0e3Jvb21zXHJcblx0XHRcdFx0XHRcdFx0XHQuZmlsdGVyKHJvb20gPT4ge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIXJvb20uaWQpIHJldHVybjtcclxuXHRcdFx0XHRcdFx0XHRcdFx0Y29uc3Qgcm9vbU5hbWUgPSByb29tLm5hbWUudG9Mb3dlckNhc2UoKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0Y29uc3Qgcm9vbVN0YXR1cyA9IHJvb20udW5yZWFkQ291bnQgPiAwID8gLTEgOiAxO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRjb25zdCB7IG5hbWUsIHN0YXR1cyB9ID0gcm9vbUZpbHRlcjtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdGlmIChzdGF0dXMgPT09IDApIHJldHVybiByb29tTmFtZS5pbmRleE9mKG5hbWUpICE9PSAtMTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHJvb21OYW1lLmluZGV4T2YobmFtZSkgIT09IC0xICYmIHJvb21TdGF0dXMgPT09IHN0YXR1cztcclxuXHRcdFx0XHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHRcdFx0XHQubWFwKHJvb20gPT4ge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIXJvb20uaWQpIHJldHVybjtcclxuXHRcdFx0XHRcdFx0XHRcdFx0Y29uc3QgeyBpZCwgbmFtZSwgdXNlcklkcywgdW5yZWFkQ291bnQsIGlzUHJpdmF0ZSB9ID0gcm9vbTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0Y29uc3QgdW5yZWFkID0gdW5yZWFkQ291bnQgPiAwICYmICd1bnJlYWQnO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRjb25zdCBhY3RpdmUgPSByb29tQWN0aXZlLmlkID09PSBpZCAmJiAnYWN0aXZlJztcclxuXHRcdFx0XHRcdFx0XHRcdFx0Y29uc3QgaXNKb2luZWQgPSB1c2VySWRzXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0PyB1c2VySWRzLmZpbmQoaWQgPT4gY3VycmVudFVzZXIuaWQgPT09IGlkKVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDogZmFsc2U7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGNvbnN0IGF2YXRhclR5cGUgPSBpc1ByaXZhdGUgPyAndXNlcicgOiAncm9vbSc7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gKFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxMaW5rXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRrZXk9e2lkfVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dG89e2Ake21hdGNoLnBhdGh9LyR7aWR9YH1cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT17YCR7dW5yZWFkfSAke2FjdGl2ZX0gc2luZ2xlYH1cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8QXZhdGFyXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdG5hbWU9e25hbWV9XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGU9e2F2YXRhclR5cGV9XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRvb2x0aXA9J3RvcCdcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nc3RhdHVzJz5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0PGkgY2xhc3NOYW1lPXtgbWF0ZXJpYWwtaWNvbnMgJHtpc0pvaW5lZCAmJiAnb25saW5lJ31gfT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRmaWJlcl9tYW51YWxfcmVjb3JkXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdDwvaT5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0PFJvb21CcmllZiBpZD17aWR9IG5hbWU9e25hbWV9IC8+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR7b25VbnJlYWRDb3VudCh1bnJlYWRDb3VudCl9XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0PC9MaW5rPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0XHRcdFx0fSl9XHJcblx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9kaXY+XHJcblx0KTtcclxufVxyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBBdmF0YXIgZnJvbSAnLi4vQXZhdGFyJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTWVzc2FnZShwcm9wcykge1xuXHRjb25zdCB7IHVzZXJUeXBlLCB1c2VyTmFtZSwgdXBkYXRlZEF0LCBjaGlsZHJlbiB9ID0gcHJvcHM7XG5cdGNvbnN0IG1lc3NhZ2UgPSBjaGlsZHJlbi5sZW5ndGggPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl07XG5cdHJldHVybiAoXG5cdFx0PGRpdiBjbGFzc05hbWU9e2BtZXNzYWdlICR7dXNlclR5cGV9YH0+XG5cdFx0XHR7dXNlclR5cGUgIT09ICdtZScgJiYgKFxuXHRcdFx0XHQ8QXZhdGFyIG5hbWU9e3VzZXJOYW1lfSB0eXBlPSd1c2VyJyB0b29sdGlwPSd0b3AnIC8+XG5cdFx0XHQpfVxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J3RleHQtbWFpbic+XG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPXtgdGV4dC1ncm91cCAke3VzZXJUeXBlfWB9PlxuXHRcdFx0XHRcdHttZXNzYWdlLm1hcCgoY2hpbGQsIGluZGV4KSA9PiB7XG5cdFx0XHRcdFx0XHRpZiAoY2hpbGQudHlwZSA9PT0gJ2EnKSByZXR1cm4gY2hpbGQ7XG5cdFx0XHRcdFx0XHRyZXR1cm4gKFxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGtleT17aW5kZXh9IGNsYXNzTmFtZT17YHRleHQgJHt1c2VyVHlwZX1gfT5cblx0XHRcdFx0XHRcdFx0XHR7Y2hpbGR9XG5cdFx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9KX1cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdHt1cGRhdGVkQXQgJiYgKFxuXHRcdFx0XHRcdDxzcGFuPlxuXHRcdFx0XHRcdFx0e25ldyBEYXRlKHVwZGF0ZWRBdCkudG9Mb2NhbGVUaW1lU3RyaW5nKCdlbi1VUycsIHtcblx0XHRcdFx0XHRcdFx0aG91cjogJzItZGlnaXQnLFxuXHRcdFx0XHRcdFx0XHRtaW51dGU6ICcyLWRpZ2l0J1xuXHRcdFx0XHRcdFx0fSl9XG5cdFx0XHRcdFx0PC9zcGFuPlxuXHRcdFx0XHQpfVxuXHRcdFx0PC9kaXY+XG5cdFx0PC9kaXY+XG5cdCk7XG59XG5cbi8qIGVzbGludC1lbmFibGUgKi9cbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXHJcbi8qIGVzbGludC1kaXNhYmxlICovXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IE1pY3JvbGlua0NhcmQgZnJvbSAnQG1pY3JvbGluay9yZWFjdCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNZXNzYWdlVGV4dChwcm9wcykge1xyXG5cdGNvbnN0IHsgcm9vbVVzZXJzIH0gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZSk7XHJcblx0Y29uc3QgeyBjdXJyZW50VXNlck5hbWUsIHRleHQgfSA9IHByb3BzO1xyXG5cclxuXHRjb25zdCBpbnNlcnRUZXh0QXRJbmRpY2VzID0gKHRleHQsIG9iaikgPT4ge1xyXG5cdFx0cmV0dXJuIHRleHQucmVwbGFjZSgvLi9nLCAoY2hhcmFjdGVyLCBpbmRleCkgPT4ge1xyXG5cdFx0XHRyZXR1cm4gb2JqW2luZGV4XSA/IG9ialtpbmRleF0gKyBjaGFyYWN0ZXIgOiBjaGFyYWN0ZXI7XHJcblx0XHR9KTtcclxuXHR9O1xyXG5cclxuXHR2YXIgbWVzc2FnZVRleHQgPSB0ZXh0O1xyXG5cdGNvbnN0IHJvb21Vc2VyTmFtZXMgPSByb29tVXNlcnMubWFwKHVzZXIgPT4gYEAke3VzZXIubmFtZX1gKTtcclxuXHJcblx0Y29uc3QgdXJsTWF0Y2hlcyA9IHRleHQubWF0Y2goL1xcYihodHRwfGh0dHBzKT86XFwvXFwvXFxTKy9naSkgfHwgW107XHJcblx0Y29uc3QgbWVudGlvbnMgPSB0ZXh0Lm1hdGNoKC9AW2EtekEtWjAtOV0rL2cpIHx8IFtdO1xyXG5cclxuXHRjb25zdCBMaW5rUHJldmlld3MgPSB1cmxNYXRjaGVzLm1hcCgobGluaywgaW5kZXgpID0+IChcclxuXHRcdDxNaWNyb2xpbmtDYXJkIGtleT17aW5kZXh9IGNsYXNzTmFtZT0nbXQtMycgdXJsPXtsaW5rfSAvPlxyXG5cdCkpO1xyXG5cdGNvbnN0IG1lbnRpb25lZFVzZXJzID0gbWVudGlvbnMuZmlsdGVyKHVzZXJuYW1lID0+XHJcblx0XHRyb29tVXNlck5hbWVzLmluY2x1ZGVzKHVzZXJuYW1lKVxyXG5cdCk7XHJcblxyXG5cdHVybE1hdGNoZXMuZm9yRWFjaChsaW5rID0+IHtcclxuXHRcdGNvbnN0IHN0YXJ0SW5kZXggPSB0ZXh0LmluZGV4T2YobGluayk7XHJcblx0XHRjb25zdCBlbmRJbmRleCA9IHN0YXJ0SW5kZXggKyBsaW5rLmxlbmd0aDtcclxuXHJcblx0XHRtZXNzYWdlVGV4dCA9IGluc2VydFRleHRBdEluZGljZXMobWVzc2FnZVRleHQsIHtcclxuXHRcdFx0W3N0YXJ0SW5kZXhdOiBgPGEgY2xhc3M9XCJlbWJlZGRlZC1saW5rXCIgaHJlZj1cIiR7bGlua31cIiB0YXJnZXQ9XCJfYmxhbmtcIj5gLFxyXG5cdFx0XHRbZW5kSW5kZXhdOiAnPC9hPidcclxuXHRcdH0pO1xyXG5cdH0pO1xyXG5cclxuXHRtZW50aW9uZWRVc2Vycy5mb3JFYWNoKHVzZXIgPT4ge1xyXG5cdFx0Y29uc3Qgc3RhcnRJbmRleCA9IG1lc3NhZ2VUZXh0LmluZGV4T2YodXNlcik7XHJcblx0XHRjb25zdCBlbmRJbmRleCA9IHN0YXJ0SW5kZXggKyB1c2VyLmxlbmd0aDtcclxuXHRcdGNvbnN0IGlzTWUgPSBjdXJyZW50VXNlck5hbWUgPT09IHVzZXIuc3Vic3RyaW5nKDEpID8gJ2RhbmdlcicgOiAnaW5mbyc7XHJcblxyXG5cdFx0bWVzc2FnZVRleHQgPSBpbnNlcnRUZXh0QXRJbmRpY2VzKG1lc3NhZ2VUZXh0LCB7XHJcblx0XHRcdFtzdGFydEluZGV4XTogYDxzcGFuIGNsYXNzPVwiYmFkZ2UgYmFkZ2UtcGlsbCBiYWRnZS0ke2lzTWV9XCI+YCxcclxuXHRcdFx0W2VuZEluZGV4XTogJzwvc3Bhbj4nXHJcblx0XHR9KTtcclxuXHR9KTtcclxuXHJcblx0cmV0dXJuIChcclxuXHRcdDxkaXY+XHJcblx0XHRcdDxwIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogbWVzc2FnZVRleHQgfX0gLz5cclxuXHRcdFx0e0xpbmtQcmV2aWV3c31cclxuXHRcdDwvZGl2PlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVNlbGVjdG9yIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xyXG5pbXBvcnQgeyBTcGlubmVyIH0gZnJvbSAncmVhY3QtYm9vdHN0cmFwJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5vTWVzc2FnZXMocHJvcHMpIHtcclxuXHRjb25zdCB7IGlzTG9hZGluZyB9ID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUpO1xyXG5cdHJldHVybiAoXHJcblx0XHQ8ZGl2IGNsYXNzTmFtZT0nY29sLW1kLTEyJz5cclxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J25vLW1lc3NhZ2VzJz5cclxuXHRcdFx0XHR7IWlzTG9hZGluZyAmJiA8aSBjbGFzc05hbWU9J21hdGVyaWFsLWljb25zIG1kLTQ4Jz5mb3J1bTwvaT59XHJcblx0XHRcdFx0PHA+e3Byb3BzLnRpdGxlfTwvcD5cclxuXHRcdFx0XHR7aXNMb2FkaW5nICYmIDxTcGlubmVyIGFuaW1hdGlvbj0nYm9yZGVyJyB2YXJpYW50PSdwcmltYXJ5JyAvPn1cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQ8L2Rpdj5cclxuXHQpO1xyXG59XHJcblxyXG4vKiBlc2xpbnQtZW5hYmxlICovXHJcbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuXG5pbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciwgdXNlRGlzcGF0Y2ggfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgeyBlbnRlclJvb20gfSBmcm9tICcuLi8uLi9hY3Rpb25zJztcblxuaW1wb3J0IE1lc3NhZ2UgZnJvbSAnLi9NZXNzYWdlJztcbmltcG9ydCBNZXNzYWdlVGV4dCBmcm9tICcuL01lc3NhZ2VUZXh0JztcbmltcG9ydCBOb01lc3NhZ2VzIGZyb20gJy4vTm9NZXNzYWdlcyc7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgTm9NZXNzYWdlcyB9IGZyb20gJy4vTm9NZXNzYWdlcyc7XG5leHBvcnQgZnVuY3Rpb24gTWVzc2FnZUxpc3QoeyBtYXRjaCB9KSB7XG5cdGNvbnN0IHtcblx0XHRjdXJyZW50VXNlcixcblx0XHRyb29tVXNlcnMsXG5cdFx0dHlwaW5nVXNlcnMsXG5cdFx0bWVzc2FnZXMsXG5cdFx0aXNMb2FkaW5nXG5cdH0gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZSk7XG5cdGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcblxuXHRjb25zdCBtZXNzYWdlTm9kZSA9IHVzZVJlZihudWxsKTtcblx0Y29uc3QgeyByb29tSWQgfSA9IG1hdGNoLnBhcmFtcztcblx0Y29uc3Qgcm9vbU5vdEZvdW5kID0gIXJvb21Vc2Vycy5sZW5ndGg7XG5cblx0dXNlRWZmZWN0KCgpID0+IHtcblx0XHRkaXNwYXRjaChlbnRlclJvb20ocm9vbUlkKSk7XG5cdH0sIFtyb29tSWRdKTtcblxuXHR1c2VFZmZlY3QoKCkgPT4ge1xuXHRcdG1lc3NhZ2VOb2RlLmN1cnJlbnQuc2Nyb2xsSW50b1ZpZXcoKTtcblx0fSwgW2lzTG9hZGluZ10pO1xuXG5cdHVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0aWYgKGRvY3VtZW50Lmhhc0ZvY3VzKCkgJiYgcm9vbUlkKVxuXHRcdFx0bWVzc2FnZU5vZGUuY3VycmVudC5zY3JvbGxJbnRvVmlldyh7IGJlaGF2aW9yOiAnc21vb3RoJyB9KTtcblx0fSwgW21lc3NhZ2VzLCB0eXBpbmdVc2Vyc10pO1xuXG5cdGNvbnN0IG9uU2hvd01lc3NhZ2UgPSAoKSA9PiB7XG5cdFx0aWYgKG1lc3NhZ2VzLmxlbmd0aCA9PT0gMCAmJiAhaXNMb2FkaW5nICYmICFyb29tTm90Rm91bmQpXG5cdFx0XHRyZXR1cm4gPE5vTWVzc2FnZXMgdGl0bGU9J0Lhuq90IMSR4bqndSBjdeG7mWMgdHLDsiBjaHV54buHbiBt4bubaS4uLicgLz47XG5cdFx0ZWxzZSBpZiAoaXNMb2FkaW5nKSByZXR1cm4gPE5vTWVzc2FnZXMgdGl0bGU9J8SQYW5nIHThuqNpLCDEkeG7o2kgY2jDunQgIScgLz47XG5cdFx0ZWxzZSBpZiAoIWlzTG9hZGluZyAmJiByb29tTm90Rm91bmQpXG5cdFx0XHRyZXR1cm4gPE5vTWVzc2FnZXMgdGl0bGU9JzQwNCBOb3QgRm91bmQgOignIC8+O1xuXHRcdHJldHVybiBtZXNzYWdlcy5tYXAobWVzc2FnZSA9PiB7XG5cdFx0XHRjb25zdCB7IGlkLCBzZW5kZXIsIHVwZGF0ZWRBdCwgcGFydHMgfSA9IG1lc3NhZ2U7XG5cdFx0XHRyZXR1cm4gKFxuXHRcdFx0XHQ8TWVzc2FnZVxuXHRcdFx0XHRcdGtleT17aWR9XG5cdFx0XHRcdFx0dXNlclR5cGU9e3NlbmRlci5pZCA9PT0gY3VycmVudFVzZXIuaWQgJiYgJ21lJ31cblx0XHRcdFx0XHR1c2VyTmFtZT17c2VuZGVyLm5hbWV9XG5cdFx0XHRcdFx0dXBkYXRlZEF0PXt1cGRhdGVkQXR9XG5cdFx0XHRcdD5cblx0XHRcdFx0XHR7cGFydHMubWFwKChwYXJ0LCBpbmRleCkgPT4ge1xuXHRcdFx0XHRcdFx0Y29uc3QgeyBwYXJ0VHlwZSwgcGF5bG9hZCB9ID0gcGFydDtcblxuXHRcdFx0XHRcdFx0aWYgKHBhcnRUeXBlID09PSAnaW5saW5lJylcblx0XHRcdFx0XHRcdFx0cmV0dXJuIChcblx0XHRcdFx0XHRcdFx0XHQ8TWVzc2FnZVRleHRcblx0XHRcdFx0XHRcdFx0XHRcdGtleT17aW5kZXh9XG5cdFx0XHRcdFx0XHRcdFx0XHRjdXJyZW50VXNlck5hbWU9e2N1cnJlbnRVc2VyLm5hbWV9XG5cdFx0XHRcdFx0XHRcdFx0XHR0ZXh0PXtwYXlsb2FkLmNvbnRlbnR9XG5cdFx0XHRcdFx0XHRcdFx0Lz5cblx0XHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0aWYgKERhdGUubm93KCkgPiBEYXRlLnBhcnNlKHBheWxvYWQuX2V4cGlyYXRpb24pKVxuXHRcdFx0XHRcdFx0XHRwYXlsb2FkLl9mZXRjaE5ld0Rvd25sb2FkVVJMKCk7XG5cblx0XHRcdFx0XHRcdHJldHVybiAoXG5cdFx0XHRcdFx0XHRcdDxhXG5cdFx0XHRcdFx0XHRcdFx0a2V5PXtpbmRleH1cblx0XHRcdFx0XHRcdFx0XHRocmVmPXtwYXlsb2FkLl9kb3dubG9hZFVSTH1cblx0XHRcdFx0XHRcdFx0XHR0YXJnZXQ9J19ibGFuaydcblx0XHRcdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0XHRcdDxpbWdcblx0XHRcdFx0XHRcdFx0XHRcdGNsYXNzTmFtZT17YHctMjUgcm91bmRlZCAke2luZGV4ICE9PVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRwYXJ0cy5sZW5ndGggLSAxICYmICdtYi0zJ31gfVxuXHRcdFx0XHRcdFx0XHRcdFx0c3JjPXtwYXlsb2FkLl9kb3dubG9hZFVSTH1cblx0XHRcdFx0XHRcdFx0XHRcdGFsdD0nYXR0YWNobWVudCdcblx0XHRcdFx0XHRcdFx0XHQvPlxuXHRcdFx0XHRcdFx0XHQ8L2E+XG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH0pfVxuXHRcdFx0XHQ8L01lc3NhZ2U+XG5cdFx0XHQpO1xuXHRcdH0pO1xuXHR9O1xuXG5cdGNvbnN0IG9uU2hvd1R5cGluZ1VzZXJzID0gKCkgPT4ge1xuXHRcdHJldHVybiB0eXBpbmdVc2Vycy5tYXAodXNlciA9PiB7XG5cdFx0XHRjb25zdCB7IGlkLCBuYW1lIH0gPSB1c2VyO1xuXHRcdFx0aWYgKGN1cnJlbnRVc2VyLmlkID09PSBpZCkgcmV0dXJuIDxkaXY+PC9kaXY+O1xuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0PE1lc3NhZ2Uga2V5PXtpZH0gdXNlclR5cGU9J3R5cGluZycgdXNlck5hbWU9e25hbWV9PlxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSd3YXZlJz5cblx0XHRcdFx0XHRcdDxzcGFuIGNsYXNzTmFtZT0nZG90Jz48L3NwYW4+Jm5ic3A7XG5cdFx0XHRcdFx0XHQ8c3BhbiBjbGFzc05hbWU9J2RvdCc+PC9zcGFuPiZuYnNwO1xuXHRcdFx0XHRcdFx0PHNwYW4gY2xhc3NOYW1lPSdkb3QnPjwvc3Bhbj5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0PC9NZXNzYWdlPlxuXHRcdFx0KTtcblx0XHR9KTtcblx0fTtcblxuXHRyZXR1cm4gKFxuXHRcdDxkaXYgY2xhc3NOYW1lPSdjb2wtbWQtMTInPlxuXHRcdFx0e29uU2hvd01lc3NhZ2UoKX1cblx0XHRcdHt0eXBpbmdVc2Vycy5sZW5ndGggPiAwICYmIG9uU2hvd1R5cGluZ1VzZXJzKCl9XG5cdFx0XHQ8ZGl2IHJlZj17bWVzc2FnZU5vZGV9IC8+XG5cdFx0PC9kaXY+XG5cdCk7XG59XG5cbi8qIGVzbGludC1lbmFibGUgKi9cbiIsIi8qIGpzaGludCBlc3ZlcnNpb246IDEwICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuXG5pbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciwgdXNlRGlzcGF0Y2ggfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgeyBSb3V0ZSwgU3dpdGNoIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAnLi4vLi4vYWN0aW9ucyc7XG5cbmltcG9ydCBOYXZpZ2F0aW9uIGZyb20gJy4uL05hdmlnYXRpb24nO1xuaW1wb3J0IFRvcEJhciBmcm9tICcuLi9Ub3BCYXInO1xuaW1wb3J0IFZpZGVvQ2hhdCBmcm9tICcuLi9WaWRlb0NoYXQnO1xuXG5pbXBvcnQgVXNlckxpc3QgZnJvbSAnLi4vVXNlckxpc3QnO1xuaW1wb3J0IFJvb21MaXN0IGZyb20gJy4uL1Jvb21MaXN0JztcbmltcG9ydCB7IE1lc3NhZ2VMaXN0LCBOb01lc3NhZ2VzIH0gZnJvbSAnLi4vTWVzc2FnZUxpc3QnO1xuaW1wb3J0IHsgU2VuZE1lc3NhZ2UgfSBmcm9tICcuLi9Gb3JtQ29udHJvbHMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDaGF0KHsgbWF0Y2ggfSkge1xuXHRjb25zdCB7IHNjcmVlbiwgcm9vbXMsIGlzTG9hZGluZywgdmlkZW9DaGF0IH0gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZSk7XG5cdGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcblx0Y29uc3QgY2hhdE5vZGUgPSB1c2VSZWYobnVsbCk7XG5cblx0dXNlRWZmZWN0KCgpID0+IHtcblx0XHRkaXNwYXRjaChjb25uZWN0KHNjcmVlbi51c2VySWQpKTtcblx0fSwgW10pO1xuXG5cdHVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0Y2hhdE5vZGUuY3VycmVudC5zY3JvbGxJbnRvVmlldygpO1xuXHR9LCBbaXNMb2FkaW5nXSk7XG5cblx0cmV0dXJuIChcblx0XHQ8ZGl2IGNsYXNzTmFtZT0nYXBwJz5cblx0XHRcdDxOYXZpZ2F0aW9uIC8+XG5cdFx0XHQ8Um9vbUxpc3QgbWF0Y2g9e21hdGNofSAvPlxuXHRcdFx0PGRpdiBjbGFzc05hbWU9J21haW4nPlxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nY2hhdCcgcmVmPXtjaGF0Tm9kZX0+XG5cdFx0XHRcdFx0PFRvcEJhciAvPlxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250ZW50Jz5cblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250YWluZXInPlxuXHRcdFx0XHRcdFx0XHQ8U3dpdGNoPlxuXHRcdFx0XHRcdFx0XHRcdDxSb3V0ZSBleGFjdCBwYXRoPXttYXRjaC5wYXRofT5cblx0XHRcdFx0XHRcdFx0XHRcdHtpc0xvYWRpbmcgPyAoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxOb01lc3NhZ2VzIHRpdGxlPSfEkGFuZyBr4bq/dCBu4buRaSBtw6F5IGNo4bunJyAvPlxuXHRcdFx0XHRcdFx0XHRcdFx0KSA6IChcblx0XHRcdFx0XHRcdFx0XHRcdFx0PE5vTWVzc2FnZXMgdGl0bGU9J0No4buNbiBwaMOybmcgxJHhu4MgYuG6r3QgxJHhuqd1IGNoYXQgbsOgbyEnIC8+XG5cdFx0XHRcdFx0XHRcdFx0XHQpfVxuXHRcdFx0XHRcdFx0XHRcdDwvUm91dGU+XG5cdFx0XHRcdFx0XHRcdFx0e3Jvb21zLm1hcChyb29tID0+IHtcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybiAoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJvb20uaWQgJiYgKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxSb3V0ZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0a2V5PXtyb29tLmlkfVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cGF0aD17YCR7bWF0Y2gucGF0aH0vOnJvb21JZGB9XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRjb21wb25lbnQ9e01lc3NhZ2VMaXN0fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0fSl9XG5cdFx0XHRcdFx0XHRcdDwvU3dpdGNoPlxuXHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PFNlbmRNZXNzYWdlIC8+XG5cdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHR7dmlkZW9DaGF0LnNob3cgJiYgPFZpZGVvQ2hhdCAvPn1cblx0XHRcdDwvZGl2PlxuXHRcdFx0PFVzZXJMaXN0IG1hdGNoPXttYXRjaH0gLz5cblx0XHQ8L2Rpdj5cblx0KTtcbn1cblxuLyogZXNsaW50LWVuYWJsZSAqL1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5vdEZvdW5kKCkge1xyXG5cdHJldHVybiAoXHJcblx0XHQ8ZGl2IGNsYXNzTmFtZT0nbm90LWZvdW5kJz5cclxuXHRcdFx0PHN2ZyB3aWR0aD0nMzgwcHgnIGhlaWdodD0nNTAwcHgnIHZpZXdCb3g9JzAgMCA4MzcgMTA0NSc+XHJcblx0XHRcdFx0PGdcclxuXHRcdFx0XHRcdGlkPSdQYWdlLTEnXHJcblx0XHRcdFx0XHRzdHJva2U9J25vbmUnXHJcblx0XHRcdFx0XHRzdHJva2VXaWR0aD17MX1cclxuXHRcdFx0XHRcdGZpbGw9J25vbmUnXHJcblx0XHRcdFx0XHRmaWxsUnVsZT0nZXZlbm9kZCdcclxuXHRcdFx0XHQ+XHJcblx0XHRcdFx0XHQ8cGF0aFxyXG5cdFx0XHRcdFx0XHRkPSdNMzUzLDkgTDYyNi42NjQwMjgsMTcwIEw2MjYuNjY0MDI4LDQ4NyBMMzUzLDY0MiBMNzkuMzM1OTcyNCw0ODcgTDc5LjMzNTk3MjQsMTcwIEwzNTMsOSBaJ1xyXG5cdFx0XHRcdFx0XHRpZD0nUG9seWdvbi0xJ1xyXG5cdFx0XHRcdFx0XHRzdHJva2U9JyMwMDdGQjInXHJcblx0XHRcdFx0XHRcdHN0cm9rZVdpZHRoPXs2fVxyXG5cdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHRcdDxwYXRoXHJcblx0XHRcdFx0XHRcdGQ9J003OC41LDUyOSBMMTQ3LDU2OS4xODY0MTQgTDE0Nyw2NDguMzExMjE2IEw3OC41LDY4NyBMMTAsNjQ4LjMxMTIxNiBMMTAsNTY5LjE4NjQxNCBMNzguNSw1MjkgWidcclxuXHRcdFx0XHRcdFx0aWQ9J1BvbHlnb24tMidcclxuXHRcdFx0XHRcdFx0c3Ryb2tlPScjRUY0QTVCJ1xyXG5cdFx0XHRcdFx0XHRzdHJva2VXaWR0aD17Nn1cclxuXHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHQ8cGF0aFxyXG5cdFx0XHRcdFx0XHRkPSdNNzczLDE4NiBMODI3LDIxNy41Mzg3MDUgTDgyNywyNzkuNjM2NjUxIEw3NzMsMzEwIEw3MTksMjc5LjYzNjY1MSBMNzE5LDIxNy41Mzg3MDUgTDc3MywxODYgWidcclxuXHRcdFx0XHRcdFx0aWQ9J1BvbHlnb24tMydcclxuXHRcdFx0XHRcdFx0c3Ryb2tlPScjNzk1RDlDJ1xyXG5cdFx0XHRcdFx0XHRzdHJva2VXaWR0aD17Nn1cclxuXHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHQ8cGF0aFxyXG5cdFx0XHRcdFx0XHRkPSdNNjM5LDUyOSBMNzczLDYwNy44NDY3NjEgTDc3Myw3NjMuMDkxNjI3IEw2MzksODM5IEw1MDUsNzYzLjA5MTYyNyBMNTA1LDYwNy44NDY3NjEgTDYzOSw1MjkgWidcclxuXHRcdFx0XHRcdFx0aWQ9J1BvbHlnb24tNCdcclxuXHRcdFx0XHRcdFx0c3Ryb2tlPScjRjI3NzNGJ1xyXG5cdFx0XHRcdFx0XHRzdHJva2VXaWR0aD17Nn1cclxuXHRcdFx0XHRcdC8+XHJcblx0XHRcdFx0XHQ8cGF0aFxyXG5cdFx0XHRcdFx0XHRkPSdNMjgxLDgwMSBMMzgzLDg2MS4wMjUyNzYgTDM4Myw5NzkuMjExNjkgTDI4MSwxMDM3IEwxNzksOTc5LjIxMTY5IEwxNzksODYxLjAyNTI3NiBMMjgxLDgwMSBaJ1xyXG5cdFx0XHRcdFx0XHRpZD0nUG9seWdvbi01J1xyXG5cdFx0XHRcdFx0XHRzdHJva2U9JyMzNkI0NTUnXHJcblx0XHRcdFx0XHRcdHN0cm9rZVdpZHRoPXs2fVxyXG5cdFx0XHRcdFx0Lz5cclxuXHRcdFx0XHQ8L2c+XHJcblx0XHRcdDwvc3ZnPlxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nbm90LWZvdW5kLWNvbnRlbnQnPlxyXG5cdFx0XHRcdDxoMT40MDQ8L2gxPlxyXG5cdFx0XHRcdDxwPktow7RuZyB0w6xtIHRo4bqleSB0cmFuZyBi4bqhbiB5w6p1IGPhuqd1PC9wPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdidXR0b25zLWNvbic+XHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nYWN0aW9uLWxpbmstd3JhcCc+XHJcblx0XHRcdFx0XHRcdDxMaW5rIHRvPScvJz5W4buBIHRyYW5nIGNo4bunPC9MaW5rPlxyXG5cdFx0XHRcdFx0XHQ8YSBocmVmPSdodHRwczovL2dpdGh1Yi5jb20vMTg1MjAzMzknIHRhcmdldD0nX2JsYW5rJz5cclxuXHRcdFx0XHRcdFx0XHRMacOqbiBo4buHXHJcblx0XHRcdFx0XHRcdDwvYT5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdCk7XHJcbn1cclxuXHJcbi8qIGVzbGludC1lbmFibGUgKi9cclxuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cclxuLyogZXNsaW50LWRpc2FibGUgKi9cclxuXHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgU2lnbkluIH0gZnJvbSAnLi9TaWduSW4nO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFNpZ25VcCB9IGZyb20gJy4vU2lnblVwJztcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBDaGF0IH0gZnJvbSAnLi9DaGF0JztcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBOb3RGb3VuZCB9IGZyb20gJy4vTm90Rm91bmQnO1xyXG5cclxuLyogZXNsaW50LWVuYWJsZSAqL1xyXG4iLCIvKiBqc2hpbnQgZXN2ZXJzaW9uOiAxMCAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVNlbGVjdG9yIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHsgSGFzaFJvdXRlciwgUm91dGUsIFN3aXRjaCwgUmVkaXJlY3QgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxuaW1wb3J0IHsgU2lnbkluLCBTaWduVXAsIENoYXQsIE5vdEZvdW5kIH0gZnJvbSAnLi4vU2NyZWVuJztcbmltcG9ydCAnLi4vLi4vc2Nzcy9zdHlsZS5zY3NzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwKCkge1xuXHRjb25zdCBzY3JlZW4gPSB1c2VTZWxlY3RvcihzdGF0ZSA9PiBzdGF0ZS5zY3JlZW4pO1xuXHRjb25zdCBjdXJyZW50U2NyZWVuID0gc2NyZWVuLmN1cnJlbnRTY3JlZW4gPT09ICdTaWduSW4nID8gU2lnbkluIDogQ2hhdDtcblx0cmV0dXJuIChcblx0XHQ8SGFzaFJvdXRlcj5cblx0XHRcdDxTd2l0Y2g+XG5cdFx0XHRcdDxSZWRpcmVjdCBleGFjdCBmcm9tPScvJyB0bz0nL3Jvb20nIC8+XG5cdFx0XHRcdDxSb3V0ZSBwYXRoPScvcm9vbScgY29tcG9uZW50PXtjdXJyZW50U2NyZWVufSAvPlxuXHRcdFx0XHQ8Um91dGUgcGF0aD0nL3NpZ24tdXAnIGNvbXBvbmVudD17U2lnblVwfSAvPlxuXHRcdFx0XHQ8Um91dGUgY29tcG9uZW50PXtOb3RGb3VuZH0gLz5cblx0XHRcdDwvU3dpdGNoPlxuXHRcdDwvSGFzaFJvdXRlcj5cblx0KTtcbn1cblxuLyogZXNsaW50LWVuYWJsZSAqL1xuIiwiLyoganNoaW50IGVzdmVyc2lvbjogMTAgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcblxuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgc3RvcmUgZnJvbSAnLi9yZWR1Y2Vycyc7XG5pbXBvcnQgQXBwIGZyb20gJy4vY29tcG9uZW50cy9BcHAvaW5kZXguanN4JztcblxuaW1wb3J0ICdtYXRlcmlhbC1kZXNpZ24taWNvbnMvaWNvbmZvbnQvbWF0ZXJpYWwtaWNvbnMuY3NzJztcbmltcG9ydCAnYm9vdHN0cmFwL2Rpc3QvY3NzL2Jvb3RzdHJhcC5taW4uY3NzJztcbmltcG9ydCAnYm9vdHN0cmFwL2Rpc3QvanMvYm9vdHN0cmFwLmJ1bmRsZS5taW4nO1xuaW1wb3J0ICdqcXVlcnknO1xuXG5SZWFjdERPTS5yZW5kZXIoXG5cdDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxuXHRcdDxBcHAgLz5cblx0PC9Qcm92aWRlcj4sXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290Jylcbik7XG5cbi8qIGVzbGludC1lbmFibGUgKi9cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///650\n')}});