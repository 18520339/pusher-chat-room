!function(F){function c(c){for(var t,U,B=c[0],s=c[1],l=c[2],d=0,x=[];d<B.length;d++)U=B[d],Object.prototype.hasOwnProperty.call(n,U)&&n[U]&&x.push(n[U][0]),n[U]=0;for(t in s)Object.prototype.hasOwnProperty.call(s,t)&&(F[t]=s[t]);for(a&&a(c);x.length;)x.shift()();return e.push.apply(e,l||[]),Q()}function Q(){for(var F,c=0;c<e.length;c++){for(var Q=e[c],t=!0,B=1;B<Q.length;B++){var s=Q[B];0!==n[s]&&(t=!1)}t&&(e.splice(c--,1),F=U(U.s=Q[0]))}return F}var t={},n={0:0},e=[];function U(c){if(t[c])return t[c].exports;var Q=t[c]={i:c,l:!1,exports:{}};return F[c].call(Q.exports,Q,Q.exports,U),Q.l=!0,Q.exports}U.m=F,U.c=t,U.d=function(F,c,Q){U.o(F,c)||Object.defineProperty(F,c,{enumerable:!0,get:Q})},U.r=function(F){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(F,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(F,"__esModule",{value:!0})},U.t=function(F,c){if(1&c&&(F=U(F)),8&c)return F;if(4&c&&"object"==typeof F&&F&&F.__esModule)return F;var Q=Object.create(null);if(U.r(Q),Object.defineProperty(Q,"default",{enumerable:!0,value:F}),2&c&&"string"!=typeof F)for(var t in F)U.d(Q,t,function(c){return F[c]}.bind(null,t));return Q},U.n=function(F){var c=F&&F.__esModule?function(){return F.default}:function(){return F};return U.d(c,"a",c),c},U.o=function(F,c){return Object.prototype.hasOwnProperty.call(F,c)},U.p="";var B=window.webpackJsonp=window.webpackJsonp||[],s=B.push.bind(B);B.push=c,B=B.slice();for(var l=0;l<B.length;l++)c(B[l]);var a=s;e.push([770,1]),Q()}({369:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/NzBiMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzNjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///369\n")},371:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vdXRpbCAoaWdub3JlZCk/YzJjMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIzNzEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///371\n")},391:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZnMgKGlnbm9yZWQpP2RiNDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMzkxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///391\n")},400:function(module,exports){eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 400;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2FjaGVhYmxlLXJlcXVlc3Qvbm9kZV9tb2R1bGVzL2tleXYvc3JjIHN5bmM/NDc2OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLFdBQVc7QUFDbEQ7QUFDQTtBQUNBIiwiZmlsZSI6IjQwMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHdlYnBhY2tFbXB0eUNvbnRleHQocmVxKSB7XG5cdHZhciBlID0gbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJ1wiKTtcblx0ZS5jb2RlID0gJ01PRFVMRV9OT1RfRk9VTkQnO1xuXHR0aHJvdyBlO1xufVxud2VicGFja0VtcHR5Q29udGV4dC5rZXlzID0gZnVuY3Rpb24oKSB7IHJldHVybiBbXTsgfTtcbndlYnBhY2tFbXB0eUNvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tFbXB0eUNvbnRleHQ7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tFbXB0eUNvbnRleHQ7XG53ZWJwYWNrRW1wdHlDb250ZXh0LmlkID0gNDAwOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///400\n")},407:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVjb21wcmVzcy1yZXNwb25zZSAoaWdub3JlZCk/NTA2MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI0MDcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAoaWdub3JlZCkgKi8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///407\n")},408:function(module,exports){eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 408;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ290L3NvdXJjZSBzeW5jPzcwYjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxXQUFXO0FBQ2xEO0FBQ0E7QUFDQSIsImZpbGUiOiI0MDguanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB3ZWJwYWNrRW1wdHlDb250ZXh0KHJlcSkge1xuXHR2YXIgZSA9IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIidcIik7XG5cdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0dGhyb3cgZTtcbn1cbndlYnBhY2tFbXB0eUNvbnRleHQua2V5cyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gW107IH07XG53ZWJwYWNrRW1wdHlDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrRW1wdHlDb250ZXh0O1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrRW1wdHlDb250ZXh0O1xud2VicGFja0VtcHR5Q29udGV4dC5pZCA9IDQwODsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///408\n")},444:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vYnVmZmVyIChpZ25vcmVkKT85MTYwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjQ0NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///444\n")},445:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY3J5cHRvIChpZ25vcmVkKT8xNmU0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjQ0NS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///445\n")},527:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vY3J5cHRvIChpZ25vcmVkKT9mNTI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjUyNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqLyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///527\n")},757:function(module,exports){eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vb3MgKGlnbm9yZWQpP2ZhNTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNzU3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///757\n")},763:function(module,exports,__webpack_require__){eval("var api = __webpack_require__(764);\n            var content = __webpack_require__(765);\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2Nzcy9zdHlsZS5zY3NzPzJlNGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsVUFBVSxtQkFBTyxDQUFDLEdBQTJFO0FBQzdGLDBCQUEwQixtQkFBTyxDQUFDLEdBQXFHOztBQUV2STs7QUFFQTtBQUNBLDBCQUEwQixRQUFTO0FBQ25DOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7Ozs7QUFJQSIsImZpbGUiOiI3NjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLnNjc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cbnZhciBleHBvcnRlZCA9IGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB7fTtcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZWQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///763\n")},765:function(module,exports,__webpack_require__){eval('// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(766);\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Maven+Pro:500&display=swap&subset=vietnamese);"]);\n// Module\nexports.push([module.i, ".sidebar .contacts h1,.sidebar .discussions h1{font-weight:800;font-size:24px;color:#212529;margin-bottom:0;padding-bottom:18px}.sidebar .contacts .contact .avatar-md,.sidebar .discussions .single .avatar-md,.main .chat .top .avatar-md{margin-right:20px;cursor:pointer}.sidebar .contacts .contact .data,.sidebar .discussions .single .data,.main .chat .top .data{display:flex;display:-ms-flexbox;justify-content:space-between;-ms-flex-align:flex-start;align-items:flex-start;margin-right:auto;flex-wrap:wrap;width:100%;overflow:hidden}.sidebar .contacts .contact .data h5,.sidebar .discussions .single .data h5,.main .chat .top .data h5{font-weight:700;font-size:16px;color:#212529;margin-bottom:5px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:60%}.sidebar .contacts .contact .data span,.sidebar .discussions .single .data span,.main .chat .top .data span{font-weight:400;font-size:14px;white-space:nowrap}.sidebar .contacts .contact .data p,.sidebar .discussions .single .data p,.main .chat .top .data p{font-weight:400;font-size:16px;line-height:1.4;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%}.sidebar .contacts .contact,.sidebar .discussions .single{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:20px 0;border-bottom:2px solid #fbfbfb}.sidebar .contacts .contact:last-of-type,.sidebar .discussions .single:last-of-type{border-bottom:2px solid transparent !important}.requests .content .form-group label{font-weight:700;font-size:14px;color:#212529;margin-bottom:10px;text-transform:uppercase}@keyframes wave{0%,60%,100%{-webkit-transform:initial;-ms-transform:initial;transform:initial}30%{transform:translateY(-5px)}}@keyframes pulse{0%{box-shadow:0 0 0 0 rgba(0,0,0,0.1)}100%{box-shadow:0 0 0 50px transparent}}@keyframes call-end{0%{box-shadow:0 0 0 0 rgba(0,0,0,0.1)}100%{box-shadow:0 0 0 20px transparent}}@keyframes float{100%{-webkit-transform:translateY(20px);-ms-transform:translateY(20px);transform:translateY(20px)}}.aside{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;height:100vh;width:100%;min-width:550px;max-width:550px;background:linear-gradient(145deg, #8ca7ff 0, #8b54f9 50%, #6610f2 100%)}.aside .preference{width:100%;max-width:340px;margin:0 auto;text-align:center}.aside .preference h2{font-weight:800;font-size:46px;color:#fff;margin-bottom:23px}.aside .preference p{font-weight:400;font-size:16px;color:#fff;line-height:1.7;margin-bottom:30px}.aside .preference .button{background-color:#fff;color:#2196f3;max-width:300px;box-shadow:none !important}.avatar-xl{height:60px;width:100%;min-width:60px;max-width:60px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-lg{height:50px;width:100%;min-width:50px;max-width:50px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-md{height:45px;width:100%;min-width:45px;max-width:45px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-sm{height:30px;width:100%;min-width:30px;max-width:30px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04);box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.avatar-xxl{width:200px;height:200px;border-radius:100%}.tooltip{font-weight:600;font-size:15px}.tooltip.show{opacity:1}.tooltip-inner{background-color:#212529;color:#fff;padding:5px 12px;border-radius:6px}.call{background:linear-gradient(145deg, #8ca7ff 0, #8b54f9 50%, #6610f2 100%)}.call video{width:100%;align-self:center}.call .video-chat{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:stretch;align-items:stretch;height:100%}.call .options{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;margin-bottom:37px;position:absolute;bottom:0}.call .options .option{color:#fff;line-height:0;padding:0 20px}.call .options .option.call-end{padding:15px;background:#e05b5d;border-radius:100%;animation:call-end 2s infinite;color:#fff;line-height:0;margin:0 20px}.call .options .option:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1);-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear;opacity:0.9}.call .back{padding:18px;background:rgba(0,0,0,0.05);border-radius:100%;color:#fff;line-height:0;-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear}.call .back:hover{-webkit-transform:translateY(10px) translateZ(0);-ms-transform:translateY(10px) translateZ(0);transform:translateY(10px) translateZ(0)}.call .content{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;height:100%;text-align:center}.call .content .avatar-xxl{margin-bottom:56px;animation:pulse 2s infinite;cursor:pointer}.call .content .participant{margin-bottom:56px}.call .content .participant span{font-weight:500;color:#fff;display:block;text-align:center}.call .content .options{position:unset;margin-bottom:60px}.call::-webkit-scrollbar{display:none}.btn,.btn.active:not(:disabled):not(.disabled),.btn:not(:disabled):not(.disabled):active,.btn:active,.btn:focus,.btn:hover{border:none;box-shadow:none;outline:0}.btn{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s}.btn:disabled{opacity:1}.button{width:100%;padding:16px 25px;background-color:#2196f3;font-weight:500;color:#fff;border-radius:6px;-webkit-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;-moz-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important}.button:hover{color:#fff;opacity:0.9}.show>.btn.dropdown-toggle{border:none;-webkit-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;-moz-box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important;box-shadow:0 0 30px 5px rgba(0,0,0,0.04) !important}.create.btn:not(:disabled):not(.disabled):active{box-shadow:0 0 30px 5px rgba(0,0,0,0.04)}.form-control{width:100% !important;padding:25px 15px;background-color:#f5f5f5;font-weight:500;font-size:16px;color:#bdbac2 !important;border:none;border-radius:6px;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none}.form-control:focus{background-color:#f5f5f5;color:none !important;box-shadow:none}.form-control::placeholder{font-weight:500;font-size:16px;color:#bdbac2}.form-control[readonly]{background-color:#f5f5f5}.dropdown-menu{border:none;border-radius:6px;-webkit-box-shadow:0 0 20px rgba(0,0,0,0.04);-moz-box-shadow:0 0 20px rgba(0,0,0,0.04);box-shadow:0 0 20px rgba(0,0,0,0.04);min-width:14rem;padding:10px;margin-top:10px}.dropdown-menu hr{margin:10px;border-top:2px solid #fbfbfb}.dropdown-menu .material-icons{margin-right:10px}.dropdown-item{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:10px;font-size:15px;color:#bdbac2;-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;border-radius:6px;cursor:pointer}.dropdown-item:focus{background-color:0 0;color:#bdbac2;border:none;border-radius:6px;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;outline:0}.dropdown-item:hover{background-color:#f5f5f5;color:#bdbac2;border-radius:6px}.dropdown-item:active,.dropdown-item.active{background-color:#2196f3 !important;color:#fff !important}.switch{height:18px;width:100%;min-width:42px;max-width:42px;display:inline-block;position:relative;margin-bottom:0}.switch input{width:0;height:0;opacity:0}.slider{position:absolute;top:0;left:0;right:0;bottom:0;-webkit-transition:.4s;-moz-transition:.4s;transition:.4s;background-color:#ccc;cursor:pointer}.slider:before{position:absolute;left:3px;bottom:3px;width:12px;height:12px;-webkit-transition:.4s;-moz-transition:.4s;transition:.4s;background-color:#fff;content:\'\'}.slider.round{border-radius:34px}.slider.round:before{border-radius:50%}input:checked+.slider{background-color:#2196f3 !important}input:checked+.slider:before{transform:translateX(24px)}.main{width:100%}.main.order-md-1,.main.order-md-2{height:100vh;margin:0;background:#fdfdfd}.main .chat{-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);display:flex;display:-ms-flexbox;justify-content:space-between;flex-direction:column;height:100%}.main .chat .content{padding:20px 0 0;overflow-x:hidden;overflow-y:scroll;display:flex;height:calc(100vh - 218px)}.main .chat .content .message{display:flex;display:-ms-flexbox;-ms-flex-align:flex-end;align-items:flex-end;margin-bottom:20px}.main .chat .content .message .text-main .text{padding:15px;background:#fff;border-radius:6px;border-radius:15px;-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);display:inline-block;max-width:450px}.main .chat .content .message .text-main .text .embedded-link{text-decoration:underline}.main .chat .content .message .text-main .text .embedded-link:hover{color:inherit;text-decoration:none}.main .chat .content .message .text-main .text .microlink_card .microlink_card__content{width:0}.main .chat .content .message .text-main .text .microlink_card:hover{color:initial}.main .chat .content .message .text-main .text .attachment{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center}.main .chat .content .message .text-main .text .attachment .file h5{font-weight:400;font-size:16px;color:#2196f3;line-height:1.4;margin-bottom:5px}.main .chat .content .message .text-main .text .attachment .file a:hover{text-decoration:underline}.main .chat .content .message .text-main .text .attachment .attach{width:42px;height:42px;padding:12px;margin-right:15px}.main .chat .content .message .text-main .text.typing{padding:8px 12px}.main .chat .content .message .text-main .text.me{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;background-color:#2196f3}.main .chat .content .message .text-main .text.me.image{background-color:#f5f5f5}.main .chat .content .message .text-main .text.me .attachment .attach{background-color:#fff;color:#2196f3}.main .chat .content .message .text-main .text.me .attachment .file h5,.main .chat .content .message .text-main .text.me .attachment .file a:hover{color:#fff}.main .chat .content .message .text-main .text.me .attachment .file span{color:#fff;text-align:left}.main .chat .content .message .text-main .text.me>div>p{color:#fff}.main .chat .content .message .text-main .text>div>p{font-weight:400;font-size:16px;color:#a0a0a0;line-height:1.4;word-break:break-all}.main .chat .content .message .text-main>span{color:#a0a0a0}.main .chat .content .message:last-child{margin-bottom:50px}.main .chat .content .message.me{justify-content:flex-end}.main .chat .content .message.me:last-child{margin-bottom:43px}.main .chat .content .message.me span{text-align:right}.main .chat .content .message .avatar-md{margin-right:15px}.main .chat .content .message .text-group{display:flex;display:-ms-flexbox;-ms-flex-align:flex-start;align-items:flex-start;flex-direction:column;width:100%;margin-bottom:10px}.main .chat .content .message .text-group>a{display:contents}.main .chat .content .message .text-group.me{align-items:flex-end}.main .chat .content .message span{font-weight:400;font-size:14px;display:block}.main .chat .content .message span>.material-icons{font-weight:600;font-size:14px;margin-right:5px;position:relative;top:2px}.main .chat .content .wave .dot{width:6px;height:6px;background:#bdbac2;border-radius:100%;animation:wave 1.3s linear infinite;display:inline-block;margin-right:1px}.main .chat .content .wave .dot:last-of-type{margin-right:0}.main .chat .content .wave .dot:nth-child(2){animation-delay:-1.1s}.main .chat .content .wave .dot:nth-child(3){animation-delay:-0.9s}.main .chat .content>div{margin-top:auto;margin-bottom:auto}.main .chat .content .date{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:0 120px 30px}.main .chat .content .date hr{width:100%;margin:0;border-top:1px solid #212529}.main .chat .content .date span{display:block;padding:0 20px;color:#212529;white-space:nowrap}.main .chat .content .no-messages{width:100%;max-width:400px;margin:47px auto 45px;text-align:center;display:block;color:#212529}.main .chat .content .no-messages .options{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center}.main .chat .content .no-messages .options .button{width:56px;height:56px;border-radius:100%;-webkit-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04) !important;-moz-box-shadow:0 5px 10px 4px rgba(0,0,0,0.04) !important;box-shadow:0 5px 10px 4px rgba(0,0,0,0.04) !important}.main .chat .content .no-messages .options .button:hover{-webkit-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05);-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear}.main .chat .content .no-messages .options .button .material-icons{margin-bottom:0}.main .chat .content .no-messages .options .button:nth-child(2){background:#dc3545}.main .chat .content .no-messages .options .button+.button{margin-left:20px}.main .chat .content .no-messages.request{max-width:420px;margin:50px auto}.main .chat .content .no-messages .material-icons{margin-bottom:20px;font-weight:600}.main .chat .content .no-messages .avatar-xl{margin-bottom:32px}.main .chat .content .no-messages h5{font-weight:400;font-size:18px;line-height:1.7;margin-bottom:5px;display:block}.main .chat .content .no-messages h5>span{font-size:18px;line-height:1.7}.main .chat .content .no-messages p{font-weight:400;font-size:18px;margin-bottom:10px}.main .chat .btn{padding:0;line-height:0}.main .chat .btn.disabled{opacity:1}.main .chat .btn.disabled:hover{color:inherit !important;opacity:1}.main .chat .attach{background-color:#2196f3;color:#fff;border-radius:100%}.main .chat .attach:hover{color:#fff;opacity:0.8}.main .chat .top{-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);padding:20px 5px;background:#fff}.main .chat .top .inside{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center}.main .chat .top .inside .data h5{width:100%}.main .chat .top .inside .status{position:absolute;left:4px;right:0;width:20px;height:20px;border:5px solid #fff;border-radius:100%;margin-top:0;margin-right:10px}.main .chat .top .inside .status .online{color:#2196f3}.main .chat .top .inside .status .offline{color:#ccc}.main .chat .top .inside .status .material-icons{position:absolute;left:-3px;bottom:-3px;font-size:16px}.main .chat .top .inside .btn{color:#2196f3;line-height:0;margin-left:30px;padding:0}.main .chat .top .inside .btn:hover{background:#e8e8e8}.main .chat .top .inside .dropdown-menu-right{right:0 !important;bottom:inherit !important}.main .chat .top .inside .dropdown .btn{margin-right:0}.main .chat .bottom{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;padding:30px 0;border-top:2.5px solid #fff}.main .chat .bottom .rta{position:relative;width:100%}.main .chat .bottom .rta__autocomplete{position:absolute;top:unset !important;left:7% !important;bottom:77%;border:1px solid #bdbac2;border-radius:5px;max-height:250px;background-color:#fff;overflow:auto}.main .chat .bottom .rta__autocomplete ul{display:flex;display:-ms-flexbox;flex-direction:column;padding:0;margin:0}.main .chat .bottom .rta__autocomplete ul li{padding:3px 20px;color:#2196f3;cursor:pointer}.main .chat .bottom .rta__autocomplete ul li:hover{background-color:#2196f3;color:#fff}.main .chat .bottom label{margin-bottom:0}.main .chat .bottom label input{display:none}.main .chat .bottom .form-control{border-radius:50px;-webkit-box-shadow:0px 0px 24px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 24px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 24px 0px rgba(0,0,0,0.2);padding:16px 58px;height:56px;resize:none;font-weight:400;background:white}.main .chat .bottom .form-control:disabled{background-color:#f5f5f5}.main .chat .bottom .form-control::placeholder{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.main .chat .bottom .emoji-mart{position:absolute;left:-2%;bottom:80%}.main .chat .bottom .btn{color:#2196f3;line-height:0;padding:0}.main .chat .bottom .btn.emoticons{position:absolute;top:0;left:0;bottom:0;padding:0 15px 0 20px}.main .chat .bottom .btn.emoticons:hover{background:#f5f5f5;border-radius:50% 0% 0% 50%}.main .chat .bottom .btn.send{position:absolute;top:0;right:0;bottom:0;padding:0 20px 0 15px}.main .chat .bottom .btn.send:hover{background:#f5f5f5;border-radius:0% 50% 50% 0%}.main .chat .bottom .btn.attach{width:56px;height:56px;padding:16px;margin-left:20px;color:#fff;box-shadow:0 5px 10px 4px rgba(0,0,0,0.04)}.main .chat .bottom .btn.attach:hover{color:#fff}.main .chat .bottom .btn.attach.btn.disabled:hover{color:#fff !important}.main .start{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;width:100%}.main .start .content{width:100%;text-align:center}.main .start .content h1{font-weight:800;font-size:46px;color:#212529;margin-bottom:40px}.main .start .content p{font-weight:400;font-size:16px;margin-bottom:20px}.main .start .content .third-party{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;margin-bottom:38px}.main .start .content .third-party .item{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;padding:15px;margin-right:20px;width:60px;height:60px;border-radius:100%;-webkit-box-shadow:0 0 20px rgba(0,0,0,0.04);-moz-box-shadow:0 0 20px rgba(0,0,0,0.04);box-shadow:0 0 20px rgba(0,0,0,0.04);-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s}.main .start .content .third-party .item:hover{-webkit-transform:translateY(-5px) translateZ(0);-ms-transform:translateY(-5px) translateZ(0);transform:translateY(-5px) translateZ(0);opacity:0.9}.main .start .content .third-party .item:last-of-type{margin-right:0}.main .start .content .third-party .item .material-icons{font-size:30px;color:#fff}.main .start .content .third-party .item img{width:25px;height:25px}.main .start .content form{width:100%;max-width:366px;margin:0 auto}.main .start .content .form-group{position:relative;margin-bottom:15px}.main .start .content .form-group .form-control{height:56px;padding:0 20px 0 58px;font-weight:400;border:2px solid transparent}.main .start .content .form-group .form-control:focus{border:2px solid #2196f3 !important}.main .start .content .form-group .form-control::placeholder{font-weight:400}.main .start .content .form-group .btn.icon{position:absolute;top:0;left:0;bottom:0;color:#bdbac2;line-height:0;padding:0 10px 0 20px}.main .start .content .callout span{font-size:16px}.main .start .content .callout span>a{color:#2196f3}.main .start .content .callout span>a:hover{text-decoration:underline}.navigation{-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.1);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.1);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.1);background:#fff}.navigation .inside .menu .btn{padding:0;color:inherit}.navigation .inside .menu .btn:last-child{margin-bottom:30px}.navigation .inside .menu .material-icons{display:block;font-size:45px;margin-bottom:40px}.navigation .inside .menu .power:hover{color:#dc3545}.navigation .inside .menu .power .material-icons{font-weight:600;font-size:45px;display:block;margin-bottom:0}.navigation .inside .menu .avatar-xl:hover{border:3px solid #2196f3}.navigation .inside .menu .mode:hover{color:#2196f3}.navigation .inside .menu>a.active{color:#2196f3}.requests{display:flex;display:-ms-flexbox;flex-direction:column;border-radius:6px;-webkit-box-shadow:0 0 20px rgba(0,0,0,0.04);-moz-box-shadow:0 0 20px rgba(0,0,0,0.04);box-shadow:0 0 20px rgba(0,0,0,0.04);position:relative;width:100%;background:#fff;pointer-events:auto}.requests .modal-title{width:100%}.requests .modal-title .title{display:flex;display:-ms-flexbox;justify-content:space-between;-ms-flex-align:center;align-items:center;padding:15px 20px;background:#fdfdfd}.requests .modal-title .title h1{font-weight:800;font-size:22px;color:#212529;margin-bottom:0}.requests .modal-title .title .material-icons{font-weight:800}.requests .modal-title .title .close:hover{color:#212529 !important}.requests .content{padding:18px 20px 20px}.requests .content .form-group{margin-bottom:30px}.requests .content .form-group:last-of-type{margin-bottom:33px}.requests .content .form-group .form-control{padding:0 18px;height:56px;font-weight:400;border:2px solid transparent}.requests .content .form-group .form-control:focus{border:2px solid #2196f3 !important}.requests .content .form-group .form-control::placeholder{font-weight:400}.requests .content .text-control{width:100%;height:130px;padding:14px 17px;background:#f5f5f5;font-weight:400;font-size:16px;color:#bdbac2 !important;border:2px solid transparent;border-radius:6px !important}.requests .content .text-control:focus{border:2px solid transparent;border-radius:6px;outline:0}.requests .content .text-control::placeholder{color:#bdbac2}.requests .content .members{position:absolute;top:28%;left:9%;width:82%;height:62px;display:flex;overflow:scroll;overflow-y:hidden}.requests .content .members .user{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;margin-right:7px;padding:15px;background:#fdfdfd;border-radius:6px;margin-bottom:30px;z-index:2}.requests .content .members .user .avatar-sm{margin-right:10px;box-shadow:0 0 10px 1px rgba(0,0,0,0.04)}.requests .content .members .user h5{font-weight:600;font-size:15px;color:#212529;line-height:1.7;margin-bottom:0;margin-right:6px;white-space:nowrap}.requests .content .members .user .btn .material-icons{font-weight:600;font-size:16px}.requests .content .button{padding:16px 25px;line-height:1.5}.requests .btn{padding:0;line-height:0}.create{position:absolute;top:30px;right:20px;bottom:0;width:50px;height:50px;border-radius:100%;-webkit-box-shadow:0 0 30px 5px rgba(0,0,0,0.04);-moz-box-shadow:0 0 30px 5px rgba(0,0,0,0.04);box-shadow:0 0 30px 5px rgba(0,0,0,0.04);background:#fff;display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center;padding:0;-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;float:right;cursor:pointer}.create:hover{-webkit-transform:translateY(-5px) translateZ(0);-ms-transform:translateY(-5px) translateZ(0);transform:translateY(-5px) translateZ(0)}.create .material-icons{font-weight:normal !important;font-size:22px;color:#bdbac2;margin-bottom:0 !important}.create.btn:not(:disabled):not(.disabled).active{box-shadow:0 0 30px 5px rgba(0,0,0,0.04)}.fileContainer{background-color:#f5f5f5;color:#212529}.fileContainer .uploadPictureContainer{width:46%;margin:2%}.not-found{height:100vh;background:white}.not-found svg{position:absolute;top:50%;left:50%;margin-top:-250px;margin-left:-400px}.not-found-content{position:absolute;top:50%;left:50%;margin-top:-100px;margin-left:50px;width:380px;height:200px;font-weight:300;color:#212529;font-family:Roboto}.not-found-content h1{font-size:60px;line-height:46px;margin-bottom:40px}.not-found .buttons-con .action-link-wrap{margin-top:40px}.not-found .buttons-con .action-link-wrap a{padding:8px 25px;background:#20c997;border-radius:4px;font-weight:bold;font-size:14px;color:#fff;margin-right:10px;-webkit-transition:all 0.3s linear;-moz-transition:all 0.3s linear;transition:all 0.3s linear;text-decoration:none;cursor:pointer}.not-found .buttons-con .action-link-wrap a:hover{background-color:#a0a0a0;color:#fff}.not-found #Polygon-1{animation:float 1s infinite ease-in-out alternate;animation-delay:0s}.not-found #Polygon-2{animation:float 1s infinite ease-in-out alternate;animation-delay:.2s}.not-found #Polygon-3{animation:float 1s infinite ease-in-out alternate;animation-delay:.4s}.not-found #Polygon-4{animation:float 1s infinite ease-in-out alternate;animation-delay:.6s}.not-found #Polygon-5{animation:float 1s infinite ease-in-out alternate;animation-delay:.8s}@media (max-width: 1200px){.aside{width:100%;min-width:auto;max-width:auto}}@media (min-width: 992px){.app{display:flex;display:-ms-flexbox;-ms-flex-align:flex-start;align-items:flex-start}.navigation{position:sticky;top:0;z-index:1020;overflow-x:hidden;overflow-y:auto;width:100%;min-width:100px;max-width:100px;z-index:1021}.navigation .inside{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;flex-direction:column;padding:30px 0 0;height:100vh}.navigation .inside .menu{display:flex;display:-ms-flexbox;flex-direction:column;flex-basis:auto;flex-grow:1;flex-shrink:0;text-align:center}.navigation .inside .menu .f-grow1{flex-grow:1}.navigation .inside .menu .avatar-xl{margin-bottom:50px}.sidebar{position:sticky;top:0;z-index:1020;overflow-x:hidden;overflow-y:scroll;width:100%;height:95vh;max-width:25%;padding:30px 0;margin:auto 15px}.main{height:95vh;margin:auto 15px}.main .start{height:100vh}.main .start .content .callout{display:none}.main .start .content .form-parent{display:flex}.main .start .content .form-parent .form-group{margin-right:15px}.main .start .content .form-parent .form-group:last-child{margin-right:0}.main .start .content form.signup{max-width:466px}.main .call .content .inside{max-height:calc(100vh - 0)}.main .call .content .inside .panel{padding:30px 0}.navigation::-webkit-scrollbar{display:none}.sidebar::-webkit-scrollbar{width:5px}.sidebar::-webkit-scrollbar-thumb{background:#f5f5f5}}@media (max-width: 991px){body{padding-bottom:54px;background-image:none !important}.aside{display:none}.chat{height:100vh !important}.navigation{position:fixed;left:0;right:0;bottom:0;z-index:1030;box-shadow:0 0 20px 0 rgba(0,0,0,0.04)}.navigation .inside{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:flex-end;align-items:flex-end;padding:12px 15px;flex-wrap:wrap}.navigation .inside .menu{flex-wrap:unset !important;align-items:flex-end;width:100%}.navigation .inside .menu .avatar-xl{display:none}.navigation .inside .menu .mode{margin:auto}.navigation .inside .menu .power{margin-bottom:0 !important}.navigation .inside .menu .power .material-icons{font-size:35px}.navigation .inside .menu a{margin-right:auto}.navigation .inside .menu a:first-of-type{margin-left:0}.navigation .inside .menu a:last-of-type{margin-right:0}.navigation .inside .menu .material-icons{font-size:30px;margin-bottom:0}.sidebar{height:100%;min-height:600px;max-height:600px;padding:30px 0 0;overflow-x:hidden;overflow-y:auto}.sidebar::-webkit-scrollbar{display:none}.main .start{padding:73px 0 77px}.main .start .content .button{margin-bottom:20px}.main .start .content .callout{display:block}.main .chat .content{height:600px}.main .call .content{padding:60px 0;height:100%}}@media (min-width: 768px){.container{max-width:100%}}@media (max-width: 768px){.main .chat .content{height:100%}.main .chat .bottom{padding:15px 0;margin-bottom:55px}}@media (min-width: 576px){.container{max-width:100%}}@media (max-width: 468px){.container{padding-left:5px;padding-right:5px}.requests .title{padding:30px 20px}.requests .content{padding:34px 20px 40px}.requests .content .user{left:29px}.main .start .content h1{font-size:36px}.main .call .content .options .option{padding:0 15px}.not-found svg{position:absolute;top:50%;left:50%;margin-top:-250px;margin-left:-190px}.not-found-content{position:absolute;top:50%;left:50%;margin-top:-100px;margin-left:-190px;text-align:center}}@media (max-width: 350px){.main .call .content .options .option{padding:0 12px}.main .call .content .options .option.call-end{margin:0 15px}}.sidebar{border-radius:30px;-webkit-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);-moz-box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);box-shadow:0px 0px 20px 0px rgba(0,0,0,0.2);background:#fff}.sidebar .room-info{display:flex;display:-ms-flexbox;-ms-flex-align:center;align-items:center;flex-direction:column;margin-bottom:20px}.sidebar .room-info .avatar-xl{height:auto;width:100%;min-width:100px;max-width:100px;margin-bottom:20px;cursor:pointer}.sidebar .room-info h4{color:#212529}.sidebar .contacts .contact.active .material-icons{color:#2196f3}.sidebar .contacts .contact .status{position:absolute;left:4px;right:0;width:20px;height:20px;border:5px solid #fff;border-radius:100%}.sidebar .contacts .contact .status .online{color:#2196f3}.sidebar .contacts .contact .status .offline{color:#ccc}.sidebar .contacts .contact .status .material-icons{position:absolute;left:-3px;bottom:-3px;font-size:16px}.sidebar .contacts .contact.active,.sidebar .contacts .contact:hover{border-bottom:2px solid #2196f3}.sidebar .contacts a:hover{color:inherit}.sidebar .contacts .sort-members{display:flex;display:-ms-flexbox;justify-content:space-between;-ms-flex-align:flex-start;align-items:flex-start}.sidebar .contacts .sort-members h1{padding-bottom:0}.sidebar .accordion button{width:100%;text-align:left}.sidebar .accordion button .material-icons{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;float:right}.sidebar .accordion button .material-icons.rotate{-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg)}.sidebar .discussions .single.active .material-icons{color:#2196f3}.sidebar .discussions .single .status{position:absolute;left:4px;right:0;width:20px;height:20px;border:5px solid #fff;border-radius:100%}.sidebar .discussions .single .status .online{color:#2196f3}.sidebar .discussions .single .status .offline{color:#ccc}.sidebar .discussions .single .status .material-icons{position:absolute;left:-3px;bottom:-3px;font-size:16px}.sidebar .discussions .single.active,.sidebar .discussions .single:hover{border-bottom:2px solid #2196f3}.sidebar .discussions a:hover{color:inherit}.sidebar .discussions .single.active p,.sidebar .discussions .single.active span,.sidebar .discussions .single.unread p,.sidebar .discussions .single.unread span{font-weight:500 !important;color:#212529}.sidebar .discussions .single .new{position:absolute;left:39px;right:0;width:30px;height:30px;border:2px solid #fff;border-radius:100%;-webkit-box-shadow:5px 0 10px 0 rgba(0,0,0,0.04);-moz-box-shadow:5px 0 10px 0 rgba(0,0,0,0.04);box-shadow:5px 0 10px 0 rgba(0,0,0,0.04);margin-top:-23px;background:#f0d24b;display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:center;align-items:center}.sidebar .discussions .single .new span{font-weight:500;font-size:12px;color:#fff !important}.sidebar .search{margin-bottom:30px}.sidebar .search .form-control{padding:0 15px 0 54px;height:56px}.sidebar .search .loop{position:absolute;top:0;left:0;bottom:0;padding:0 15px;margin-bottom:0 !important;line-height:0}.sidebar .search .loop .material-icons{font-weight:600;font-size:25px;color:#bdbac2}.sidebar .search .loop .material-icons.filter-list{font-weight:400}.sidebar .sort{display:flex;display:-ms-flexbox;justify-content:center;-ms-flex-align:baseline;align-items:baseline;flex-direction:row;margin-bottom:40px;text-align:center}.sidebar .sort .btn{font-weight:500;font-size:15px;color:inherit;padding:8px 20px;white-space:nowrap;border-radius:100px}.sidebar .sort .btn.active{padding:8px 20px;background:#f5f5f5;border-radius:100px;color:#2196f3}body{background-color:#fdfdfd;color:#bdbac2;display:initial;font-family:\'Maven Pro\', sans-serif;font-size:15px;background:url(\\"https://img.wallpapersafari.com/desktop/1920/1080/15/47/bld5Un.jpg\\") no-repeat center;background-size:cover}a{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s;text-decoration:none;color:inherit}a:hover{text-decoration:none;color:#2196f3}img{-webkit-transition:all 0.3s;-moz-transition:all 0.3s;transition:all 0.3s}p{font-weight:500;line-height:1.7;margin-bottom:0}.app{overflow:auto}.bg-blue{background:#2196f3 !important}.bg-indigo{background:#6610f2 !important}.bg-purple{background:#6f42c1 !important}.bg-red{background:#dc3545 !important}.bg-pink{background:#e83e8c !important}.bg-orange{background:#fd7e14 !important}.bg-gray{background:#bdbac2 !important}.bg-green{background:#28a745 !important}.bg-teal{background:#20c997 !important}.bg-yellow{background:#ffc107 !important}.material-icons.md-18{font-size:18px}.material-icons.md-24{font-size:24px}.material-icons.md-30{font-size:30px}.material-icons.md-36{font-size:36px}.material-icons.md-42{font-size:42px}.material-icons.md-48{font-size:48px}.notification-toast{position:absolute;top:0;left:0;right:0;background-color:#8b54f9;color:#fff;padding:10px;text-align:center;z-index:1021}.notification-toast span{text-decoration:underline;cursor:pointer}.img-thumbnail{width:33.33333%;cursor:pointer}.modal-dialog{max-width:450px}.modal-backdrop{opacity:0 !important}.start{padding-bottom:0}\\n", ""]);\n// Exports\nmodule.exports = exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///765\n')},770:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(14);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 22 modules\nvar es = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(39);\n\n// EXTERNAL MODULE: ./node_modules/redux-thunk/es/index.js\nvar redux_thunk_es = __webpack_require__(135);\n\n// EXTERNAL MODULE: ./node_modules/@andyet/simplewebrtc/module.js + 15 modules\nvar simplewebrtc_module = __webpack_require__(27);\n\n// EXTERNAL MODULE: ./node_modules/@pusher/chatkit-server/target/src/index.js\nvar src = __webpack_require__(331);\nvar src_default = /*#__PURE__*/__webpack_require__.n(src);\n\n// CONCATENATED MODULE: ./src/config/index.mjs\n/* jshint esversion: 10 */\n/* eslint-disable */\n\nconst tokenUrl = \'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/caf4a583-8194-4510-adbe-c9879f060ffc/token\';\nconst instanceLocator = \'v1:us1:caf4a583-8194-4510-adbe-c9879f060ffc\';\nconst key = \'7ea5e986-72fe-4cec-ba0c-4d07252f5f5f:LUB9fZZjg7vdpaFZlJEPBbZfKAe7sPLr/fhtA1+c3Co=\';\n\nconst NEWS_API_KEY = \'e30c5be02d0b4698b6a7722d93c70225\';\nconst SWRTC_API_KEY = \'970b4e5a23e7c4400327a45d\';\nconst SWRTC_CONFIG_URL = `https://api.simplewebrtc.com/config/guest/${SWRTC_API_KEY}`\n\n\n\n/* eslint-enable */\n\n// CONCATENATED MODULE: ./src/reducers/chatkit/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nvar initialState = new src_default.a({\n  instanceLocator: instanceLocator,\n  key: key\n});\n\nvar chatkit_chatkit = function chatkit() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_chatkit = (chatkit_chatkit);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/constants/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\nvar SIGN_IN = \'SIGN_IN\';\nvar SIGN_OUT = \'SIGN_OUT\';\nvar NOT_FOUND = \'NOT_FOUND\';\nvar CONNECT = \'CONNECT\';\nvar GET_ROOMS = \'GET_ROOMS\';\nvar ENTER_ROOM = \'ENTER_ROOM\';\nvar UPDATE_ROOM = \'UPDATE_ROOM\';\nvar SHOW_NOTIFICATION_TOAST = \'SHOW_NOTIFICATION_TOAST\';\nvar ADD_EMOJI = \'ADD_EMOJI\';\nvar SORT_MEMBERS = \'SORT_MEMBERS\';\nvar FILTER_ROOMS = \'FILTER_ROOMS\';\nvar TOGGLE_CALL = \'TOGGLE_CALL\';\nvar TOGGLE_PICKER = \'TOGGLE_PICKER\';\nvar TOGGLE_CAROUSEL = \'TOGGLE_CAROUSEL\';\nvar TOGGLE_USERS_BAR = \'TOGGLE_USERS_BAR\';\nvar ON_MESSAGE = \'ON_MESSAGE\';\nvar CLEAR_MESSAGE = \'CLEAR_MESSAGE\';\nvar START_LOAD_MORE = \'START_LOAD_MORE\';\nvar END_LOAD_MORE = \'END_LOAD_MORE\';\nvar USER_STARTED_TYPING = \'USER_STARTED_TYPING\';\nvar USER_STOPED_TYPING = \'USER_STOPED_TYPING\';\nvar PRESENCE_CHANGED = \'PRESENCE_CHANGED\';\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/authentication/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar authentication_initialState = {\n  userId: \'\',\n  currentScreen: \'SignIn\'\n};\n\nvar authentication_authentication = function authentication() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : authentication_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SIGN_IN:\n      return {\n        userId: action.userId,\n        currentScreen: \'Chat\'\n      };\n\n    case SIGN_OUT:\n      return {\n        userId: \'\',\n        currentScreen: \'SignIn\'\n      };\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_authentication = (authentication_authentication);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/notification/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar notification_initialState = false;\n\nvar notification_notification = function notification() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : notification_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_NOTIFICATION_TOAST:\n      return action.isShow;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_notification = (notification_notification);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/videoCall/index.jsx\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar videoCall_initialState = {\n  show: false,\n  cam: false\n};\n\nvar videoCall_videoCall = function videoCall() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : videoCall_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_CALL:\n      var show = !state.show;\n      var cam = action.cam;\n      return _objectSpread({}, state, {\n        show: show,\n        cam: cam\n      });\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_videoCall = (videoCall_videoCall);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/isLoading.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar isLoading_initialState = true;\n\nvar isLoading_isLoading = function isLoading() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : isLoading_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ROOMS:\n      return false;\n\n    case CLEAR_MESSAGE:\n      return true;\n\n    case NOT_FOUND:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var messages_isLoading = (isLoading_isLoading);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/justLoadMore.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar justLoadMore_initialState = false;\n\nvar justLoadMore_justLoadMore = function justLoadMore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : justLoadMore_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ON_MESSAGE:\n      return false;\n\n    case CLEAR_MESSAGE:\n      return false;\n\n    case START_LOAD_MORE:\n      return false;\n\n    case END_LOAD_MORE:\n      return true;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var messages_justLoadMore = (justLoadMore_justLoadMore);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/messages.jsx\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar messages_initialState = [];\n\nvar messages_messages = function messages() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : messages_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ON_MESSAGE:\n      return [].concat(_toConsumableArray(state), [action.message]);\n\n    case END_LOAD_MORE:\n      return [].concat(_toConsumableArray(action.messages), _toConsumableArray(state));\n\n    case CLEAR_MESSAGE:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_messages_messages = (messages_messages);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/images.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar images_initialState = [];\n\nvar images_images = function images() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : images_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ON_MESSAGE:\n      action.message.parts.forEach(function (_ref) {\n        var partType = _ref.partType,\n            payload = _ref.payload;\n        if (partType === \'attachment\') state.push({\n          src: payload._downloadURL\n        });\n      });\n      return state;\n\n    case END_LOAD_MORE:\n      action.messages.forEach(function (message) {\n        message.parts.forEach(function (_ref2) {\n          var partType = _ref2.partType,\n              payload = _ref2.payload;\n          if (partType === \'attachment\') state.push({\n            src: payload._downloadURL\n          });\n        });\n      });\n      return state;\n\n    case CLEAR_MESSAGE:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var messages_images = (images_images);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/messages/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/currentUser.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar currentUser_initialState = {};\n\nvar currentUser_currentUser = function currentUser() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : currentUser_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CONNECT:\n      return action.currentUser;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var users_currentUser = (currentUser_currentUser);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/typingUsers.jsx\nfunction typingUsers_toConsumableArray(arr) { return typingUsers_arrayWithoutHoles(arr) || typingUsers_iterableToArray(arr) || typingUsers_nonIterableSpread(); }\n\nfunction typingUsers_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction typingUsers_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction typingUsers_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar typingUsers_initialState = [];\n\nvar typingUsers_typingUsers = function typingUsers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : typingUsers_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_STARTED_TYPING:\n      return [].concat(typingUsers_toConsumableArray(state), [action.user]);\n\n    case USER_STOPED_TYPING:\n      return state.filter(function (user) {\n        return user.id !== action.user.id;\n      });\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var users_typingUsers = (typingUsers_typingUsers);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/roomUsers.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar roomUsers_initialState = [];\n\nvar roomUsers_roomUsers = function roomUsers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roomUsers_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ENTER_ROOM:\n      return action.roomActive.users;\n\n    case PRESENCE_CHANGED:\n      return action.roomActive.users.sort(function (user) {\n        if (user.presence.state === \'online\') return -1;else return 1;\n      });\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var users_roomUsers = (roomUsers_roomUsers);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/users/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/rooms/rooms.jsx\nfunction rooms_toConsumableArray(arr) { return rooms_arrayWithoutHoles(arr) || rooms_iterableToArray(arr) || rooms_nonIterableSpread(); }\n\nfunction rooms_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction rooms_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction rooms_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar rooms_initialState = [];\n\nvar rooms_rooms = function rooms() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : rooms_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ROOMS:\n      return action.rooms;\n\n    case UPDATE_ROOM:\n      var index = state.findIndex(function (room) {\n        if (room) return action.room.id === room.id;\n      });\n      if (index === -1) return state;\n      state[index] = action.room;\n      return rooms_toConsumableArray(state);\n\n    case PRESENCE_CHANGED:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var reducers_rooms_rooms = (rooms_rooms);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/rooms/roomActive.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar roomActive_initialState = {};\n\nvar roomActive_roomActive = function roomActive() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roomActive_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CONNECT:\n      return state;\n\n    case ENTER_ROOM:\n      return action.roomActive;\n\n    case PRESENCE_CHANGED:\n      return action.roomActive;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var rooms_roomActive = (roomActive_roomActive);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/rooms/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/userSort.jsx\nfunction userSort_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction userSort_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { userSort_ownKeys(Object(source), true).forEach(function (key) { userSort_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { userSort_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction userSort_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar userSort_initialState = {\n  by: \'status\',\n  value: 1\n};\n\nvar userSort_userSort = function userSort() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userSort_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SORT_MEMBERS:\n      var by = action.by,\n          value = action.value;\n      return userSort_objectSpread({}, state, {\n        by: by,\n        value: value\n      });\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_userSort = (userSort_userSort);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/roomFilter.jsx\nfunction roomFilter_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction roomFilter_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { roomFilter_ownKeys(Object(source), true).forEach(function (key) { roomFilter_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { roomFilter_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction roomFilter_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar roomFilter_initialState = {\n  name: \'\',\n  status: 0,\n  isPrivate: false\n};\n\nvar roomFilter_roomFilter = function roomFilter() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roomFilter_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FILTER_ROOMS:\n      var name = action.name,\n          status = action.status,\n          isPrivate = action.isPrivate;\n      return roomFilter_objectSpread({}, state, {\n        name: name,\n        status: status,\n        isPrivate: isPrivate\n      });\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_roomFilter = (roomFilter_roomFilter);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/showPicker.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar showPicker_initialState = false;\n\nvar showPicker_showPicker = function showPicker() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : showPicker_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_EMOJI:\n      return false;\n\n    case TOGGLE_PICKER:\n      return !state;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_showPicker = (showPicker_showPicker);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/showCarousel.jsx\nfunction showCarousel_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction showCarousel_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { showCarousel_ownKeys(Object(source), true).forEach(function (key) { showCarousel_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { showCarousel_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction showCarousel_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar showCarousel_initialState = {\n  isShow: false,\n  imageIndex: -1,\n  where: \'\'\n};\n\nvar showCarousel_showCarousel = function showCarousel() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : showCarousel_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_CAROUSEL:\n      return showCarousel_objectSpread({}, showCarousel, {\n        isShow: !state.isShow,\n        imageIndex: action.imageIndex,\n        where: action.where\n      });\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_showCarousel = (showCarousel_showCarousel);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/showUsersBar.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar showUsersBar_initialState = false;\n\nvar showUsersBar_showUsersBar = function showUsersBar() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : showUsersBar_initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_USERS_BAR:\n      return !state;\n\n    default:\n      return state;\n  }\n};\n\n/* harmony default export */ var controls_showUsersBar = (showUsersBar_showUsersBar);\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/controls/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/reducers/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\n\n\nvar rootReducer = Object(redux["c" /* combineReducers */])({\n  simplewebrtc: simplewebrtc_module["m" /* reducer */],\n  authentication: reducers_authentication,\n  notification: reducers_notification,\n  justLoadMore: messages_justLoadMore,\n  showCarousel: controls_showCarousel,\n  showUsersBar: controls_showUsersBar,\n  currentUser: users_currentUser,\n  typingUsers: users_typingUsers,\n  roomActive: rooms_roomActive,\n  roomFilter: controls_roomFilter,\n  showPicker: controls_showPicker,\n  videoCall: reducers_videoCall,\n  roomUsers: users_roomUsers,\n  isLoading: messages_isLoading,\n  userSort: controls_userSort,\n  messages: reducers_messages_messages,\n  chatkit: reducers_chatkit,\n  images: messages_images,\n  rooms: reducers_rooms_rooms\n});\nvar composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || redux["d" /* compose */];\nvar store = Object(redux["e" /* createStore */])(rootReducer, {\n  simplewebrtc: {}\n}, composeEnhancer(Object(redux["a" /* applyMiddleware */])(redux_thunk_es["a" /* default */])));\n/* harmony default export */ var reducers = (store);\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-router-dom/esm/react-router-dom.js\nvar react_router_dom = __webpack_require__(35);\n\n// EXTERNAL MODULE: ./node_modules/react-router/esm/react-router.js + 1 modules\nvar react_router = __webpack_require__(65);\n\n// CONCATENATED MODULE: ./src/components/FormControls/AuthInput.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nfunction AuthInput(props) {\n  var type = props.type,\n      id = props.id,\n      value = props.value,\n      placeholder = props.placeholder,\n      icon = props.icon;\n\n  var onChange = function onChange(event) {\n    return props.onChange(event);\n  };\n\n  return react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("input", {\n    type: type,\n    name: type,\n    id: id,\n    className: "form-control",\n    value: value,\n    placeholder: placeholder,\n    onChange: onChange,\n    required: true\n  }), react_default.a.createElement("button", {\n    className: "btn icon"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, icon)));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/@webscopeio/react-textarea-autocomplete/dist/react-textarea-autocomplete.es.js\nvar react_textarea_autocomplete_es = __webpack_require__(333);\n\n// EXTERNAL MODULE: ./node_modules/emoji-mart/dist-es/index.js + 29 modules\nvar dist_es = __webpack_require__(207);\n\n// EXTERNAL MODULE: ./node_modules/@pusher/chatkit-client/dist/web/chatkit.js\nvar web_chatkit = __webpack_require__(203);\n\n// EXTERNAL MODULE: ./node_modules/crypto-js/index.js\nvar crypto_js = __webpack_require__(82);\n\n// CONCATENATED MODULE: ./src/functions/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\nvar alertError = function alertError(title, err) {\n  try {\n    var error = err.error_description ? err.error_description : err.info.error_description;\n  } catch (_unused) {\n    error = err.error;\n  }\n\n  console.log(err);\n  alert(title + \': \' + error);\n};\nvar onGetPrivateUser = function onGetPrivateUser(room, currentUserId, isFilter) {\n  var members = room.customData.members;\n  var users = Object.values(room.userStore.users);\n  var mainUser = members[0];\n  if (members.length === 2) mainUser = members.find(function (member) {\n    return member.id !== currentUserId;\n  });\n  var roomName = isFilter ? mainUser.name.toLowerCase() : mainUser.name;\n  var roomStatus = isFilter ? -1 : \'\';\n  mainUser = users.find(function (user) {\n    return user.id === mainUser.id;\n  });\n\n  if (mainUser) {\n    var _mainUser = mainUser,\n        name = _mainUser.name,\n        presence = _mainUser.presence;\n    roomName = name;\n    roomStatus = presence.state;\n    if (isFilter) roomStatus = presence.state === \'online\' ? 1 : -1;\n  }\n\n  return {\n    roomName: roomName,\n    roomStatus: roomStatus\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/notification.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar notification_grantPermission = function grantPermission() {\n  return function (dispatch, getState) {\n    if (!(\'Notification\' in window)) {\n      alert(\'Trình duyệt của bạn không hỗ trợ hiển thị thông báo\');\n      return;\n    }\n\n    var _Notification = Notification,\n        permission = _Notification.permission;\n\n    if (permission === \'granted\') {\n      new Notification(\'Bạn đã cho phép hiển thị thông báo rồi\');\n      dispatch({\n        type: SHOW_NOTIFICATION_TOAST,\n        isShow: false\n      });\n      return;\n    }\n\n    if (permission !== \'denied\' || permission === \'default\') {\n      Notification.requestPermission().then(function (result) {\n        if (result === \'granted\') new Notification(\'Tuyệt vời !!!\', {\n          body: \'QuanChat sẽ bắt đầu thông báo cho bạn về tin nhắn mới nhất\'\n        });\n      });\n    }\n\n    dispatch({\n      type: SHOW_NOTIFICATION_TOAST,\n      isShow: false\n    });\n  };\n};\nvar notification_showNotificationToast = function showNotificationToast() {\n  return function (dispatch, getState) {\n    if (window.Notification && Notification.permission === \'granted\') return;\n    dispatch({\n      type: SHOW_NOTIFICATION_TOAST,\n      isShow: true\n    });\n  };\n};\nvar showNotification = function showNotification(title, lastMessage) {\n  return function (dispatch, getState) {\n    new Notification(title, {\n      body: lastMessage\n    });\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/messages.jsx\nfunction messages_toConsumableArray(arr) { return messages_arrayWithoutHoles(arr) || messages_iterableToArray(arr) || messages_nonIterableSpread(); }\n\nfunction messages_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction messages_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction messages_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nvar messages_typingMessage = function typingMessage() {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        currentUser = _getState.currentUser,\n        roomActive = _getState.roomActive;\n\n    currentUser.isTypingIn({\n      roomId: roomActive.id\n    })["catch"](function (err) {\n      return alertError(\'Error on typing rooms\', err);\n    });\n  };\n};\nvar messages_sendMessage = function sendMessage(parts) {\n  var roomId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return function (dispatch, getState) {\n    var _getState2 = getState(),\n        currentUser = _getState2.currentUser,\n        roomActive = _getState2.roomActive;\n\n    if (roomId === null) roomId = "".concat(roomActive.id);\n    currentUser.sendMultipartMessage({\n      roomId: roomId,\n      parts: parts\n    })["catch"](function (err) {\n      return alertError(\'Error on sending message\', err);\n    });\n  };\n};\nvar messages_sendNews = function sendNews(query) {\n  return function (dispatch, getState) {\n    var newsApi = "https://newsapi.org/v2/everything?q=".concat(query, "&pageSize=3&apiKey=").concat(NEWS_API_KEY);\n    fetch(newsApi).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      var parts = [];\n      data.articles.forEach(function (article) {\n        var title = article.title,\n            source = article.source,\n            url = article.url;\n        parts.push({\n          type: \'text/plain\',\n          content: "".concat(title, " - ").concat(source.name, " - ").concat(url)\n        });\n      });\n      dispatch(messages_sendMessage(parts));\n    })["catch"](function (err) {\n      return alertError(\'Error on fetching newsapi\', err);\n    });\n  };\n};\nvar messages_fetchLastMessage = function fetchLastMessage() {\n  return function (dispatch, getState) {\n    var _getState3 = getState(),\n        currentUser = _getState3.currentUser,\n        messages = _getState3.messages;\n\n    var _messages = messages[messages.length - 1],\n        room = _messages.room,\n        sender = _messages.sender,\n        parts = _messages.parts;\n    var id = room.id,\n        name = room.name,\n        customData = room.customData;\n    var _parts = parts[parts.length - 1],\n        partType = _parts.partType,\n        payload = _parts.payload;\n    var lastMessage = ": ".concat(payload.content);\n    if (partType === \'attachment\') lastMessage = \' đã gửi 1 ảnh\';else if (partType === \'url\') lastMessage = \' đã gửi 1 liên kết\';\n    lastMessage = "".concat(sender.name).concat(lastMessage);\n    currentUser.updateRoom({\n      roomId: id,\n      customData: {\n        lastMessage: lastMessage,\n        members: customData.members\n      }\n    }).then(function () {\n      if (currentUser.id !== sender.id) dispatch(showNotification(name, lastMessage));\n    });\n  };\n};\nvar messages_loadMoreMessages = function loadMoreMessages() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: START_LOAD_MORE\n    });\n\n    var _getState4 = getState(),\n        currentUser = _getState4.currentUser,\n        messages = _getState4.messages,\n        roomActive = _getState4.roomActive;\n\n    if (messages.length === 0) return;\n    var oldestMessageId = Math.min.apply(Math, messages_toConsumableArray(messages.map(function (message) {\n      return message.id;\n    })));\n    currentUser.fetchMultipartMessages({\n      roomId: roomActive.id,\n      initialId: oldestMessageId,\n      direction: \'older\',\n      limit: 10\n    }).then(function (messages) {\n      return dispatch({\n        type: END_LOAD_MORE,\n        messages: messages\n      });\n    });\n  };\n};\n// CONCATENATED MODULE: ./src/actions/rooms.jsx\nvar _this = undefined;\n\nfunction actions_rooms_toConsumableArray(arr) { return actions_rooms_arrayWithoutHoles(arr) || actions_rooms_iterableToArray(arr) || actions_rooms_nonIterableSpread(); }\n\nfunction actions_rooms_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction actions_rooms_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction actions_rooms_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction rooms_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction rooms_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { rooms_ownKeys(Object(source), true).forEach(function (key) { rooms_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { rooms_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction rooms_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\nvar rooms_onSetRoomActive = function onSetRoomActive(roomActive, currentUserId) {\n  var isPrivate = roomActive.isPrivate,\n      users = roomActive.users;\n\n  if (isPrivate) {\n    var _onGetPrivateUser = onGetPrivateUser(roomActive, currentUserId, false),\n        roomName = _onGetPrivateUser.roomName,\n        roomStatus = _onGetPrivateUser.roomStatus;\n\n    return rooms_objectSpread({}, roomActive, {\n      users: users,\n      name: roomName,\n      status: roomStatus\n    });\n  }\n\n  return roomActive;\n};\nvar rooms_getRooms = function getRooms(currentUser) {\n  return function (dispatch, getState) {\n    currentUser.getJoinableRooms().then(function (unjoinedRooms) {\n      var rooms = [].concat(actions_rooms_toConsumableArray(currentUser.rooms), actions_rooms_toConsumableArray(unjoinedRooms));\n      dispatch({\n        type: GET_ROOMS,\n        rooms: rooms\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on getting rooms\', err);\n    });\n  };\n};\nvar rooms_enterRoom = function enterRoom(roomId) {\n  return function (dispatch, getState) {\n    var currentUser = getState().currentUser;\n    dispatch({\n      type: CLEAR_MESSAGE\n    });\n    if (!currentUser.id) return;\n    currentUser.subscribeToRoomMultipart({\n      roomId: roomId,\n      messageLimit: 10,\n      hooks: {\n        onMessage: function onMessage(message) {\n          setTimeout(function () {\n            return dispatch(messages_fetchLastMessage());\n          }, 250);\n\n          if (location.hash.substr(7) === roomId) {\n            dispatch({\n              type: ON_MESSAGE,\n              message: message\n            });\n            currentUser.setReadCursor({\n              roomId: roomId,\n              position: message.id\n            });\n          }\n        },\n        onUserStartedTyping: function onUserStartedTyping(user) {\n          var _getState = getState(),\n              roomActive = _getState.roomActive;\n\n          if (roomActive.id === roomId) dispatch({\n            type: USER_STARTED_TYPING,\n            user: user\n          });\n        },\n        onUserStoppedTyping: function onUserStoppedTyping(user) {\n          var _getState2 = getState(),\n              roomActive = _getState2.roomActive;\n\n          if (roomActive.id === roomId) dispatch({\n            type: USER_STOPED_TYPING,\n            user: user\n          });\n        },\n        onPresenceChanged: function onPresenceChanged() {\n          var _getState3 = getState(),\n              currentUser = _getState3.currentUser,\n              roomActive = _getState3.roomActive;\n\n          if (roomActive.id === roomId) dispatch({\n            type: PRESENCE_CHANGED,\n            roomActive: rooms_onSetRoomActive(roomActive, currentUser.id)\n          });\n        }\n      }\n    }).then(function (roomActive) {\n      dispatch({\n        type: ENTER_ROOM,\n        roomActive: rooms_onSetRoomActive(roomActive, currentUser.id)\n      });\n      dispatch(rooms_getRooms(currentUser));\n      dispatch(notification_showNotificationToast.call(_this));\n    })["catch"](function (err) {\n      return alertError(\'Error on entering rooms: \', err);\n    });\n  };\n};\nvar rooms_createRoom = function createRoom(name, message) {\n  return function (dispatch, getState) {\n    var currentUser = getState().currentUser;\n    currentUser.createRoom({\n      name: name,\n      customData: {\n        lastMessage: \'\'\n      }\n    }).then(function (room) {\n      var roomId = room.id;\n      var parts = [];\n\n      if (message.trim()) {\n        parts.push({\n          type: \'text/plain\',\n          content: message\n        });\n        dispatch(messages_sendMessage(parts, "".concat(roomId)));\n      }\n\n      history.pushState(null, null, "#/room/".concat(roomId));\n      setTimeout(function () {\n        return dispatch(rooms_enterRoom(roomId));\n      }, 250);\n    })["catch"](function (err) {\n      return alertError(\'Error on creating rooms\', err);\n    });\n  };\n};\nvar rooms_createPrivateRoom = function createPrivateRoom(user) {\n  return function (dispatch, getState) {\n    var _getState4 = getState(),\n        chatkit = _getState4.chatkit,\n        currentUser = _getState4.currentUser;\n\n    var id = currentUser.id,\n        name = currentUser.name;\n    var roomId = Object(crypto_js["HmacSHA1"])("".concat(id).concat(user.id), key).toString();\n    var otherRoomId = Object(crypto_js["HmacSHA1"])("".concat(user.id).concat(id), key).toString();\n    var members = user.id === id ? [{\n      id: id,\n      name: name\n    }] : [{\n      id: id,\n      name: name\n    }, {\n      id: user.id,\n      name: user.name\n    }];\n    chatkit.getRooms({\n      includePrivate: true\n    }).then(function (rooms) {\n      var privateRoomCreated = rooms.some(function (room) {\n        return room.id === roomId || room.id === otherRoomId;\n      });\n      if (!privateRoomCreated) currentUser.createRoom({\n        id: roomId,\n        name: "".concat(name, " & ").concat(user.name),\n        "private": true,\n        addUserIds: [user.id],\n        customData: {\n          lastMessage: \'\',\n          members: members\n        }\n      })["catch"](function (err) {\n        alertError(\'Error on creating private rooms\', err);\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on getting all rooms\', err);\n    });\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/controls.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\nvar controls_addEmoji = function addEmoji(emoji, message) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: ADD_EMOJI\n    });\n    return "".concat(message).concat(emoji["native"]);\n  };\n};\nvar controls_sortMembers = function sortMembers(by, value) {\n  return {\n    type: SORT_MEMBERS,\n    by: by,\n    value: value\n  };\n};\nvar controls_filterRooms = function filterRooms(name, status, isPrivate) {\n  return {\n    type: FILTER_ROOMS,\n    name: name,\n    status: status,\n    isPrivate: isPrivate\n  };\n};\nvar controls_toggleCall = function toggleCall() {\n  var cam = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return {\n    type: TOGGLE_CALL,\n    cam: cam\n  };\n};\nvar controls_togglePicker = function togglePicker() {\n  return {\n    type: TOGGLE_PICKER\n  };\n};\nvar controls_toggleCarousel = function toggleCarousel() {\n  var imageIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n  var where = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'\';\n  return {\n    type: TOGGLE_CAROUSEL,\n    imageIndex: imageIndex,\n    where: where\n  };\n};\nvar controls_toggleUsersBar = function toggleUsersBar() {\n  return {\n    type: TOGGLE_USERS_BAR\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/authentication.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nvar authentication_signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nvar authentication_signUp = function signUp(name, email, password) {\n  return function (dispatch, getState) {\n    var chatkit = getState().chatkit;\n    var id = Object(crypto_js["HmacSHA1"])("".concat(email, "@!?#?").concat(password), key).toString();\n    var avatarURL = "https://avatars.dicebear.com/v2/avataaars/".concat(name, ".svg?options[eyes][]=squint&options[eyebrow][]=raised&options[mouth][]=smile");\n    chatkit.createUser({\n      id: id,\n      name: name,\n      avatarURL: avatarURL\n    }).then(function () {\n      return alert(\'User created successfully\');\n    })["catch"](function (err) {\n      return alertError(\'Error on sign up\', err);\n    });\n  };\n};\nvar authentication_signIn = function signIn(email, password) {\n  return function (dispatch, getState) {\n    var chatkit = getState().chatkit;\n    var id = Object(crypto_js["HmacSHA1"])("".concat(email, "@!?#?").concat(password), key).toString();\n    chatkit.getUser({\n      id: id\n    }).then(function () {\n      return dispatch({\n        type: SIGN_IN,\n        userId: id\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on sign in\', err);\n    });\n  };\n};\nvar authentication_connect = function connect(userId) {\n  return function (dispatch, getState) {\n    var chatManager = new web_chatkit["ChatManager"]({\n      instanceLocator: instanceLocator,\n      userId: userId,\n      tokenProvider: new web_chatkit["TokenProvider"]({\n        url: tokenUrl\n      })\n    });\n    chatManager.connect({\n      onRoomUpdated: function onRoomUpdated(room) {\n        dispatch({\n          type: UPDATE_ROOM,\n          room: room\n        });\n      },\n      onAddedToRoom: function onAddedToRoom(room) {\n        if (room.isPrivate) {\n          var currentUser = getState().currentUser;\n          dispatch(rooms_getRooms(currentUser));\n        }\n      },\n      onPresenceChanged: function onPresenceChanged() {\n        var _getState$roomFilter = getState().roomFilter,\n            name = _getState$roomFilter.name,\n            status = _getState$roomFilter.status,\n            isPrivate = _getState$roomFilter.isPrivate;\n        dispatch(controls_filterRooms(name, status, isPrivate));\n      }\n    }).then(function (currentUser) {\n      dispatch({\n        type: CONNECT,\n        currentUser: currentUser\n      });\n      dispatch(rooms_getRooms(currentUser));\n    }).then(function () {\n      var chatkit = getState().chatkit;\n      chatkit.getUsers().then(function (users) {\n        users.forEach(function (user) {\n          return dispatch(rooms_createPrivateRoom(user));\n        });\n      })["catch"](function (err) {\n        return alertError(\'Error on getting all users\', err);\n      });\n    })["catch"](function (err) {\n      return alertError(\'Error on connection\', err);\n    });\n  };\n};\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/actions/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-images-upload/compiled.js\nvar compiled = __webpack_require__(338);\nvar compiled_default = /*#__PURE__*/__webpack_require__.n(compiled);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/ButtonToolbar.js\nvar ButtonToolbar = __webpack_require__(772);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Button.js\nvar Button = __webpack_require__(340);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Modal.js + 20 modules\nvar Modal = __webpack_require__(777);\n\n// CONCATENATED MODULE: ./src/components/FormControls/Dialog.jsx\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Dialog(props) {\n  var _useState = Object(react["useState"])(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalShow = _useState2[0],\n      setModalShow = _useState2[1];\n\n  var type = props.type,\n      title = props.title,\n      icon = props.icon,\n      disabled = props.disabled,\n      children = props.children;\n\n  var onCloseModal = function onCloseModal() {\n    return setModalShow(false);\n  };\n\n  var onShowModal = function onShowModal() {\n    if (!disabled) setModalShow(true);\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    props.onSubmit();\n    onCloseModal();\n  };\n\n  return react_default.a.createElement(ButtonToolbar["a" /* default */], null, react_default.a.createElement(Button["a" /* default */], {\n    className: type,\n    variant: "outline-primary",\n    onClick: onShowModal\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, icon)), react_default.a.createElement(Modal["a" /* default */], {\n    centered: true,\n    show: modalShow,\n    onHide: onCloseModal\n  }, react_default.a.createElement("div", {\n    className: "requests"\n  }, react_default.a.createElement(Modal["a" /* default */].Header, null, react_default.a.createElement(Modal["a" /* default */].Title, null, react_default.a.createElement("div", {\n    className: "title"\n  }, react_default.a.createElement("h1", null, title), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn",\n    onClick: onCloseModal\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "close"))))), react_default.a.createElement(Modal["a" /* default */].Body, null, react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("form", {\n    onSubmit: onSubmit\n  }, children, react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn button w-100"\n  }, title)))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/FormControls/UploadImage.jsx\nfunction UploadImage_slicedToArray(arr, i) { return UploadImage_arrayWithHoles(arr) || UploadImage_iterableToArrayLimit(arr, i) || UploadImage_nonIterableRest(); }\n\nfunction UploadImage_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction UploadImage_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction UploadImage_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction UploadImage() {\n  var roomActive = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomActive;\n  });\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])([]),\n      _useState2 = UploadImage_slicedToArray(_useState, 2),\n      pictures = _useState2[0],\n      setPictures = _useState2[1];\n\n  var _useState3 = Object(react["useState"])(\'\'),\n      _useState4 = UploadImage_slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var onDrop = function onDrop(pictureFiles) {\n    return setPictures(pictureFiles);\n  };\n\n  var onChange = function onChange(event) {\n    return setMessage(event.target.value);\n  };\n\n  var onSubmit = function onSubmit() {\n    if (pictures.length === 0) return;\n    var parts = [];\n    pictures.forEach(function (pic) {\n      return parts.push({\n        file: pic\n      });\n    });\n    if (message.trim()) parts.push({\n      type: \'text/plain\',\n      content: message\n    });\n    dispatch(messages_sendMessage(parts));\n    setPictures([]);\n    setMessage(\'\');\n  };\n\n  return react_default.a.createElement(Dialog, {\n    type: "attach d-sm-block d-none",\n    title: "Th\\xEAm \\u1EA3nh",\n    icon: "photo",\n    onSubmit: onSubmit,\n    disabled: !roomActive.id\n  }, react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "Tin nh\\u1EAFn:"), react_default.a.createElement(compiled_default.a, {\n    withIcon: true,\n    withPreview: true,\n    buttonText: "Ch\\u1ECDn \\u1EA3nh t\\u1EEB m\\xE1y",\n    imgExtension: [\'.jpg\', \'.jpeg\', \'.png\', \'.gif\'],\n    maxFileSize: 5242880,\n    onChange: onDrop\n  })), react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "Tin nh\\u1EAFn:"), react_default.a.createElement("input", {\n    type: "text",\n    name: "name",\n    value: message,\n    className: "form-control",\n    placeholder: "Th\\xEAm tin nh\\u1EAFn v\\u1EC1 \\u1EA3nh n\\xE0y...",\n    onChange: onChange\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/emoji-mart/css/emoji-mart.css\nvar emoji_mart = __webpack_require__(679);\n\n// CONCATENATED MODULE: ./src/components/FormControls/SendMessage.jsx\nfunction SendMessage_toConsumableArray(arr) { return SendMessage_arrayWithoutHoles(arr) || SendMessage_iterableToArray(arr) || SendMessage_nonIterableSpread(); }\n\nfunction SendMessage_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction SendMessage_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction SendMessage_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction SendMessage_slicedToArray(arr, i) { return SendMessage_arrayWithHoles(arr) || SendMessage_iterableToArrayLimit(arr, i) || SendMessage_nonIterableRest(); }\n\nfunction SendMessage_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction SendMessage_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction SendMessage_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction SendMessage() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive,\n      showPicker = _useSelector.showPicker;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])(\'\'),\n      _useState2 = SendMessage_slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var onTogglePicker = function onTogglePicker() {\n    return dispatch(controls_togglePicker());\n  };\n\n  var onAddEmoji = function onAddEmoji(emoji) {\n    return setMessage(dispatch(controls_addEmoji(emoji, message)));\n  };\n\n  var filterUserNames = function filterUserNames(token) {\n    return roomActive.users.filter(function (user) {\n      return user.name.includes(token);\n    });\n  };\n\n  var handleSlashCommand = function handleSlashCommand(message) {\n    var cmd = message.split(\' \')[0];\n    var query = message.slice(cmd.length).trim();\n\n    if (cmd !== \'/news\') {\n      alert("L\\u1EC7nh ".concat(cmd, " Kh\\xF4ng h\\u1EE3p l\\u1EC7"));\n      return;\n    }\n\n    dispatch(messages_sendNews(query));\n  };\n\n  var onChange = function onChange(event) {\n    setMessage(event.target.value);\n    dispatch(messages_typingMessage());\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    var parts = [];\n\n    if (message.trim()) {\n      if (message.startsWith(\'/\')) {\n        handleSlashCommand(message);\n        setMessage(\'\');\n        return;\n      }\n\n      parts.push({\n        type: \'text/plain\',\n        content: message\n      });\n      dispatch(messages_sendMessage(parts));\n      setMessage(\'\');\n    }\n  };\n\n  return react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "bottom"\n  }, react_default.a.createElement("form", {\n    className: "position-relative w-100",\n    onSubmit: onSubmit\n  }, react_default.a.createElement(react_textarea_autocomplete_es["a" /* default */], {\n    className: "form-control",\n    value: message,\n    loadingComponent: function loadingComponent() {\n      return react_default.a.createElement("p", null, "Loading...");\n    },\n    onChange: onChange,\n    placeholder: "Nh\\u1EADp tin nh\\u1EAFn. G\\xF5 @ \\u0111\\u1EC3 \\u0111\\u1EC1 c\\u1EADp ai \\u0111\\xF3",\n    trigger: {\n      \'@\': {\n        dataProvider: function dataProvider(token) {\n          return SendMessage_toConsumableArray(filterUserNames(token));\n        },\n        component: function component(_ref) {\n          var name = _ref.entity.name;\n          return react_default.a.createElement("div", null, name);\n        },\n        output: function output(item) {\n          return "@".concat(item.name);\n        }\n      },\n      \':\': {\n        dataProvider: function dataProvider(token) {\n          return dist_es["b" /* emojiIndex */].search(token).map(function (o) {\n            return {\n              colons: o.colons,\n              "native": o["native"]\n            };\n          });\n        },\n        component: function component(_ref2) {\n          var _ref2$entity = _ref2.entity,\n              _native = _ref2$entity["native"],\n              colons = _ref2$entity.colons;\n          return react_default.a.createElement("div", null, "".concat(colons, " ").concat(_native));\n        },\n        output: function output(item) {\n          return "".concat(item["native"]);\n        }\n      }\n    },\n    disabled: !roomActive.id\n  }), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn emoticons",\n    onClick: onTogglePicker,\n    disabled: !roomActive.id\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "insert_emoticon")), react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn send"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "send")), showPicker && react_default.a.createElement(dist_es["a" /* Picker */], {\n    set: "emojione",\n    onSelect: onAddEmoji\n  })), react_default.a.createElement(UploadImage, null))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/FormControls/FilterRooms.jsx\nfunction FilterRooms_slicedToArray(arr, i) { return FilterRooms_arrayWithHoles(arr) || FilterRooms_iterableToArrayLimit(arr, i) || FilterRooms_nonIterableRest(); }\n\nfunction FilterRooms_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction FilterRooms_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction FilterRooms_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction FilterRooms(_ref) {\n  var placeholder = _ref.placeholder;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomFilter;\n  }),\n      name = _useSelector.name,\n      status = _useSelector.status,\n      isPrivate = _useSelector.isPrivate;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])(\'\'),\n      _useState2 = FilterRooms_slicedToArray(_useState, 2),\n      searchText = _useState2[0],\n      setSearchText = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var roomName = event.target.value.toLowerCase().trim();\n    setSearchText(event.target.value);\n    dispatch(controls_filterRooms(roomName, status, isPrivate));\n  };\n\n  Object(react["useEffect"])(function () {\n    return setSearchText(\'\');\n  }, [isPrivate]);\n  return react_default.a.createElement("div", {\n    id: "room-filter"\n  }, react_default.a.createElement("div", {\n    className: "search"\n  }, react_default.a.createElement("form", {\n    className: "form-inline position-relative"\n  }, react_default.a.createElement("input", {\n    type: "search",\n    className: "form-control",\n    placeholder: placeholder,\n    onChange: onChange,\n    value: searchText\n  }), react_default.a.createElement("button", {\n    type: "button",\n    className: "btn btn-link loop"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "search")))), react_default.a.createElement("div", {\n    className: "list-group sort"\n  }, react_default.a.createElement("button", {\n    className: "btn ".concat(status === 0 && \'active show\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(name, 0, isPrivate));\n    }\n  }, "T\\u1EA5t c\\u1EA3"), react_default.a.createElement("button", {\n    className: "btn ".concat(status === 1 && \'active show\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(name, 1, isPrivate));\n    }\n  }, isPrivate ? \'Online\' : \'Đã đọc\'), react_default.a.createElement("button", {\n    className: "btn ".concat(status === -1 && \'active show\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(name, -1, isPrivate));\n    }\n  }, isPrivate ? \'Offline\' : \'Chưa đọc\')));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/DropdownButton.js\nvar DropdownButton = __webpack_require__(773);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Dropdown.js + 13 modules\nvar Dropdown = __webpack_require__(144);\n\n// CONCATENATED MODULE: ./src/components/FormControls/SortMembers.jsx\nfunction SortMembers_slicedToArray(arr, i) { return SortMembers_arrayWithHoles(arr) || SortMembers_iterableToArrayLimit(arr, i) || SortMembers_nonIterableRest(); }\n\nfunction SortMembers_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction SortMembers_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction SortMembers_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction SortMembers() {\n  var userSort = Object(es["d" /* useSelector */])(function (state) {\n    return state.userSort;\n  });\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])(\'Sắp xếp theo\'),\n      _useState2 = SortMembers_slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var by = userSort.by,\n      value = userSort.value;\n  return react_default.a.createElement(DropdownButton["a" /* default */], {\n    title: title,\n    size: "sm",\n    variant: "light"\n  }, react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      setTitle(\'Đang Online\');\n      dispatch(controls_sortMembers(\'status\', 1));\n    }\n  }, "\\u0110ang Online", by == \'status\' && value == 1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")), react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      setTitle(\'Đang Offline\');\n      dispatch(controls_sortMembers(\'status\', -1));\n    }\n  }, "\\u0110ang Offline", by == \'status\' && value == -1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")), react_default.a.createElement(Dropdown["a" /* default */].Divider, null), react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      setTitle(\'A đến Z\');\n      dispatch(controls_sortMembers(\'name\', 1));\n    }\n  }, "A \\u0111\\u1EBFn Z", by == \'name\' && value == 1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")), react_default.a.createElement(Dropdown["a" /* default */].Item, {\n    as: "button",\n    onClick: function onClick() {\n      setTitle(\'Z đến A\');\n      dispatch(controls_sortMembers(\'name\', -1));\n    }\n  }, "Z \\u0111\\u1EBFn A", by == \'name\' && value == -1 && react_default.a.createElement("i", {\n    className: "material-icons ml-auto"\n  }, "check")));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/FormControls/CreateRoom.jsx\nfunction CreateRoom_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction CreateRoom_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { CreateRoom_ownKeys(Object(source), true).forEach(function (key) { CreateRoom_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { CreateRoom_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction CreateRoom_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction CreateRoom_slicedToArray(arr, i) { return CreateRoom_arrayWithHoles(arr) || CreateRoom_iterableToArrayLimit(arr, i) || CreateRoom_nonIterableRest(); }\n\nfunction CreateRoom_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction CreateRoom_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction CreateRoom_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction CreateRoom() {\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])({\n    name: \'\',\n    firstMessage: \'\'\n  }),\n      _useState2 = CreateRoom_slicedToArray(_useState, 2),\n      roomInfo = _useState2[0],\n      setRoomInfo = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var target = event.target;\n    var name = target.name,\n        value = target.value;\n    setRoomInfo(CreateRoom_objectSpread({}, roomInfo, CreateRoom_defineProperty({}, name, value)));\n  };\n\n  var onSubmit = function onSubmit() {\n    var name = roomInfo.name,\n        firstMessage = roomInfo.firstMessage;\n\n    if (name.trim()) {\n      dispatch(rooms_createRoom(name, firstMessage));\n      setRoomInfo(CreateRoom_objectSpread({}, roomInfo, {\n        name: \'\',\n        firstMessage: \'\'\n      }));\n    }\n  };\n\n  return react_default.a.createElement(Dialog, {\n    type: "create",\n    icon: "create",\n    title: "T\\u1EA1o ph\\xF2ng m\\u1EDBi",\n    onSubmit: onSubmit\n  }, react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "T\\xEAn ph\\xF2ng:"), react_default.a.createElement("input", {\n    type: "text",\n    name: "name",\n    value: roomInfo.name,\n    className: "form-control",\n    placeholder: "\\u0110\\u1EB7t t\\xEAn ph\\xF2ng...",\n    onChange: onChange,\n    required: true\n  })), react_default.a.createElement("div", {\n    className: "form-group"\n  }, react_default.a.createElement("label", null, "Tin nh\\u1EAFn:"), react_default.a.createElement("textarea", {\n    name: "firstMessage",\n    value: roomInfo.firstMessage,\n    className: "text-control",\n    placeholder: "Nh\\u1EADp tin nh\\u1EAFn \\u0111\\u1EA7u ti\\xEAn c\\u1EE7a b\\u1EA1n...",\n    onChange: onChange\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/FormControls/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Screen/SignIn.jsx\nfunction SignIn_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction SignIn_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { SignIn_ownKeys(Object(source), true).forEach(function (key) { SignIn_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { SignIn_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction SignIn_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction SignIn_slicedToArray(arr, i) { return SignIn_arrayWithHoles(arr) || SignIn_iterableToArrayLimit(arr, i) || SignIn_nonIterableRest(); }\n\nfunction SignIn_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction SignIn_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction SignIn_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction SignIn() {\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])({\n    email: \'\',\n    password: \'\'\n  }),\n      _useState2 = SignIn_slicedToArray(_useState, 2),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var target = event.target;\n    var name = target.name,\n        value = target.value;\n    setUserInfo(SignIn_objectSpread({}, userInfo, SignIn_defineProperty({}, name, value)));\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    var email = userInfo.email,\n        password = userInfo.password;\n    if (email.trim() && password.trim()) dispatch(authentication_signIn(email, password, history));\n  };\n\n  return react_default.a.createElement("div", {\n    className: "app"\n  }, react_default.a.createElement("div", {\n    className: "main order-md-1"\n  }, react_default.a.createElement("div", {\n    className: "start"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("h1", null, "Sign in QuanChat"), react_default.a.createElement("div", {\n    className: "third-party"\n  }, react_default.a.createElement("button", {\n    className: "btn item bg-blue"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "pages")), react_default.a.createElement("button", {\n    className: "btn item bg-teal"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "party_mode")), react_default.a.createElement("button", {\n    className: "btn item bg-purple"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "whatshot"))), react_default.a.createElement("p", null, "S\\u1EED d\\u1EE5ng t\\xE0i kho\\u1EA3n email \\u0111\\xE3 \\u0111\\u0103ng k\\xED:"), react_default.a.createElement("form", {\n    onSubmit: onSubmit\n  }, react_default.a.createElement(AuthInput, {\n    type: "email",\n    id: "inputEmail",\n    value: userInfo.email,\n    placeholder: "email@domain.com",\n    icon: "mail_outline",\n    onChange: onChange\n  }), react_default.a.createElement(AuthInput, {\n    type: "password",\n    id: "inputPassword",\n    value: userInfo.password,\n    placeholder: "M\\u1EADt kh\\u1EA9u",\n    icon: "lock_outline",\n    onChange: onChange\n  }), react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn button"\n  }, "\\u0110\\u0103ng Nh\\u1EADp"), react_default.a.createElement("div", {\n    className: "callout"\n  }, react_default.a.createElement("span", null, "Ch\\u01B0a c\\xF3 t\\xE0i kho\\u1EA3n? \\xA0", react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/sign-up"\n  }, "T\\u1EA1o ngay"))))))))), react_default.a.createElement("div", {\n    className: "aside order-md-2"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "preference"\n  }, react_default.a.createElement("h2", null, "Hello, Friend!"), react_default.a.createElement("p", null, "Nh\\u1EADp th\\xF4ng tin t\\xE0i kho\\u1EA3n v\\xE0 b\\u1EAFt \\u0111\\u1EA7u h\\xE0nh tr\\xECnh v\\u1EDBi QuanChat ngay n\\xE0o."), react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/sign-up",\n    className: "btn button"\n  }, "\\u0110\\u0103ng k\\xED"))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Screen/SignUp.jsx\nfunction SignUp_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction SignUp_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { SignUp_ownKeys(Object(source), true).forEach(function (key) { SignUp_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { SignUp_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction SignUp_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction SignUp_slicedToArray(arr, i) { return SignUp_arrayWithHoles(arr) || SignUp_iterableToArrayLimit(arr, i) || SignUp_nonIterableRest(); }\n\nfunction SignUp_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction SignUp_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction SignUp_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction SignUp() {\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])({\n    name: \'\',\n    email: \'\',\n    password: \'\'\n  }),\n      _useState2 = SignUp_slicedToArray(_useState, 2),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  var onChange = function onChange(event) {\n    var target = event.target;\n    var name = target.name,\n        value = target.value;\n    setUserInfo(SignUp_objectSpread({}, userInfo, SignUp_defineProperty({}, name, value)));\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    var name = userInfo.name,\n        email = userInfo.email,\n        password = userInfo.password;\n\n    if (name.trim() && email.trim() && password.trim()) {\n      dispatch(authentication_signUp(name, email, password));\n      setUserInfo({\n        name: \'\',\n        email: \'\',\n        password: \'\'\n      });\n    }\n  };\n\n  return react_default.a.createElement("div", {\n    className: "app"\n  }, react_default.a.createElement("div", {\n    className: "main order-md-2"\n  }, react_default.a.createElement("div", {\n    className: "start"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("h1", null, "T\\u1EA1o t\\xE0i kho\\u1EA3n"), react_default.a.createElement("div", {\n    className: "third-party"\n  }, react_default.a.createElement("button", {\n    className: "btn item bg-blue"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "pages")), react_default.a.createElement("button", {\n    className: "btn item bg-teal"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "party_mode")), react_default.a.createElement("button", {\n    className: "btn item bg-purple"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "whatshot"))), react_default.a.createElement("p", null, "S\\u1EED d\\u1EE5ng email c\\u1EE7a b\\u1EA1n \\u0111\\u1EC3 \\u0111\\u0103ng k\\xED:"), react_default.a.createElement("form", {\n    className: "signup",\n    onSubmit: onSubmit\n  }, react_default.a.createElement("div", {\n    className: "form-parent"\n  }, react_default.a.createElement(AuthInput, {\n    type: "name",\n    id: "inputName",\n    value: userInfo.name,\n    placeholder: "T\\xEAn ng\\u01B0\\u1EDDi d\\xF9ng",\n    icon: "person_outline",\n    onChange: onChange\n  }), react_default.a.createElement(AuthInput, {\n    type: "email",\n    id: "inputEmail",\n    value: userInfo.email,\n    placeholder: "\\u0110\\u1ECBa ch\\u1EC9 Email",\n    icon: "mail_outline",\n    onChange: onChange\n  })), react_default.a.createElement(AuthInput, {\n    type: "password",\n    id: "inputPassword",\n    value: userInfo.password,\n    placeholder: "M\\u1EADt kh\\u1EA9u",\n    icon: "lock_outline",\n    onChange: onChange\n  }), react_default.a.createElement("button", {\n    type: "submit",\n    className: "btn button"\n  }, "\\u0110\\u0103ng k\\xED"), react_default.a.createElement("div", {\n    className: "callout"\n  }, react_default.a.createElement("span", null, "\\u0110\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n? \\xA0", react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/"\n  }, "\\u0110\\u0103ng Nh\\u1EADp"))))))))), react_default.a.createElement("div", {\n    className: "aside order-md-1"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "preference"\n  }, react_default.a.createElement("h2", null, "Welcome Back!"), react_default.a.createElement("p", null, "\\u0110\\u1EC3 gi\\u1EEF k\\u1EBFt n\\u1ED1i v\\u1EDBi b\\u1EA1n b\\xE8, vui l\\xF2ng s\\u1EED d\\u1EE5ng th\\xF4ng tin t\\xE0i kho\\u1EA3n m\\xE0 b\\u1EA1n \\u0111\\xE3 \\u0111\\u0103ng k\\xED ."), react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/",\n    className: "btn button"\n  }, "\\u0110\\u0103ng nh\\u1EADp"))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Navigation/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction Navigation() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomFilter = _useSelector.roomFilter,\n      currentUser = _useSelector.currentUser;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var isPrivate = roomFilter.isPrivate;\n\n  var onSignOut = function onSignOut() {\n    return dispatch(authentication_signOut());\n  };\n\n  return react_default.a.createElement("div", {\n    className: "navigation"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "inside"\n  }, react_default.a.createElement("div", {\n    className: "nav nav-tab menu"\n  }, react_default.a.createElement("button", {\n    className: "btn"\n  }, react_default.a.createElement("img", {\n    className: "avatar-xl",\n    src: currentUser.avatarURL\n  })), react_default.a.createElement("a", {\n    type: "button",\n    className: "".concat(isPrivate && \'active\'),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(\'\', 0, true));\n    }\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "account_circle")), react_default.a.createElement("a", {\n    type: "button",\n    className: "".concat(!isPrivate && \'active\', " f-grow1"),\n    onClick: function onClick() {\n      return dispatch(controls_filterRooms(\'\', 0, false));\n    }\n  }, react_default.a.createElement("i", {\n    className: "material-icons active"\n  }, "chat_bubble_outline")), react_default.a.createElement("button", {\n    className: "btn mode"\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "brightness_2")), react_default.a.createElement("button", {\n    className: "btn power",\n    onClick: onSignOut\n  }, react_default.a.createElement("i", {\n    className: "material-icons"\n  }, "power_settings_new"))))));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/OverlayTrigger.js + 2 modules\nvar OverlayTrigger = __webpack_require__(779);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Tooltip.js\nvar Tooltip = __webpack_require__(774);\n\n// CONCATENATED MODULE: ./src/components/Avatar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Avatar(_ref) {\n  var name = _ref.name,\n      type = _ref.type,\n      _ref$tooltip = _ref.tooltip,\n      tooltip = _ref$tooltip === void 0 ? \'top\' : _ref$tooltip,\n      size = _ref.size;\n  var avatarSize = !size ? \'avatar-md\' : "avatar-".concat(size);\n  var avatarAPI = \'https://avatars.dicebear.com/v2\';\n\n  if (type === \'room\') {\n    avatarAPI = "".concat(avatarAPI, "/jdenticon/").concat(name, ".svg");\n  } else if (type === \'user\') {\n    var options = {\n      eyes: \'squint\',\n      eyebrow: \'raised\',\n      mouth: \'smile\'\n    };\n    options = Object.keys(options).reduce(function (res, key) {\n      return "".concat(res, "options[").concat(key, "][]=").concat(options[key], "&");\n    }, []);\n    avatarAPI = "".concat(avatarAPI, "/avataaars/").concat(name, ".svg?").concat(options);\n  }\n\n  return react_default.a.createElement(OverlayTrigger["a" /* default */], {\n    placement: tooltip,\n    overlay: react_default.a.createElement(Tooltip["a" /* default */], null, name)\n  }, react_default.a.createElement("img", {\n    className: avatarSize,\n    src: avatarAPI,\n    alt: name\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/TopBar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction TopBar() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive;\n\n  var id = roomActive.id,\n      name = roomActive.name,\n      status = roomActive.status,\n      isPrivate = roomActive.isPrivate;\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var onShowStatus = function onShowStatus(status) {\n    if (isPrivate) status = status === \'online\' ? \'Online\' : \'Offline\';else status = \'Online\';\n    return "\\u0110ang ".concat(status);\n  };\n\n  var onPhoneChat = function onPhoneChat() {\n    if (id) dispatch(controls_toggleCall());\n  };\n\n  var onVideoChat = function onVideoChat() {\n    if (id) dispatch(controls_toggleCall(true));\n  };\n\n  var onShowMembers = function onShowMembers() {\n    if (id) dispatch(controls_toggleUsersBar());\n  };\n\n  return react_default.a.createElement("div", {\n    className: "top"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "inside"\n  }, react_default.a.createElement(Avatar, {\n    name: name,\n    type: isPrivate ? \'user\' : \'room\',\n    tooltip: "left"\n  }), react_default.a.createElement("div", {\n    className: "status"\n  }, react_default.a.createElement("i", {\n    className: "material-icons ".concat(isPrivate ? status : \'online\')\n  }, "fiber_manual_record")), react_default.a.createElement("div", {\n    className: "data"\n  }, react_default.a.createElement("h5", null, name), react_default.a.createElement("span", null, onShowStatus(status))), react_default.a.createElement("button", {\n    className: "btn",\n    onClick: onPhoneChat\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-30"\n  }, "phone_in_talk")), react_default.a.createElement("button", {\n    className: "btn",\n    onClick: onVideoChat\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-36"\n  }, "videocam")), react_default.a.createElement("button", {\n    className: "btn",\n    onClick: onShowMembers\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-30"\n  }, "info"))))));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-new-window/umd/react-new-window.js\nvar react_new_window = __webpack_require__(342);\nvar react_new_window_default = /*#__PURE__*/__webpack_require__.n(react_new_window);\n\n// CONCATENATED MODULE: ./src/components/VideoCall/LocalOptions.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction LocalOptions(_ref) {\n  var children = _ref.children;\n  return react_default.a.createElement(simplewebrtc_module["k" /* UserControls */], {\n    render: function render(_ref2) {\n      var isMuted = _ref2.isMuted,\n          isPaused = _ref2.isPaused,\n          mute = _ref2.mute,\n          unmute = _ref2.unmute,\n          resumeVideo = _ref2.resumeVideo,\n          pauseVideo = _ref2.pauseVideo;\n      return react_default.a.createElement("div", {\n        className: "options"\n      }, react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: function onClick() {\n          return isPaused ? resumeVideo() : pauseVideo();\n        }\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, isPaused ? \'play_arrow\' : \'pause\')), children, react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: function onClick() {\n          return isMuted ? unmute() : mute();\n        }\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, isMuted ? \'volume_off\' : \'volume_up\')));\n    }\n  });\n}\n// CONCATENATED MODULE: ./src/components/VideoCall/Options.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction Options(_ref) {\n  var localVideos = _ref.localVideos,\n      localScreen = _ref.localScreen;\n  var dispatch = Object(es["c" /* useDispatch */])();\n  return react_default.a.createElement(LocalOptions, null, localVideos && localVideos.length ? react_default.a.createElement(simplewebrtc_module["e" /* MediaControls */], {\n    media: localVideos[0],\n    autoRemove: true,\n    render: function render(_ref2) {\n      var remove = _ref2.remove;\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: remove\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "videocam_off"));\n    }\n  }) : react_default.a.createElement(simplewebrtc_module["i" /* RequestUserMedia */], {\n    video: true,\n    audio: true,\n    render: function render(getUserMedia) {\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: getUserMedia\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "videocam"));\n    }\n  }), react_default.a.createElement("button", {\n    className: "btn option call-end",\n    onClick: function onClick() {\n      return dispatch(controls_toggleCall());\n    }\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-30"\n  }, "call_end")), localScreen ? react_default.a.createElement(simplewebrtc_module["e" /* MediaControls */], {\n    media: localScreen,\n    autoRemove: true,\n    render: function render(_ref3) {\n      var stopSharing = _ref3.stopSharing;\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: stopSharing\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "stop_screen_share"));\n    }\n  }) : react_default.a.createElement(simplewebrtc_module["h" /* RequestDisplayMedia */], {\n    render: function render(getDisplayMedia) {\n      return react_default.a.createElement("button", {\n        className: "btn option",\n        onClick: getDisplayMedia\n      }, react_default.a.createElement("i", {\n        className: "material-icons md-30"\n      }, "screen_share"));\n    }\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/VideoCall/CallStatus.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction CallStatus(_ref) {\n  var value = _ref.value;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomActive;\n  }),\n      name = _useSelector.name,\n      isPrivate = _useSelector.isPrivate;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var avatarType = isPrivate ? \'user\' : \'room\';\n\n  var onCloseCall = function onCloseCall() {\n    return dispatch(controls_toggleCall());\n  };\n\n  return react_default.a.createElement("div", {\n    className: "content"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "inside"\n  }, react_default.a.createElement("div", {\n    className: "panel"\n  }, react_default.a.createElement("div", {\n    className: "participant"\n  }, react_default.a.createElement(Avatar, {\n    name: name,\n    type: avatarType,\n    tooltip: "bottom",\n    size: "xxl"\n  }), react_default.a.createElement("span", null, value)), react_default.a.createElement(Options, null), react_default.a.createElement("button", {\n    className: "btn back",\n    onClick: onCloseCall\n  }, react_default.a.createElement("i", {\n    className: "material-icons md-24"\n  }, "chat")))))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/VideoCall/index.jsx\nfunction VideoCall_toConsumableArray(arr) { return VideoCall_arrayWithoutHoles(arr) || VideoCall_iterableToArray(arr) || VideoCall_nonIterableSpread(); }\n\nfunction VideoCall_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction VideoCall_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction VideoCall_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\nfunction VideoCall() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive,\n      videoCall = _useSelector.videoCall;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var id = roomActive.id,\n      name = roomActive.name;\n\n  var onUnload = function onUnload() {\n    return dispatch(controls_toggleCall());\n  };\n\n  return react_default.a.createElement(react_new_window_default.a, {\n    title: name,\n    onUnload: onUnload\n  }, react_default.a.createElement("link", {\n    href: "https://fonts.googleapis.com/icon?family=Material+Icons",\n    rel: "stylesheet"\n  }), react_default.a.createElement("div", {\n    className: "call"\n  }, react_default.a.createElement(simplewebrtc_module["f" /* Provider */], {\n    configUrl: SWRTC_CONFIG_URL\n  }, react_default.a.createElement(simplewebrtc_module["b" /* Connecting */], null, react_default.a.createElement(CallStatus, {\n    value: "\\u0110ang k\\u1EBFt n\\u1ED1i"\n  })), react_default.a.createElement(simplewebrtc_module["c" /* Disconnected */], null, react_default.a.createElement(CallStatus, {\n    value: "Kh\\xF4ng c\\xF3 k\\u1EBFt n\\u1ED1i"\n  })), react_default.a.createElement(simplewebrtc_module["a" /* Connected */], null, react_default.a.createElement(simplewebrtc_module["g" /* RemoteAudioPlayer */], null), react_default.a.createElement(simplewebrtc_module["i" /* RequestUserMedia */], {\n    audio: true,\n    auto: true\n  }), videoCall.cam && react_default.a.createElement(simplewebrtc_module["i" /* RequestUserMedia */], {\n    video: true,\n    auto: true\n  }), react_default.a.createElement(simplewebrtc_module["j" /* Room */], {\n    roomAddress: id,\n    name: name,\n    password: key\n  }, function (_ref) {\n    var localMedia = _ref.localMedia,\n        remoteMedia = _ref.remoteMedia;\n    var remoteVideos = remoteMedia.filter(function (m) {\n      return m.kind === \'video\';\n    });\n    var localVideos = localMedia.filter(function (m) {\n      return m.kind === \'video\' && m.shared;\n    });\n    var localScreens = localVideos.filter(function (m) {\n      return m.screenCapture;\n    });\n    return react_default.a.createElement("div", {\n      className: "video-chat"\n    }, react_default.a.createElement(simplewebrtc_module["d" /* GridLayout */], {\n      className: "w-100",\n      items: [localVideos[0]].concat(VideoCall_toConsumableArray(localScreens), VideoCall_toConsumableArray(remoteVideos)),\n      renderCell: function renderCell(item) {\n        return item && react_default.a.createElement(simplewebrtc_module["l" /* Video */], {\n          media: item\n        });\n      }\n    }), react_default.a.createElement(Options, {\n      localVideos: localVideos,\n      localScreen: localScreens[0]\n    }));\n  })))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/LeftSideBar/ChatList.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction ChatList(_ref) {\n  var match = _ref.match,\n      chatName = _ref.chatName,\n      isOnline = _ref.isOnline,\n      room = _ref.room,\n      type = _ref.type;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomActive = _useSelector.roomActive;\n\n  var id = room.id,\n      unreadCount = room.unreadCount,\n      createdAt = room.createdAt,\n      lastMessageAt = room.lastMessageAt,\n      customData = room.customData;\n  var isActive = roomActive.id === id && \'active\';\n  var isRead = unreadCount > 0 && \'unread\';\n  var lastMessage = customData.lastMessage;\n  var lastMessageTime = new Date(lastMessageAt ? lastMessageAt : createdAt).toLocaleDateString(\'vi-Vn\', {\n    weekday: \'narrow\',\n    year: \'2-digit\',\n    month: \'2-digit\',\n    day: \'2-digit\'\n  });\n\n  var showUnreadCount = function showUnreadCount(unreadCount) {\n    if (unreadCount > 0) {\n      var color = unreadCount > 10 ? \'pink\' : \'yellow\';\n      return react_default.a.createElement("div", {\n        className: "new bg-".concat(color)\n      }, react_default.a.createElement("span", null, unreadCount));\n    }\n  };\n\n  return react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "".concat(match.path, "/").concat(id),\n    className: "".concat(isRead, " ").concat(isActive, " single")\n  }, react_default.a.createElement(Avatar, {\n    name: chatName,\n    type: type\n  }), react_default.a.createElement("div", {\n    className: "status"\n  }, react_default.a.createElement("i", {\n    className: "material-icons ".concat(isOnline)\n  }, "fiber_manual_record")), react_default.a.createElement("div", {\n    className: "data"\n  }, react_default.a.createElement("h5", null, chatName), react_default.a.createElement("span", null, lastMessageTime), react_default.a.createElement("p", null, lastMessage ? lastMessage : \'Chưa có tin nhắn\')), showUnreadCount(unreadCount));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/LeftSideBar/Contacts.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction Contacts(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      rooms = _useSelector.rooms,\n      roomFilter = _useSelector.roomFilter;\n\n  return react_default.a.createElement("div", {\n    className: "discussions"\n  }, react_default.a.createElement("h1", null, "Danh s\\xE1ch li\\xEAn h\\u1EC7"), react_default.a.createElement("div", {\n    className: "list-group"\n  }, rooms.filter(function (room) {\n    if (!room.id) return;\n    return room.isPrivate;\n  }).filter(function (room) {\n    var _onGetPrivateUser = onGetPrivateUser(room, currentUser.id, true),\n        roomName = _onGetPrivateUser.roomName,\n        roomStatus = _onGetPrivateUser.roomStatus;\n\n    if (roomFilter.status === 0) return roomName.indexOf(roomFilter.name) !== -1;\n    return roomName.indexOf(roomFilter.name) !== -1 && roomStatus === roomFilter.status;\n  }).map(function (room) {\n    var _onGetPrivateUser2 = onGetPrivateUser(room, currentUser.id, false),\n        roomName = _onGetPrivateUser2.roomName,\n        roomStatus = _onGetPrivateUser2.roomStatus;\n\n    return react_default.a.createElement(ChatList, {\n      key: room.id,\n      match: match,\n      chatName: roomName,\n      isOnline: roomStatus,\n      room: room,\n      type: "user"\n    });\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/LeftSideBar/Rooms.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction Rooms(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      rooms = _useSelector.rooms,\n      roomFilter = _useSelector.roomFilter;\n\n  return react_default.a.createElement("div", {\n    className: "discussions"\n  }, react_default.a.createElement("h1", null, "C\\xE1c ph\\xF2ng chat"), react_default.a.createElement("div", {\n    className: "list-group"\n  }, rooms.filter(function (room) {\n    if (!room.id) return;\n    return !room.isPrivate;\n  }).filter(function (_ref2) {\n    var name = _ref2.name,\n        unreadCount = _ref2.unreadCount;\n    var roomName = name.toLowerCase();\n    var roomStatus = unreadCount === 0 ? 1 : -1;\n    if (roomFilter.status === 0) return roomName.indexOf(roomFilter.name) !== -1;\n    return roomName.indexOf(roomFilter.name) !== -1 && roomStatus === roomFilter.status;\n  }).sort(function (a, b) {\n    var lastMessageA = new Date(a.lastMessageAt);\n    var lastMessageB = new Date(b.lastMessageAt);\n    return lastMessageB - lastMessageA;\n  }).map(function (room) {\n    var id = room.id,\n        name = room.name,\n        userIds = room.userIds;\n    var isOnline = userIds && userIds.find(function (id) {\n      return currentUser.id === id;\n    });\n    return react_default.a.createElement(ChatList, {\n      key: id,\n      match: match,\n      chatName: name,\n      isOnline: "".concat(isOnline && \'online\'),\n      room: room,\n      type: "room"\n    });\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Spinner.js\nvar Spinner = __webpack_require__(775);\n\n// CONCATENATED MODULE: ./src/components/LeftSideBar/RoomStatus.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction RoomStatus(_ref) {\n  var title = _ref.title;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      isLoading = _useSelector.isLoading;\n\n  return react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "no-messages"\n  }, !isLoading && react_default.a.createElement("i", {\n    className: "material-icons md-48"\n  }, "forum"), react_default.a.createElement("p", null, title), isLoading && react_default.a.createElement(Spinner["a" /* default */], {\n    animation: "border",\n    variant: "primary"\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/LeftSideBar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\nfunction LeftSideBar(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.roomFilter;\n  }),\n      isPrivate = _useSelector.isPrivate;\n\n  return react_default.a.createElement("div", {\n    className: "sidebar"\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement(FilterRooms, {\n    placeholder: isPrivate ? \'Tìm kiếm liên hệ...\' : \'Tìm kiếm phòng chat...\'\n  }), !isPrivate && react_default.a.createElement(CreateRoom, null), isPrivate ? react_default.a.createElement(Contacts, {\n    match: match\n  }) : react_default.a.createElement(Rooms, {\n    match: match\n  }))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/RightSideBar/Members.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction Members(_ref) {\n  var match = _ref.match,\n      adminId = _ref.adminId,\n      isPrivate = _ref.isPrivate;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      rooms = _useSelector.rooms,\n      roomUsers = _useSelector.roomUsers,\n      userSort = _useSelector.userSort;\n\n  var privateRooms = rooms.filter(function (room) {\n    return room.isPrivate;\n  }).map(function (_ref2) {\n    var id = _ref2.id,\n        customData = _ref2.customData;\n    var memberIds = customData.members.map(function (member) {\n      return member.id;\n    });\n    return {\n      id: id,\n      memberIds: memberIds\n    };\n  });\n\n  var onShowMemberData = function onShowMemberData(id, createdDate) {\n    createdDate = "\\u0110\\u01B0\\u1EE3c t\\u1EA1o v\\xE0o th\\xE1ng ".concat(createdDate);\n    if (isPrivate) return createdDate;\n    return adminId === id ? \'Quản trị viên\' : createdDate;\n  };\n\n  return react_default.a.createElement("div", {\n    className: "contacts"\n  }, react_default.a.createElement("div", {\n    className: "sort-members"\n  }, react_default.a.createElement("h1", null, "Th\\xE0nh vi\\xEAn", react_default.a.createElement("hr", null)), react_default.a.createElement(SortMembers, null)), react_default.a.createElement("div", {\n    className: "list-group"\n  }, roomUsers.sort(function (a, b) {\n    var by = userSort.by,\n        value = userSort.value;\n\n    if (by == \'name\') {\n      var nameA = a.name.toLowerCase();\n      var nameB = b.name.toLowerCase();\n      if (nameA > nameB) return value;\n      if (nameA < nameB) return -value;\n      return 0;\n    } else if (by == \'status\') {\n      var stateA = a.presence.state;\n      var stateB = b.presence.state;\n      if (stateA > stateB) return -value;\n      if (stateA < stateB) return value;\n      return 0;\n    }\n  }).map(function (_ref3) {\n    var id = _ref3.id,\n        name = _ref3.name,\n        presence = _ref3.presence,\n        createdAt = _ref3.createdAt;\n    var index = privateRooms.findIndex(function (_ref4) {\n      var memberIds = _ref4.memberIds;\n      if (currentUser.id === id) return memberIds.length === 1;\n      return memberIds.includes(currentUser.id) && memberIds.includes(id);\n    });\n    var state = presence.state;\n    var createdDate = new Date(createdAt).toLocaleDateString(\'vi-VN\', {\n      year: \'2-digit\',\n      month: \'numeric\'\n    });\n    return react_default.a.createElement(react_router_dom["b" /* Link */], {\n      key: id,\n      to: "".concat(match.path, "/").concat(privateRooms[index].id),\n      className: "contact"\n    }, react_default.a.createElement(Avatar, {\n      name: name,\n      type: "user"\n    }), react_default.a.createElement("div", {\n      className: "status"\n    }, react_default.a.createElement("i", {\n      className: "material-icons ".concat(state)\n    }, "fiber_manual_record")), react_default.a.createElement("div", {\n      className: "data"\n    }, react_default.a.createElement("h5", null, name), react_default.a.createElement("p", null, onShowMemberData(id, createdDate))), react_default.a.createElement("div", {\n      className: "person-add"\n    }, react_default.a.createElement("i", {\n      className: "material-icons"\n    }, "person")));\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Jumbotron.js\nvar Jumbotron = __webpack_require__(776);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Accordion.js + 4 modules\nvar Accordion = __webpack_require__(778);\n\n// EXTERNAL MODULE: ./node_modules/react-bootstrap/esm/Card.js + 2 modules\nvar Card = __webpack_require__(780);\n\n// EXTERNAL MODULE: ./node_modules/react-images/dist/react-images.es.js + 1 modules\nvar react_images_es = __webpack_require__(145);\n\n// CONCATENATED MODULE: ./src/components/Images/ImageCarousel.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction ImageCarousel() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      images = _useSelector.images,\n      showCarousel = _useSelector.showCarousel;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var toggleModal = function toggleModal() {\n    return dispatch(controls_toggleCarousel());\n  };\n\n  return react_default.a.createElement(react_images_es["b" /* ModalGateway */], null, react_default.a.createElement(react_images_es["a" /* Modal */], {\n    onClose: toggleModal\n  }, react_default.a.createElement(react_images_es["c" /* default */], {\n    currentIndex: showCarousel.imageIndex,\n    views: images\n  })));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Images/ImageList.jsx\nfunction ImageList_slicedToArray(arr, i) { return ImageList_arrayWithHoles(arr) || ImageList_iterableToArrayLimit(arr, i) || ImageList_nonIterableRest(); }\n\nfunction ImageList_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }\n\nfunction ImageList_iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction ImageList_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction ImageList() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      images = _useSelector.images,\n      showCarousel = _useSelector.showCarousel;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n\n  var _useState = Object(react["useState"])(false),\n      _useState2 = ImageList_slicedToArray(_useState, 2),\n      rotate = _useState2[0],\n      setRotate = _useState2[1];\n\n  var onRotateIcon = function onRotateIcon() {\n    return setRotate(!rotate);\n  };\n\n  var onShowImages = function onShowImages() {\n    if (images.length === 0) return react_default.a.createElement(Jumbotron["a" /* default */], {\n      className: "m-0 text-center"\n    }, react_default.a.createElement("i", {\n      className: "material-icons display-4"\n    }, "photo_size_select_actual"), react_default.a.createElement("p", null, "Kh\\xF4ng c\\xF3 h\\xECnh \\u1EA3nh \\u0111\\u1EC3 hi\\u1EC3n th\\u1ECB"));\n    return images.map(function (url, index) {\n      return react_default.a.createElement("img", {\n        key: index,\n        className: "img-thumbnail",\n        src: url.src,\n        alt: "attachment",\n        onClick: function onClick() {\n          return dispatch(controls_toggleCarousel(index, \'ImageList\'));\n        }\n      });\n    });\n  };\n\n  Object(react["useEffect"])(function () {}, [images]);\n  return react_default.a.createElement(Accordion["a" /* default */], null, react_default.a.createElement(Card["a" /* default */], null, react_default.a.createElement(Card["a" /* default */].Header, null, react_default.a.createElement(Accordion["a" /* default */].Toggle, {\n    as: Button["a" /* default */],\n    variant: "default",\n    eventKey: "0",\n    onClick: onRotateIcon\n  }, "\\u1EA2nh \\u0111\\xE3 chia s\\u1EBB", react_default.a.createElement("i", {\n    className: "material-icons ".concat(rotate && \'rotate\')\n  }, "keyboard_arrow_left"))), react_default.a.createElement(Accordion["a" /* default */].Collapse, {\n    eventKey: "0"\n  }, react_default.a.createElement(Card["a" /* default */].Body, {\n    className: "p-0"\n  }, onShowImages(), showCarousel.where === \'ImageList\' && react_default.a.createElement(ImageCarousel, null)))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Images/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/RightSideBar/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction RightSideBar(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      showUsersBar = _useSelector.showUsersBar,\n      roomActive = _useSelector.roomActive;\n\n  var name = roomActive.name,\n      createdByUserId = roomActive.createdByUserId,\n      isPrivate = roomActive.isPrivate;\n  var avatarType = isPrivate ? \'user\' : \'room\';\n  return react_default.a.createElement("div", {\n    className: "sidebar ".concat(!showUsersBar && \'d-none\')\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, react_default.a.createElement("div", {\n    className: "room-info"\n  }, react_default.a.createElement(Avatar, {\n    name: name,\n    type: avatarType,\n    size: "xl"\n  }), react_default.a.createElement("h4", null, name)), react_default.a.createElement("hr", null), react_default.a.createElement(Members, {\n    match: match,\n    adminId: createdByUserId,\n    isPrivate: isPrivate\n  })), react_default.a.createElement("hr", null), react_default.a.createElement(ImageList, null)));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/Wrapper.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction Wrapper(_ref) {\n  var userType = _ref.userType,\n      userName = _ref.userName,\n      updatedAt = _ref.updatedAt,\n      children = _ref.children;\n  return react_default.a.createElement("div", {\n    className: "message ".concat(userType)\n  }, userType !== \'me\' && react_default.a.createElement(Avatar, {\n    name: userName,\n    type: "user"\n  }), react_default.a.createElement("div", {\n    className: "text-main"\n  }, react_default.a.createElement("div", {\n    className: "text-group ".concat(userType)\n  }, children), updatedAt && react_default.a.createElement("span", null, new Date(updatedAt).toLocaleTimeString(\'en-US\', {\n    hour: \'2-digit\',\n    minute: \'2-digit\'\n  }))));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/react-player/lib/ReactPlayer.js\nvar ReactPlayer = __webpack_require__(345);\nvar ReactPlayer_default = /*#__PURE__*/__webpack_require__.n(ReactPlayer);\n\n// EXTERNAL MODULE: ./node_modules/@microlink/react/dist/microlink.m.js\nvar microlink_m = __webpack_require__(346);\n\n// CONCATENATED MODULE: ./src/components/MessageList/LinkPreview.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction LinkPreview(_ref) {\n  var urlMatches = _ref.urlMatches;\n  var videoSignal = {\n    youtube: \'watch?v=\',\n    facebook: \'videos\'\n  };\n  return urlMatches.map(function (url, index) {\n    if (url.includes(\'youtube\') && url.includes(videoSignal.youtube) || url.includes(\'facebook\') && url.includes(videoSignal.facebook)) return react_default.a.createElement(ReactPlayer_default.a, {\n      key: index,\n      className: "mt-2",\n      url: url,\n      width: "100%",\n      height: "300px",\n      controls: true\n    });\n    return react_default.a.createElement(microlink_m["a" /* default */], {\n      key: index,\n      className: "mt-2",\n      url: url\n    });\n  });\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/Content.jsx\nfunction Content_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\nfunction Content(_ref) {\n  var currentUserName = _ref.currentUserName,\n      text = _ref.text;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      roomUsers = _useSelector.roomUsers;\n\n  var insertTextAtIndices = function insertTextAtIndices(text, obj) {\n    return text.replace(/./g, function (character, index) {\n      return obj[index] ? obj[index] + character : character;\n    });\n  };\n\n  var messageText = text;\n  var urlMatches = text.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\n  var mentions = text.match(/@[a-zA-Z0-9]+/g) || [];\n  var roomUserNames = roomUsers.map(function (user) {\n    return "@".concat(user.name);\n  });\n  var mentionedUsers = mentions.filter(function (username) {\n    return roomUserNames.includes(username);\n  });\n  urlMatches.forEach(function (link) {\n    var _insertTextAtIndices;\n\n    var startIndex = text.indexOf(link);\n    var endIndex = startIndex + link.length;\n    messageText = insertTextAtIndices(messageText, (_insertTextAtIndices = {}, Content_defineProperty(_insertTextAtIndices, startIndex, "<a class=\\"embedded-link\\" href=\\"".concat(link, "\\" target=\\"_blank\\">")), Content_defineProperty(_insertTextAtIndices, endIndex, \'</a>\'), _insertTextAtIndices));\n  });\n  mentionedUsers.forEach(function (user) {\n    var _insertTextAtIndices2;\n\n    var startIndex = messageText.indexOf(user);\n    var endIndex = startIndex + user.length;\n    var isMe = currentUserName === user.substring(1) ? \'danger\' : \'info\';\n    messageText = insertTextAtIndices(messageText, (_insertTextAtIndices2 = {}, Content_defineProperty(_insertTextAtIndices2, startIndex, "<span class=\\"badge badge-pill badge-".concat(isMe, "\\">")), Content_defineProperty(_insertTextAtIndices2, endIndex, \'</span>\'), _insertTextAtIndices2));\n  });\n  return react_default.a.createElement("div", null, react_default.a.createElement("p", {\n    dangerouslySetInnerHTML: {\n      __html: messageText\n    }\n  }), react_default.a.createElement(LinkPreview, {\n    urlMatches: urlMatches\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/Message.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\nfunction Message(_ref) {\n  var parts = _ref.parts,\n      userType = _ref.userType;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      images = _useSelector.images;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  Object(react["useEffect"])(function () {}, [images]);\n  if (parts.length === 0) return;\n  return parts.map(function (part, index) {\n    var partType = part.partType,\n        payload = part.payload;\n    if (partType === \'inline\') return react_default.a.createElement("div", {\n      key: index,\n      className: "text ".concat(userType)\n    }, react_default.a.createElement(Content, {\n      currentUserName: currentUser.name,\n      text: payload.content\n    }));\n    if (Date.now() > Date.parse(payload._expiration)) payload._fetchNewDownloadURL();\n    return react_default.a.createElement("img", {\n      key: index,\n      className: "w-25 img-thumbnail \\n                    ".concat(index !== parts.length - 1 && \'mb-3\', "\\n                "),\n      src: payload._downloadURL,\n      alt: "attachment",\n      onClick: function onClick() {\n        return dispatch(controls_toggleCarousel(index, \'MessageList\'));\n      }\n    });\n  });\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/MessageList/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\nfunction MessageList(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      currentUser = _useSelector.currentUser,\n      roomUsers = _useSelector.roomUsers,\n      typingUsers = _useSelector.typingUsers,\n      messages = _useSelector.messages,\n      isLoading = _useSelector.isLoading,\n      justLoadMore = _useSelector.justLoadMore,\n      showCarousel = _useSelector.showCarousel;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var messageNode = Object(react["useRef"])(null);\n  var messageDay = 0;\n  var roomId = match.params.roomId;\n  var roomNotFound = !roomUsers.length;\n  Object(react["useEffect"])(function () {\n    dispatch(rooms_enterRoom(roomId));\n  }, [roomId]);\n  Object(react["useEffect"])(function () {\n    messageNode.current.scrollIntoView();\n  }, [isLoading]);\n  Object(react["useEffect"])(function () {\n    if (document.hasFocus() && roomId && !justLoadMore) messageNode.current.scrollIntoView({\n      behavior: \'smooth\'\n    });\n  }, [messages, typingUsers]);\n\n  var onShowMessageDay = function onShowMessageDay(updatedAt) {\n    var sendDay = new Date(updatedAt).setHours(0, 0, 0, 0);\n\n    if (sendDay > messageDay) {\n      messageDay = sendDay;\n      return react_default.a.createElement("div", {\n        className: "date"\n      }, react_default.a.createElement("hr", null), react_default.a.createElement("span", null, messageDay === new Date().setHours(0, 0, 0, 0) ? \'Hôm nay\' : new Date(updatedAt).toLocaleDateString(\'vi-VN\', {\n        weekday: \'narrow\',\n        year: \'numeric\',\n        month: \'2-digit\',\n        day: \'2-digit\'\n      })), react_default.a.createElement("hr", null));\n    }\n  };\n\n  var onShowMessage = function onShowMessage() {\n    if (messages.length === 0 && !isLoading && !roomNotFound) return react_default.a.createElement(RoomStatus, {\n      title: "B\\u1EAFt \\u0111\\u1EA7u cu\\u1ED9c tr\\xF2 chuy\\u1EC7n m\\u1EDBi..."\n    });else if (isLoading) return react_default.a.createElement(RoomStatus, {\n      title: "\\u0110ang t\\u1EA3i, \\u0111\\u1EE3i ch\\xFAt !"\n    });else if (!isLoading && roomNotFound) return react_default.a.createElement(RoomStatus, {\n      title: "404 Not Found :("\n    });\n    return messages.map(function (_ref2) {\n      var id = _ref2.id,\n          sender = _ref2.sender,\n          updatedAt = _ref2.updatedAt,\n          parts = _ref2.parts;\n      var userType = sender.id === currentUser.id && \'me\';\n      return react_default.a.createElement("div", {\n        key: id\n      }, onShowMessageDay(updatedAt), react_default.a.createElement(Wrapper, {\n        userType: userType,\n        userName: sender.name,\n        updatedAt: updatedAt\n      }, react_default.a.createElement(Message, {\n        parts: parts,\n        userType: userType\n      })));\n    });\n  };\n\n  var onShowTypingUsers = function onShowTypingUsers() {\n    return typingUsers.map(function (user) {\n      var id = user.id,\n          name = user.name;\n      if (currentUser.id === id) return;\n      return react_default.a.createElement(Wrapper, {\n        key: id,\n        userType: "text typing",\n        userName: name\n      }, react_default.a.createElement("div", {\n        className: "wave"\n      }, react_default.a.createElement("span", {\n        className: "dot"\n      }), "\\xA0", react_default.a.createElement("span", {\n        className: "dot"\n      }), "\\xA0", react_default.a.createElement("span", {\n        className: "dot"\n      })));\n    });\n  };\n\n  return react_default.a.createElement("div", {\n    className: "col-md-12"\n  }, onShowMessage(), typingUsers.length > 0 && onShowTypingUsers(), showCarousel.where === \'MessageList\' && react_default.a.createElement(ImageCarousel, null), react_default.a.createElement("div", {\n    ref: messageNode\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Screen/Chat.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\n\n\nfunction Chat(_ref) {\n  var match = _ref.match;\n\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state;\n  }),\n      authentication = _useSelector.authentication,\n      notification = _useSelector.notification,\n      isLoading = _useSelector.isLoading,\n      videoCall = _useSelector.videoCall,\n      rooms = _useSelector.rooms;\n\n  var dispatch = Object(es["c" /* useDispatch */])();\n  var chatNode = Object(react["useRef"])(null);\n\n  var enablePermission = function enablePermission() {\n    return dispatch(notification_grantPermission());\n  };\n\n  var onShowRoomStatus = function onShowRoomStatus() {\n    if (isLoading) return react_default.a.createElement(RoomStatus, {\n      title: "\\u0110ang k\\u1EBFt n\\u1ED1i m\\xE1y ch\\u1EE7"\n    });else if (rooms.length > 0) return react_default.a.createElement(RoomStatus, {\n      title: "Ch\\u1ECDn ph\\xF2ng \\u0111\\u1EC3 b\\u1EAFt \\u0111\\u1EA7u chat n\\xE0o !"\n    });\n    return react_default.a.createElement(RoomStatus, {\n      title: "M\\u1EDDi b\\u1EA1n t\\u1EA1o ph\\xF2ng chat m\\u1EDBi !"\n    });\n  };\n\n  var onScroll = function onScroll(event) {\n    if (event.target.scrollTop === 0) dispatch(messages_loadMoreMessages());\n  };\n\n  Object(react["useEffect"])(function () {\n    dispatch(authentication_connect(authentication.userId));\n  }, []);\n  Object(react["useEffect"])(function () {\n    chatNode.current.scrollIntoView();\n  }, [isLoading]);\n  return react_default.a.createElement("div", {\n    className: "app"\n  }, notification && react_default.a.createElement("div", {\n    className: "notification-toast"\n  }, "QuanChat c\\u1EA7n b\\u1EA1n cho ph\\xE9p \\u0111\\u1EC3\\xA0", react_default.a.createElement("span", {\n    onClick: enablePermission\n  }, "hi\\u1EC3n th\\u1ECB th\\xF4ng b\\xE1o")), react_default.a.createElement(Navigation, null), react_default.a.createElement(LeftSideBar, {\n    match: match\n  }), react_default.a.createElement("div", {\n    className: "main"\n  }, react_default.a.createElement("div", {\n    className: "chat",\n    ref: chatNode\n  }, react_default.a.createElement(TopBar, null), react_default.a.createElement("div", {\n    className: "content",\n    onScroll: onScroll\n  }, react_default.a.createElement("div", {\n    className: "container"\n  }, react_default.a.createElement(react_router["d" /* Switch */], null, react_default.a.createElement(react_router["b" /* Route */], {\n    exact: true,\n    path: match.path\n  }, onShowRoomStatus()), rooms.map(function (room) {\n    if (!room) return;\n    return react_default.a.createElement(react_router["b" /* Route */], {\n      key: room.id,\n      path: "".concat(match.path, "/:roomId"),\n      component: MessageList\n    });\n  }), react_default.a.createElement(react_router["b" /* Route */], null, onShowRoomStatus())))), react_default.a.createElement(SendMessage, null)), videoCall.show && react_default.a.createElement(VideoCall, null)), react_default.a.createElement(RightSideBar, {\n    match: match\n  }));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Screen/NotFound.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\nfunction NotFound() {\n  return react_default.a.createElement("div", {\n    className: "not-found"\n  }, react_default.a.createElement("svg", {\n    width: "380px",\n    height: "500px",\n    viewBox: "0 0 837 1045"\n  }, react_default.a.createElement("g", {\n    id: "Page-1",\n    stroke: "none",\n    strokeWidth: 1,\n    fill: "none",\n    fillRule: "evenodd"\n  }, react_default.a.createElement("path", {\n    d: "M353,9 L626.664028,170 L626.664028,487 L353,642 L79.3359724,487 L79.3359724,170 L353,9 Z",\n    id: "Polygon-1",\n    stroke: "#007FB2",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M78.5,529 L147,569.186414 L147,648.311216 L78.5,687 L10,648.311216 L10,569.186414 L78.5,529 Z",\n    id: "Polygon-2",\n    stroke: "#EF4A5B",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M773,186 L827,217.538705 L827,279.636651 L773,310 L719,279.636651 L719,217.538705 L773,186 Z",\n    id: "Polygon-3",\n    stroke: "#795D9C",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M639,529 L773,607.846761 L773,763.091627 L639,839 L505,763.091627 L505,607.846761 L639,529 Z",\n    id: "Polygon-4",\n    stroke: "#F2773F",\n    strokeWidth: 6\n  }), react_default.a.createElement("path", {\n    d: "M281,801 L383,861.025276 L383,979.21169 L281,1037 L179,979.21169 L179,861.025276 L281,801 Z",\n    id: "Polygon-5",\n    stroke: "#36B455",\n    strokeWidth: 6\n  }))), react_default.a.createElement("div", {\n    className: "not-found-content"\n  }, react_default.a.createElement("h1", null, "404"), react_default.a.createElement("p", null, "Kh\\xF4ng t\\xECm th\\u1EA5y trang b\\u1EA1n y\\xEAu c\\u1EA7u"), react_default.a.createElement("div", {\n    className: "buttons-con"\n  }, react_default.a.createElement("div", {\n    className: "action-link-wrap"\n  }, react_default.a.createElement(react_router_dom["b" /* Link */], {\n    to: "/"\n  }, "V\\u1EC1 trang ch\\u1EE7"), react_default.a.createElement("a", {\n    href: "https://github.com/18520339",\n    target: "_blank"\n  }, "Li\\xEAn h\\u1EC7")))));\n}\n/* eslint-enable */\n// CONCATENATED MODULE: ./src/components/Screen/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n/* eslint-enable */\n// EXTERNAL MODULE: ./src/scss/style.scss\nvar style = __webpack_require__(763);\n\n// CONCATENATED MODULE: ./src/components/App/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\nfunction App() {\n  var _useSelector = Object(es["d" /* useSelector */])(function (state) {\n    return state.authentication;\n  }),\n      currentScreen = _useSelector.currentScreen;\n\n  return react_default.a.createElement(react_router_dom["a" /* HashRouter */], null, react_default.a.createElement(react_router["d" /* Switch */], null, react_default.a.createElement(react_router["a" /* Redirect */], {\n    exact: true,\n    from: "/",\n    to: "/room"\n  }), react_default.a.createElement(react_router["b" /* Route */], {\n    path: "/room",\n    component: currentScreen === \'SignIn\' ? SignIn : Chat\n  }), react_default.a.createElement(react_router["b" /* Route */], {\n    path: "/sign-up",\n    component: SignUp\n  }), react_default.a.createElement(react_router["b" /* Route */], {\n    component: NotFound\n  })));\n}\n/* eslint-enable */\n// EXTERNAL MODULE: ./node_modules/material-design-icons/iconfont/material-icons.css\nvar material_icons = __webpack_require__(767);\n\n// EXTERNAL MODULE: ./node_modules/bootstrap/dist/css/bootstrap.min.css\nvar bootstrap_min = __webpack_require__(768);\n\n// EXTERNAL MODULE: ./node_modules/bootstrap/dist/js/bootstrap.bundle.min.js\nvar bootstrap_bundle_min = __webpack_require__(769);\n\n// EXTERNAL MODULE: ./node_modules/jquery/dist/jquery.js\nvar jquery = __webpack_require__(329);\n\n// CONCATENATED MODULE: ./src/index.jsx\n/* jshint esversion: 10 */\n\n/* eslint-disable */\n\n\n\n\n\n\n\n\n\nreact_dom_default.a.render(react_default.a.createElement(es["a" /* Provider */], {\n  store: reducers\n}, react_default.a.createElement(App, null)), document.getElementById(\'root\'));\n/* eslint-enable *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///770\n')}});